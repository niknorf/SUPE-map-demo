{"ast":null,"code":"\"use strict\";\n\nvar keys = require(\"../keys\"),\n    value = require(\"../valid-value\"),\n    max = Math.max;\n\nmodule.exports = function (dest, src\n/*, …srcn*/\n) {\n  var error,\n      i,\n      length = max(arguments.length, 2),\n      assign;\n  dest = Object(value(dest));\n\n  assign = function (key) {\n    try {\n      dest[key] = src[key];\n    } catch (e) {\n      if (!error) error = e;\n    }\n  };\n\n  for (i = 1; i < length; ++i) {\n    src = arguments[i];\n    keys(src).forEach(assign);\n  }\n\n  if (error !== undefined) throw error;\n  return dest;\n};","map":{"version":3,"sources":["C:/Users/vlasoks/Documents/GitHub/SUPE-map-demo/node_modules/es5-ext/object/assign/shim.js"],"names":["keys","require","value","max","Math","module","exports","dest","src","error","i","length","arguments","assign","Object","key","e","forEach","undefined"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAIC,OAAO,CAAC,SAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,gBAAD,CADnB;AAAA,IAEIE,GAAG,GAAKC,IAAI,CAACD,GAFjB;;AAIAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC;AAAG;AAAnB,EAAgC;AAChD,MAAIC,KAAJ;AAAA,MAAWC,CAAX;AAAA,MAAcC,MAAM,GAAGR,GAAG,CAACS,SAAS,CAACD,MAAX,EAAmB,CAAnB,CAA1B;AAAA,MAAiDE,MAAjD;AACAN,EAAAA,IAAI,GAAGO,MAAM,CAACZ,KAAK,CAACK,IAAD,CAAN,CAAb;;AACAM,EAAAA,MAAM,GAAG,UAAUE,GAAV,EAAe;AACvB,QAAI;AACHR,MAAAA,IAAI,CAACQ,GAAD,CAAJ,GAAYP,GAAG,CAACO,GAAD,CAAf;AACA,KAFD,CAEE,OAAOC,CAAP,EAAU;AACX,UAAI,CAACP,KAAL,EAAYA,KAAK,GAAGO,CAAR;AACZ;AACD,GAND;;AAOA,OAAKN,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,MAAhB,EAAwB,EAAED,CAA1B,EAA6B;AAC5BF,IAAAA,GAAG,GAAGI,SAAS,CAACF,CAAD,CAAf;AACAV,IAAAA,IAAI,CAACQ,GAAD,CAAJ,CAAUS,OAAV,CAAkBJ,MAAlB;AACA;;AACD,MAAIJ,KAAK,KAAKS,SAAd,EAAyB,MAAMT,KAAN;AACzB,SAAOF,IAAP;AACA,CAhBD","sourcesContent":["\"use strict\";\r\n\r\nvar keys  = require(\"../keys\")\r\n  , value = require(\"../valid-value\")\r\n  , max   = Math.max;\r\n\r\nmodule.exports = function (dest, src/*, …srcn*/) {\r\n\tvar error, i, length = max(arguments.length, 2), assign;\r\n\tdest = Object(value(dest));\r\n\tassign = function (key) {\r\n\t\ttry {\r\n\t\t\tdest[key] = src[key];\r\n\t\t} catch (e) {\r\n\t\t\tif (!error) error = e;\r\n\t\t}\r\n\t};\r\n\tfor (i = 1; i < length; ++i) {\r\n\t\tsrc = arguments[i];\r\n\t\tkeys(src).forEach(assign);\r\n\t}\r\n\tif (error !== undefined) throw error;\r\n\treturn dest;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}