{"ast":null,"code":"'use strict';\n\nvar stringifyFont = require('css-font/stringify');\n\nvar defaultChars = [32, 126];\nmodule.exports = atlas;\n\nfunction atlas(options) {\n  options = options || {};\n  var shape = options.shape ? options.shape : options.canvas ? [options.canvas.width, options.canvas.height] : [512, 512];\n  var canvas = options.canvas || document.createElement('canvas');\n  var font = options.font;\n  var step = typeof options.step === 'number' ? [options.step, options.step] : options.step || [32, 32];\n  var chars = options.chars || defaultChars;\n  if (font && typeof font !== 'string') font = stringifyFont(font);\n\n  if (!Array.isArray(chars)) {\n    chars = String(chars).split('');\n  } else if (chars.length === 2 && typeof chars[0] === 'number' && typeof chars[1] === 'number') {\n    var newchars = [];\n\n    for (var i = chars[0], j = 0; i <= chars[1]; i++) {\n      newchars[j++] = String.fromCharCode(i);\n    }\n\n    chars = newchars;\n  }\n\n  shape = shape.slice();\n  canvas.width = shape[0];\n  canvas.height = shape[1];\n  var ctx = canvas.getContext('2d');\n  ctx.fillStyle = '#000';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.font = font;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = '#fff';\n  var x = step[0] / 2;\n  var y = step[1] / 2;\n\n  for (var i = 0; i < chars.length; i++) {\n    ctx.fillText(chars[i], x, y);\n    if ((x += step[0]) > shape[0] - step[0] / 2) x = step[0] / 2, y += step[1];\n  }\n\n  return canvas;\n}","map":{"version":3,"sources":["/Users/nikitavolynkin/Documents/map/newmap/SUPE-map-demo/node_modules/font-atlas/index.js"],"names":["stringifyFont","require","defaultChars","module","exports","atlas","options","shape","canvas","width","height","document","createElement","font","step","chars","Array","isArray","String","split","length","newchars","i","j","fromCharCode","slice","ctx","getContext","fillStyle","fillRect","textAlign","textBaseline","x","y","fillText"],"mappings":"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","sourcesContent":["'use strict'\n\nvar stringifyFont = require('css-font/stringify')\nvar defaultChars = [32, 126]\n\nmodule.exports = atlas\n\nfunction atlas(options) {\n  options = options || {}\n\n  var shape  = options.shape ? options.shape : options.canvas ? [options.canvas.width, options.canvas.height] : [512, 512]\n  var canvas = options.canvas || document.createElement('canvas')\n  var font   = options.font\n  var step   = typeof options.step === 'number' ? [options.step, options.step] : options.step || [32, 32]\n  var chars  = options.chars || defaultChars\n\n  if (font && typeof font !== 'string') font = stringifyFont(font)\n\n  if (!Array.isArray(chars)) {\n    chars = String(chars).split('')\n  } else\n  if (chars.length === 2\n    && typeof chars[0] === 'number'\n    && typeof chars[1] === 'number'\n  ) {\n    var newchars = []\n\n    for (var i = chars[0], j = 0; i <= chars[1]; i++) {\n      newchars[j++] = String.fromCharCode(i)\n    }\n\n    chars = newchars\n  }\n\n  shape = shape.slice()\n  canvas.width  = shape[0]\n  canvas.height = shape[1]\n\n  var ctx = canvas.getContext('2d')\n\n  ctx.fillStyle = '#000'\n  ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n  ctx.font = font\n  ctx.textAlign = 'center'\n  ctx.textBaseline = 'middle'\n  ctx.fillStyle = '#fff'\n\n  var x = step[0] / 2\n  var y = step[1] / 2\n  for (var i = 0; i < chars.length; i++) {\n    ctx.fillText(chars[i], x, y)\n    if ((x += step[0]) > shape[0] - step[0]/2) (x = step[0]/2), (y += step[1])\n  }\n\n  return canvas\n}\n"]},"metadata":{},"sourceType":"script"}