{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlasoks\\\\supe-map-demo\\\\src\\\\demo.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport data_map from './data_map.json';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 55\n  }\n});\nconst headCells = [{\n  id: 'address',\n  numeric: false,\n  disablePadding: true,\n  label: 'Адрес'\n}, {\n  id: 'lat',\n  numeric: true,\n  disablePadding: false,\n  label: 'Широта'\n}, {\n  id: 'lon',\n  numeric: true,\n  disablePadding: false,\n  label: 'Долгота'\n}, {\n  id: 'date_period',\n  numeric: true,\n  disablePadding: false,\n  label: 'Период прогнозирования'\n}, {\n  id: 'loss_probability',\n  numeric: true,\n  disablePadding: false,\n  label: 'Вероятность нетехнических потерь (%)'\n}, {\n  id: 'type',\n  numeric: false,\n  disablePadding: false,\n  label: 'Признак (БУ/БД)'\n}, {\n  id: 'comments',\n  numeric: false,\n  disablePadding: false,\n  label: 'Коментарии'\n}];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport default function SimpleTable() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, headCells.map(headCell => /*#__PURE__*/React.createElement(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? 'right' : 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }, headCell.label, orderBy === headCell.id ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/vlasoks/supe-map-demo/src/demo.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TableSortLabel","Paper","data_map","useStyles","table","minWidth","headCells","id","numeric","disablePadding","label","descendingComparator","a","b","orderBy","getComparator","order","SimpleTable","classes","map","headCell","createSortHandler","visuallyHidden"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport data_map from './data_map.json';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 55,\r\n  },\r\n});\r\n\r\nconst headCells = [\r\n{ id: 'address', numeric: false, disablePadding: true, label: 'Адрес' },\r\n{ id: 'lat', numeric: true, disablePadding: false, label: 'Широта' },\r\n{ id: 'lon', numeric: true, disablePadding: false, label: 'Долгота' },\r\n{ id: 'date_period', numeric: true, disablePadding: false, label: 'Период прогнозирования' },\r\n{ id: 'loss_probability', numeric: true, disablePadding: false, label: 'Вероятность нетехнических потерь (%)' },\r\n{ id: 'type', numeric: false, disablePadding: false, label: 'Признак (БУ/БД)' },\r\n{ id: 'comments', numeric: false, disablePadding: false, label: 'Коментарии' },\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {/* <TableCell></TableCell> */}\r\n            {headCells.map((headCell) => (\r\n                      <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                      >\r\n                        <TableSortLabel\r\n                          active={orderBy === headCell.id}\r\n                          direction={orderBy === headCell.id ? order : 'asc'}\r\n                          onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                          {headCell.label}\r\n                          {orderBy === headCell.id ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                              {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </span>\r\n                          ) : null}\r\n                        </TableSortLabel>\r\n                      </TableCell>\r\n                    ))}\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {/* {data_map.map((row) => (\r\n            <TableRow key={row.address}>\r\n              <TableCell component=\"th\" scope=\"row\">{row.address}</TableCell>\r\n              <TableCell align=\"right\">{row.lat}</TableCell>\r\n              <TableCell align=\"right\">{row.lon}</TableCell>\r\n              <TableCell align=\"right\">{row.date_period}</TableCell>\r\n              <TableCell align=\"right\">{row.loss_probability}</TableCell>\r\n              <TableCell align=\"right\">{row.type}</TableCell>\r\n              <TableCell align=\"right\">{row.comments}</TableCell>\r\n            </TableRow>\r\n          ))} */}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}