{"ast":null,"code":"// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\"use strict\";\n\nvar d = require(\"d\"),\n    validateSymbol = require(\"./validate-symbol\"),\n    NativeSymbol = require(\"ext/global-this\").Symbol,\n    generateName = require(\"./lib/private/generate-name\"),\n    setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\"),\n    setupSymbolRegistry = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create,\n    defineProperties = Object.defineProperties,\n    defineProperty = Object.defineProperty;\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n  try {\n    String(NativeSymbol());\n    isNativeSafe = true;\n  } catch (ignore) {}\n} else {\n  NativeSymbol = null;\n} // Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\n\n\nHiddenSymbol = function Symbol(description) {\n  if (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n  return SymbolPolyfill(description);\n}; // Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\n\n\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n  var symbol;\n  if (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n  if (isNativeSafe) return NativeSymbol(description);\n  symbol = create(HiddenSymbol.prototype);\n  description = description === undefined ? \"\" : String(description);\n  return defineProperties(symbol, {\n    __description__: d(\"\", description),\n    __name__: d(\"\", generateName(description))\n  });\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill); // Internal tweaks for real symbol producer\n\ndefineProperties(HiddenSymbol.prototype, {\n  constructor: d(SymbolPolyfill),\n  toString: d(\"\", function () {\n    return this.__name__;\n  })\n}); // Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\n\ndefineProperties(SymbolPolyfill.prototype, {\n  toString: d(function () {\n    return \"Symbol (\" + validateSymbol(this).__description__ + \")\";\n  }),\n  valueOf: d(function () {\n    return validateSymbol(this);\n  })\n});\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d(\"\", function () {\n  var symbol = validateSymbol(this);\n  if (typeof symbol === \"symbol\") return symbol;\n  return symbol.toString();\n}));\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\")); // Proper implementaton of toPrimitive and toStringTag for returned symbol instances\n\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag, d(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])); // Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\n\ndefineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive, d(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));","map":{"version":3,"sources":["C:/Users/vlasoks/Documents/GitHub/SUPE-map-demo/node_modules/es6-symbol/polyfill.js"],"names":["d","require","validateSymbol","NativeSymbol","Symbol","generateName","setupStandardSymbols","setupSymbolRegistry","create","Object","defineProperties","defineProperty","SymbolPolyfill","HiddenSymbol","isNativeSafe","String","ignore","description","TypeError","module","exports","symbol","prototype","undefined","__description__","__name__","constructor","toString","valueOf","toPrimitive","toStringTag"],"mappings":"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","sourcesContent":["// ES2015 Symbol polyfill for environments that do not (or partially) support it\r\n\r\n\"use strict\";\r\n\r\nvar d                    = require(\"d\")\r\n  , validateSymbol       = require(\"./validate-symbol\")\r\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\r\n  , generateName         = require(\"./lib/private/generate-name\")\r\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\r\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\r\n\r\nvar create = Object.create\r\n  , defineProperties = Object.defineProperties\r\n  , defineProperty = Object.defineProperty;\r\n\r\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\r\n\r\nif (typeof NativeSymbol === \"function\") {\r\n\ttry {\r\n\t\tString(NativeSymbol());\r\n\t\tisNativeSafe = true;\r\n\t} catch (ignore) {}\r\n} else {\r\n\tNativeSymbol = null;\r\n}\r\n\r\n// Internal constructor (not one exposed) for creating Symbol instances.\r\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\r\nHiddenSymbol = function Symbol(description) {\r\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\r\n\treturn SymbolPolyfill(description);\r\n};\r\n\r\n// Exposed `Symbol` constructor\r\n// (returns instances of HiddenSymbol)\r\nmodule.exports = SymbolPolyfill = function Symbol(description) {\r\n\tvar symbol;\r\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\r\n\tif (isNativeSafe) return NativeSymbol(description);\r\n\tsymbol = create(HiddenSymbol.prototype);\r\n\tdescription = description === undefined ? \"\" : String(description);\r\n\treturn defineProperties(symbol, {\r\n\t\t__description__: d(\"\", description),\r\n\t\t__name__: d(\"\", generateName(description))\r\n\t});\r\n};\r\n\r\nsetupStandardSymbols(SymbolPolyfill);\r\nsetupSymbolRegistry(SymbolPolyfill);\r\n\r\n// Internal tweaks for real symbol producer\r\ndefineProperties(HiddenSymbol.prototype, {\r\n\tconstructor: d(SymbolPolyfill),\r\n\ttoString: d(\"\", function () { return this.__name__; })\r\n});\r\n\r\n// Proper implementation of methods exposed on Symbol.prototype\r\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\r\ndefineProperties(SymbolPolyfill.prototype, {\r\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\r\n\tvalueOf: d(function () { return validateSymbol(this); })\r\n});\r\ndefineProperty(\r\n\tSymbolPolyfill.prototype,\r\n\tSymbolPolyfill.toPrimitive,\r\n\td(\"\", function () {\r\n\t\tvar symbol = validateSymbol(this);\r\n\t\tif (typeof symbol === \"symbol\") return symbol;\r\n\t\treturn symbol.toString();\r\n\t})\r\n);\r\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\r\n\r\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\r\ndefineProperty(\r\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\r\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\r\n);\r\n\r\n// Note: It's important to define `toPrimitive` as last one, as some implementations\r\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\r\n// And that may invoke error in definition flow:\r\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\r\ndefineProperty(\r\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\r\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\r\n);\r\n"]},"metadata":{},"sourceType":"script"}