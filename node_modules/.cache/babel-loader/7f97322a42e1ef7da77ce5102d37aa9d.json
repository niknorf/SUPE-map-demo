{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlasoks\\\\Documents\\\\GitHub\\\\SUPE-map-demo\\\\src\\\\components\\\\Graphic.js\";\nimport React from 'react';\nimport Plotly from \"plotly.js\";\nimport * as d3 from 'd3';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport data from '../graph_4.csv';\nconst Plot = createPlotlyComponent(Plotly);\nexport class GraphicGroup extends React.Component {\n  // console.log(this.props.name);\n  render() {\n    return /*#__PURE__*/React.createElement(SingleGraphic, {\n      name: this.props.name,\n      x_coordinates: this.props.x_coordinates,\n      y_coordinates: this.props.y_coordinates,\n      type: this.props.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nfunction SingleGraphic(props) {\n  d3.csv(data, function (cvs_data) {\n    const trace1 = {\n      type: \"scatter\",\n      mode: \"lines\",\n      name: 'AAPL High',\n      x: unpack(cvs_data, 'Date'),\n      y: unpack(cvs_data, 'AAPL.High'),\n      line: {\n        color: '#17BECF'\n      }\n    };\n    const trace2 = {\n      type: \"scatter\",\n      mode: \"lines\",\n      name: 'AAPL Low',\n      x: unpack(cvs_data, 'Date'),\n      y: unpack(cvs_data, 'AAPL.Low'),\n      line: {\n        color: '#7F7F7F'\n      }\n    };\n    const data = [trace1, trace2];\n    const layout = {\n      title: 'Time Series with Rangeslider',\n      xaxis: {\n        autorange: true,\n        range: ['2015-02-17', '2017-02-16'],\n        rangeselector: {\n          buttons: [{\n            count: 1,\n            label: '1m',\n            step: 'month',\n            stepmode: 'backward'\n          }, {\n            count: 6,\n            label: '6m',\n            step: 'month',\n            stepmode: 'backward'\n          }, {\n            step: 'all'\n          }]\n        },\n        rangeslider: {\n          range: ['2015-02-17', '2017-02-16']\n        },\n        type: 'date'\n      },\n      yaxis: {\n        autorange: true,\n        range: [86.8700008333, 138.870004167],\n        type: 'linear'\n      }\n    };\n    return /*#__PURE__*/React.createElement(Plot, {\n      data: data,\n      layout: layout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }\n    });\n  });\n}\n\nfunction unpack(rows, key) {\n  return rows.map(function (row) {\n    return row[key];\n  });\n}\n\nfunction GetCSVData() {}","map":{"version":3,"sources":["C:/Users/vlasoks/Documents/GitHub/SUPE-map-demo/src/components/Graphic.js"],"names":["React","Plotly","d3","createPlotlyComponent","data","Plot","GraphicGroup","Component","render","props","name","x_coordinates","y_coordinates","type","SingleGraphic","csv","cvs_data","trace1","mode","x","unpack","y","line","color","trace2","layout","title","xaxis","autorange","range","rangeselector","buttons","count","label","step","stepmode","rangeslider","yaxis","rows","key","map","row","GetCSVData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plotly from \"plotly.js\"\r\nimport * as d3 from 'd3'\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport data from '../graph_4.csv';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport class GraphicGroup extends React.Component {\r\n  // console.log(this.props.name);\r\n  render() {\r\n    return (<SingleGraphic name={this.props.name} x_coordinates={this.props.x_coordinates} y_coordinates={this.props.y_coordinates} type={this.props.type}/>);\r\n  }\r\n}\r\n\r\nfunction SingleGraphic(props) {\r\n\r\n  d3.csv(data, function(cvs_data) {\r\n  const trace1 = {\r\n  type: \"scatter\",\r\n  mode: \"lines\",\r\n  name: 'AAPL High',\r\n  x: unpack(cvs_data, 'Date'),\r\n  y: unpack(cvs_data, 'AAPL.High'),\r\n  line: {color: '#17BECF'}\r\n};\r\n\r\nconst trace2 = {\r\n  type: \"scatter\",\r\n  mode: \"lines\",\r\n  name: 'AAPL Low',\r\n  x: unpack(cvs_data, 'Date'),\r\n  y: unpack(cvs_data, 'AAPL.Low'),\r\n  line: {color: '#7F7F7F'}\r\n};\r\n\r\nconst data = [trace1, trace2];\r\n\r\nconst layout ={\r\n  title: 'Time Series with Rangeslider',\r\n  xaxis: {\r\n    autorange: true,\r\n    range: ['2015-02-17', '2017-02-16'],\r\n    rangeselector: {buttons: [\r\n        {\r\n          count: 1,\r\n          label: '1m',\r\n          step: 'month',\r\n          stepmode: 'backward'\r\n        },\r\n        {\r\n          count: 6,\r\n          label: '6m',\r\n          step: 'month',\r\n          stepmode: 'backward'\r\n        },\r\n        {step: 'all'}\r\n      ]},\r\n    rangeslider: {range: ['2015-02-17', '2017-02-16']},\r\n    type: 'date'\r\n  },\r\n  yaxis: {\r\n    autorange: true,\r\n    range: [86.8700008333, 138.870004167],\r\n    type: 'linear'\r\n  }\r\n};\r\nreturn <Plot\r\n      data={data}\r\n      layout={layout}\r\n    />;\r\n\r\n  });\r\n}\r\n\r\nfunction unpack(rows, key) {\r\n  return rows.map(function(row) {\r\n    return row[key];\r\n  });\r\n\r\n}\r\n\r\nfunction GetCSVData() {\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}