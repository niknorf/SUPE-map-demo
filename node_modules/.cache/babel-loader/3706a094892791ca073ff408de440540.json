{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlasoks\\\\Documents\\\\GitHub\\\\SUPE-map-demo\\\\src\\\\components\\\\Graphic.js\";\nimport React from 'react';\nimport Plotly from \"plotly.js\";\nimport * as d3 from 'd3';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport data from '../graph_4.csv';\nconst Plot = createPlotlyComponent(Plotly);\nexport class GraphicGroup extends React.Component {\n  // console.log(this.props.name);\n  render() {\n    d3.csv(data, (err, cvs_data) => {\n      return /*#__PURE__*/React.createElement(TestFunction, {\n        data: cs_data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }\n      });\n    });\n  }\n\n}\n\nfunction TestFunction(csv_data) {\n  console.log(csv_data);\n  return /*#__PURE__*/React.createElement(Plot, {\n    data: [{\n      x: [1, 2, 3],\n      y: [2, 6, 3],\n      type: 'scatter',\n      mode: 'lines+markers',\n      marker: {\n        color: 'red'\n      }\n    }, {\n      type: 'bar',\n      x: [1, 2, 3],\n      y: [2, 5, 3]\n    }],\n    layout: {\n      width: 320,\n      height: 240,\n      title: 'A Fancy Plot'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  });\n}\n\nfunction SingleGraphic(props) {\n  // if (props.type === 'scatter') {\n  // d3.csv(data, function(cvs_data) {\n  const trace1 = {\n    type: \"scatter\",\n    mode: \"lines\",\n    name: 'AAPL High',\n    x: unpack(cvs_data, 'Date'),\n    y: unpack(cvs_data, 'AAPL.High'),\n    line: {\n      color: '#17BECF'\n    }\n  };\n  const trace2 = {\n    type: \"scatter\",\n    mode: \"lines\",\n    name: 'AAPL Low',\n    x: unpack(cvs_data, 'Date'),\n    y: unpack(cvs_data, 'AAPL.Low'),\n    line: {\n      color: '#7F7F7F'\n    }\n  };\n  const data_combined = [trace1, trace2];\n  const layout = {\n    title: 'Time Series with Rangeslider',\n    xaxis: {\n      autorange: true,\n      range: ['2015-02-17', '2017-02-16'],\n      rangeselector: {\n        buttons: [{\n          count: 1,\n          label: '1m',\n          step: 'month',\n          stepmode: 'backward'\n        }, {\n          count: 6,\n          label: '6m',\n          step: 'month',\n          stepmode: 'backward'\n        }, {\n          step: 'all'\n        }]\n      },\n      rangeslider: {\n        range: ['2015-02-17', '2017-02-16']\n      },\n      type: 'date'\n    },\n    yaxis: {\n      autorange: true,\n      range: [86.8700008333, 138.870004167],\n      type: 'linear'\n    }\n  };\n  return /*#__PURE__*/React.createElement(Plot, {\n    data: [{\n      x: [1, 2, 3],\n      y: [2, 6, 3],\n      type: 'scatter',\n      mode: 'lines+markers',\n      marker: {\n        color: 'red'\n      }\n    }, {\n      type: 'bar',\n      x: [1, 2, 3],\n      y: [2, 5, 3]\n    }],\n    layout: {\n      width: 320,\n      height: 240,\n      title: 'A Fancy Plot'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 10\n    }\n  }); // });\n  // console.log(data_combined);\n  // return <Plot data={[\n  //     {\n  //       x: [\n  //         1, 2, 3\n  //       ],\n  //       y: [\n  //         2, 6, 3\n  //       ],\n  //       type: 'scatter',\n  //       mode: 'lines+markers',\n  //       marker: {\n  //         color: 'red'\n  //       }\n  //     }, {\n  //       type: 'bar',\n  //       x: [\n  //         1, 2, 3\n  //       ],\n  //       y: [2, 5, 3]\n  //     }\n  //   ]} layout={{\n  //     width: 320,\n  //     height: 240,\n  //     title: 'A Fancy Plot'\n  //   }}/>\n}\n\nfunction GetCSVData() {\n  d3.csv(data, function (cvs_data) {\n    const trace1 = {\n      type: \"scatter\",\n      mode: \"lines\",\n      name: 'AAPL High',\n      x: unpack(cvs_data, 'Date'),\n      y: unpack(cvs_data, 'AAPL.High'),\n      line: {\n        color: '#17BECF'\n      }\n    };\n    const trace2 = {\n      type: \"scatter\",\n      mode: \"lines\",\n      name: 'AAPL Low',\n      x: unpack(cvs_data, 'Date'),\n      y: unpack(cvs_data, 'AAPL.Low'),\n      line: {\n        color: '#7F7F7F'\n      }\n    };\n    const data_combined = [trace1, trace2];\n    console.log(data_combined);\n  });\n}\n\nfunction unpack(rows, key) {\n  return rows.map(function (row) {\n    return row[key];\n  });\n}","map":{"version":3,"sources":["C:/Users/vlasoks/Documents/GitHub/SUPE-map-demo/src/components/Graphic.js"],"names":["React","Plotly","d3","createPlotlyComponent","data","Plot","GraphicGroup","Component","render","csv","err","cvs_data","cs_data","TestFunction","csv_data","console","log","x","y","type","mode","marker","color","width","height","title","SingleGraphic","props","trace1","name","unpack","line","trace2","data_combined","layout","xaxis","autorange","range","rangeselector","buttons","count","label","step","stepmode","rangeslider","yaxis","GetCSVData","rows","key","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plotly from \"plotly.js\"\r\nimport * as d3 from 'd3'\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport data from '../graph_4.csv';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport class GraphicGroup extends React.Component {\r\n  // console.log(this.props.name);\r\n\r\n  render() {\r\n    d3.csv(data, (err, cvs_data) => {\r\n      return (<TestFunction data={cs_data}/>);\r\n\r\n    })\r\n  }\r\n\r\n}\r\n\r\nfunction TestFunction(csv_data) {\r\n  console.log(csv_data);\r\n\r\n  return <Plot data={[\r\n      {\r\n        x: [\r\n          1, 2, 3\r\n        ],\r\n        y: [\r\n          2, 6, 3\r\n        ],\r\n        type: 'scatter',\r\n        mode: 'lines+markers',\r\n        marker: {\r\n          color: 'red'\r\n        }\r\n      }, {\r\n        type: 'bar',\r\n        x: [\r\n          1, 2, 3\r\n        ],\r\n        y: [2, 5, 3]\r\n      }\r\n    ]} layout={{\r\n      width: 320,\r\n      height: 240,\r\n      title: 'A Fancy Plot'\r\n    }}/>\r\n}\r\n\r\nfunction SingleGraphic(props) {\r\n\r\n  // if (props.type === 'scatter') {\r\n  // d3.csv(data, function(cvs_data) {\r\n  const trace1 = {\r\n    type: \"scatter\",\r\n    mode: \"lines\",\r\n    name: 'AAPL High',\r\n    x: unpack(cvs_data, 'Date'),\r\n    y: unpack(cvs_data, 'AAPL.High'),\r\n    line: {\r\n      color: '#17BECF'\r\n    }\r\n  };\r\n\r\n  const trace2 = {\r\n    type: \"scatter\",\r\n    mode: \"lines\",\r\n    name: 'AAPL Low',\r\n    x: unpack(cvs_data, 'Date'),\r\n    y: unpack(cvs_data, 'AAPL.Low'),\r\n    line: {\r\n      color: '#7F7F7F'\r\n    }\r\n  };\r\n\r\n  const data_combined = [trace1, trace2];\r\n\r\n  const layout = {\r\n    title: 'Time Series with Rangeslider',\r\n    xaxis: {\r\n      autorange: true,\r\n      range: [\r\n        '2015-02-17', '2017-02-16'\r\n      ],\r\n      rangeselector: {\r\n        buttons: [\r\n          {\r\n            count: 1,\r\n            label: '1m',\r\n            step: 'month',\r\n            stepmode: 'backward'\r\n          }, {\r\n            count: 6,\r\n            label: '6m',\r\n            step: 'month',\r\n            stepmode: 'backward'\r\n          }, {\r\n            step: 'all'\r\n          }\r\n        ]\r\n      },\r\n      rangeslider: {\r\n        range: ['2015-02-17', '2017-02-16']\r\n      },\r\n      type: 'date'\r\n    },\r\n    yaxis: {\r\n      autorange: true,\r\n      range: [\r\n        86.8700008333, 138.870004167\r\n      ],\r\n      type: 'linear'\r\n    }\r\n  };\r\n\r\n  return <Plot data={[\r\n      {\r\n        x: [\r\n          1, 2, 3\r\n        ],\r\n        y: [\r\n          2, 6, 3\r\n        ],\r\n        type: 'scatter',\r\n        mode: 'lines+markers',\r\n        marker: {\r\n          color: 'red'\r\n        }\r\n      }, {\r\n        type: 'bar',\r\n        x: [\r\n          1, 2, 3\r\n        ],\r\n        y: [2, 5, 3]\r\n      }\r\n    ]} layout={{\r\n      width: 320,\r\n      height: 240,\r\n      title: 'A Fancy Plot'\r\n    }}/>;\r\n\r\n  // });\r\n\r\n  // console.log(data_combined);\r\n  // return <Plot data={[\r\n  //     {\r\n  //       x: [\r\n  //         1, 2, 3\r\n  //       ],\r\n  //       y: [\r\n  //         2, 6, 3\r\n  //       ],\r\n  //       type: 'scatter',\r\n  //       mode: 'lines+markers',\r\n  //       marker: {\r\n  //         color: 'red'\r\n  //       }\r\n  //     }, {\r\n  //       type: 'bar',\r\n  //       x: [\r\n  //         1, 2, 3\r\n  //       ],\r\n  //       y: [2, 5, 3]\r\n  //     }\r\n  //   ]} layout={{\r\n  //     width: 320,\r\n  //     height: 240,\r\n  //     title: 'A Fancy Plot'\r\n  //   }}/>\r\n}\r\n\r\nfunction GetCSVData() {\r\n  d3.csv(data, function(cvs_data) {\r\n    const trace1 = {\r\n      type: \"scatter\",\r\n      mode: \"lines\",\r\n      name: 'AAPL High',\r\n      x: unpack(cvs_data, 'Date'),\r\n      y: unpack(cvs_data, 'AAPL.High'),\r\n      line: {\r\n        color: '#17BECF'\r\n      }\r\n    };\r\n\r\n    const trace2 = {\r\n      type: \"scatter\",\r\n      mode: \"lines\",\r\n      name: 'AAPL Low',\r\n      x: unpack(cvs_data, 'Date'),\r\n      y: unpack(cvs_data, 'AAPL.Low'),\r\n      line: {\r\n        color: '#7F7F7F'\r\n      }\r\n    };\r\n\r\n    const data_combined = [trace1, trace2];\r\n\r\n    console.log(data_combined);\r\n\r\n  });\r\n}\r\n\r\nfunction unpack(rows, key) {\r\n  return rows.map(function(row) {\r\n    return row[key];\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}