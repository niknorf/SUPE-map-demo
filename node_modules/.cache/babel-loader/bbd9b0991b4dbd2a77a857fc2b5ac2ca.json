{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlasoks\\\\Documents\\\\GitHub\\\\SUPE-map-demo\\\\src\\\\components\\\\Graphic.js\";\nimport React from 'react';\nimport Plotly from \"plotly.js\";\nimport * as d3 from 'd3';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport data from '../graph_4.csv';\nconst Plot = createPlotlyComponent(Plotly);\nexport class GraphicGroup extends React.Component {\n  // console.log(this.props.name);\n  render() {\n    return /*#__PURE__*/React.createElement(SingleGraphic, {\n      name: this.props.name,\n      x_coordinates: this.props.x_coordinates,\n      y_coordinates: this.props.y_coordinates,\n      type: this.props.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nfunction SingleGraphic(props) {\n  if (props.type === 'scatter') {\n    d3.csv(data, function (cvs_data) {\n      const trace1 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'AAPL High',\n        x: unpack(cvs_data, 'Date'),\n        y: unpack(cvs_data, 'AAPL.High'),\n        line: {\n          color: '#17BECF'\n        }\n      };\n      const trace2 = {\n        type: \"scatter\",\n        mode: \"lines\",\n        name: 'AAPL Low',\n        x: unpack(cvs_data, 'Date'),\n        y: unpack(cvs_data, 'AAPL.Low'),\n        line: {\n          color: '#7F7F7F'\n        }\n      };\n      const data_combined = [trace1, trace2];\n      console.log(data_combined);\n    });\n  } // const plotlydata =[\n  //   {\n  //     x: props.x_coordinates,\n  //     y: props.y_coordinates,\n  //     type: props.type,\n  //      fill: 'tonexty',\n  //   }\n  // ];\n\n\n  return null; // <Plot\n  //       data={plotlydata}\n  //       layout={ {width: 500, height: 500, title: props.name} }\n  //     />;\n}\n\nfunction GetCSVData() {\n  d3.csv(data, function (cvs_data) {\n    const trace1 = {\n      type: \"scatter\",\n      mode: \"lines\",\n      name: 'AAPL High',\n      x: unpack(cvs_data, 'Date'),\n      y: unpack(cvs_data, 'AAPL.High'),\n      line: {\n        color: '#17BECF'\n      }\n    };\n    const trace2 = {\n      type: \"scatter\",\n      mode: \"lines\",\n      name: 'AAPL Low',\n      x: unpack(cvs_data, 'Date'),\n      y: unpack(cvs_data, 'AAPL.Low'),\n      line: {\n        color: '#7F7F7F'\n      }\n    };\n    const data_combined = [trace1, trace2];\n    console.log(data_combined);\n  });\n}\n\nfunction unpack(rows, key) {\n  return rows.map(function (row) {\n    return row[key];\n  });\n}","map":{"version":3,"sources":["C:/Users/vlasoks/Documents/GitHub/SUPE-map-demo/src/components/Graphic.js"],"names":["React","Plotly","d3","createPlotlyComponent","data","Plot","GraphicGroup","Component","render","props","name","x_coordinates","y_coordinates","type","SingleGraphic","csv","cvs_data","trace1","mode","x","unpack","y","line","color","trace2","data_combined","console","log","GetCSVData","rows","key","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Plotly from \"plotly.js\"\r\nimport * as d3 from 'd3'\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport data from '../graph_4.csv';\r\nconst Plot = createPlotlyComponent(Plotly);\r\n\r\nexport class GraphicGroup extends React.Component {\r\n  // console.log(this.props.name);\r\n  render() {\r\n    return (<SingleGraphic name={this.props.name} x_coordinates={this.props.x_coordinates} y_coordinates={this.props.y_coordinates} type={this.props.type}/>);\r\n  }\r\n}\r\n\r\nfunction SingleGraphic(props) {\r\n\r\n  if (props.type === 'scatter') {\r\n    d3.csv(data, function(cvs_data) {\r\n    const trace1 = {\r\n    type: \"scatter\",\r\n    mode: \"lines\",\r\n    name: 'AAPL High',\r\n    x: unpack(cvs_data, 'Date'),\r\n    y: unpack(cvs_data, 'AAPL.High'),\r\n    line: {color: '#17BECF'}\r\n  };\r\n\r\n  const trace2 = {\r\n    type: \"scatter\",\r\n    mode: \"lines\",\r\n    name: 'AAPL Low',\r\n    x: unpack(cvs_data, 'Date'),\r\n    y: unpack(cvs_data, 'AAPL.Low'),\r\n    line: {color: '#7F7F7F'}\r\n  };\r\n\r\n  const data_combined = [trace1, trace2];\r\n\r\n  console.log(data_combined);\r\n\r\n  \r\n\r\n    });\r\n  }\r\n\r\n  // const plotlydata =[\r\n  //   {\r\n  //     x: props.x_coordinates,\r\n  //     y: props.y_coordinates,\r\n  //     type: props.type,\r\n  //      fill: 'tonexty',\r\n  //   }\r\n  // ];\r\n  return null;\r\n  // <Plot\r\n  //       data={plotlydata}\r\n  //       layout={ {width: 500, height: 500, title: props.name} }\r\n  //     />;\r\n\r\n}\r\n\r\nfunction GetCSVData() {\r\n  d3.csv(data, function(cvs_data) {\r\n  const trace1 = {\r\n  type: \"scatter\",\r\n  mode: \"lines\",\r\n  name: 'AAPL High',\r\n  x: unpack(cvs_data, 'Date'),\r\n  y: unpack(cvs_data, 'AAPL.High'),\r\n  line: {color: '#17BECF'}\r\n};\r\n\r\nconst trace2 = {\r\n  type: \"scatter\",\r\n  mode: \"lines\",\r\n  name: 'AAPL Low',\r\n  x: unpack(cvs_data, 'Date'),\r\n  y: unpack(cvs_data, 'AAPL.Low'),\r\n  line: {color: '#7F7F7F'}\r\n};\r\n\r\nconst data_combined = [trace1, trace2];\r\n\r\nconsole.log(data_combined);\r\n\r\n  });\r\n}\r\n\r\n\r\nfunction unpack(rows, key) {\r\n  return rows.map(function(row) {\r\n    return row[key];\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}