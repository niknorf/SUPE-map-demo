{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Plots = require('../../plots/plots');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Titles = require('../../components/titles');\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nvar axAttrs = require('./layout_attributes');\n\nvar cleanTicks = require('./clean_ticks');\n\nvar constants = require('../../constants/numerical');\n\nvar ONEMAXYEAR = constants.ONEMAXYEAR;\nvar ONEAVGYEAR = constants.ONEAVGYEAR;\nvar ONEMINYEAR = constants.ONEMINYEAR;\nvar ONEMAXQUARTER = constants.ONEMAXQUARTER;\nvar ONEAVGQUARTER = constants.ONEAVGQUARTER;\nvar ONEMINQUARTER = constants.ONEMINQUARTER;\nvar ONEMAXMONTH = constants.ONEMAXMONTH;\nvar ONEAVGMONTH = constants.ONEAVGMONTH;\nvar ONEMINMONTH = constants.ONEMINMONTH;\nvar ONEWEEK = constants.ONEWEEK;\nvar ONEDAY = constants.ONEDAY;\nvar HALFDAY = ONEDAY / 2;\nvar ONEHOUR = constants.ONEHOUR;\nvar ONEMIN = constants.ONEMIN;\nvar ONESEC = constants.ONESEC;\nvar MINUS_SIGN = constants.MINUS_SIGN;\nvar BADNUM = constants.BADNUM;\n\nvar alignmentConstants = require('../../constants/alignment');\n\nvar MID_SHIFT = alignmentConstants.MID_SHIFT;\nvar CAP_SHIFT = alignmentConstants.CAP_SHIFT;\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar OPPOSITE_SIDE = alignmentConstants.OPPOSITE_SIDE;\nvar axes = module.exports = {};\naxes.setConvert = require('./set_convert');\n\nvar autoType = require('./axis_autotype');\n\nvar axisIds = require('./axis_ids');\n\naxes.id2name = axisIds.id2name;\naxes.name2id = axisIds.name2id;\naxes.cleanId = axisIds.cleanId;\naxes.list = axisIds.list;\naxes.listIds = axisIds.listIds;\naxes.getFromId = axisIds.getFromId;\naxes.getFromTrace = axisIds.getFromTrace;\n\nvar autorange = require('./autorange');\n\naxes.getAutoRange = autorange.getAutoRange;\naxes.findExtremes = autorange.findExtremes;\nvar epsilon = 0.0001;\n\nfunction expandRange(range) {\n  var delta = (range[1] - range[0]) * epsilon;\n  return [range[0] - delta, range[1] + delta];\n}\n/*\n * find the list of possible axes to reference with an xref or yref attribute\n * and coerce it to that list\n *\n * attr: the attribute we're generating a reference for. Should end in 'x' or 'y'\n *     but can be prefixed, like 'ax' for annotation's arrow x\n * dflt: the default to coerce to, or blank to use the first axis (falling back on\n *     extraOption if there is no axis)\n * extraOption: aside from existing axes with this letter, what non-axis value is allowed?\n *     Only required if it's different from `dflt`\n */\n\n\naxes.coerceRef = function (containerIn, containerOut, gd, attr, dflt, extraOption) {\n  var axLetter = attr.charAt(attr.length - 1);\n  var axlist = gd._fullLayout._subplots[axLetter + 'axis'];\n  var refAttr = attr + 'ref';\n  var attrDef = {};\n  if (!dflt) dflt = axlist[0] || extraOption;\n  if (!extraOption) extraOption = dflt; // data-ref annotations are not supported in gl2d yet\n\n  attrDef[refAttr] = {\n    valType: 'enumerated',\n    values: axlist.concat(extraOption ? [extraOption] : []),\n    dflt: dflt\n  }; // xref, yref\n\n  return Lib.coerce(containerIn, containerOut, attrDef, refAttr);\n};\n/*\n * coerce position attributes (range-type) that can be either on axes or absolute\n * (paper or pixel) referenced. The biggest complication here is that we don't know\n * before looking at the axis whether the value must be a number or not (it may be\n * a date string), so we can't use the regular valType='number' machinery\n *\n * axRef (string): the axis this position is referenced to, or:\n *     paper: fraction of the plot area\n *     pixel: pixels relative to some starting position\n * attr (string): the attribute in containerOut we are coercing\n * dflt (number): the default position, as a fraction or pixels. If the attribute\n *     is to be axis-referenced, this will be converted to an axis data value\n *\n * Also cleans the values, since the attribute definition itself has to say\n * valType: 'any' to handle date axes. This allows us to accept:\n * - for category axes: category names, and convert them here into serial numbers.\n *   Note that this will NOT work for axis range endpoints, because we don't know\n *   the category list yet (it's set by ax.makeCalcdata during calc)\n *   but it works for component (note, shape, images) positions.\n * - for date axes: JS Dates or milliseconds, and convert to date strings\n * - for other types: coerce them to numbers\n */\n\n\naxes.coercePosition = function (containerOut, gd, coerce, axRef, attr, dflt) {\n  var cleanPos, pos;\n\n  if (axRef === 'paper' || axRef === 'pixel') {\n    cleanPos = Lib.ensureNumber;\n    pos = coerce(attr, dflt);\n  } else {\n    var ax = axes.getFromId(gd, axRef);\n    dflt = ax.fraction2r(dflt);\n    pos = coerce(attr, dflt);\n    cleanPos = ax.cleanPos;\n  }\n\n  containerOut[attr] = cleanPos(pos);\n};\n\naxes.cleanPosition = function (pos, gd, axRef) {\n  var cleanPos = axRef === 'paper' || axRef === 'pixel' ? Lib.ensureNumber : axes.getFromId(gd, axRef).cleanPos;\n  return cleanPos(pos);\n};\n\naxes.redrawComponents = function (gd, axIds) {\n  axIds = axIds ? axIds : axes.listIds(gd);\n  var fullLayout = gd._fullLayout;\n\n  function _redrawOneComp(moduleName, methodName, stashName, shortCircuit) {\n    var method = Registry.getComponentMethod(moduleName, methodName);\n    var stash = {};\n\n    for (var i = 0; i < axIds.length; i++) {\n      var ax = fullLayout[axes.id2name(axIds[i])];\n      var indices = ax[stashName];\n\n      for (var j = 0; j < indices.length; j++) {\n        var ind = indices[j];\n\n        if (!stash[ind]) {\n          method(gd, ind);\n          stash[ind] = 1; // once is enough for images (which doesn't use the `i` arg anyway)\n\n          if (shortCircuit) return;\n        }\n      }\n    }\n  } // annotations and shapes 'draw' method is slow,\n  // use the finer-grained 'drawOne' method instead\n\n\n  _redrawOneComp('annotations', 'drawOne', '_annIndices');\n\n  _redrawOneComp('shapes', 'drawOne', '_shapeIndices');\n\n  _redrawOneComp('images', 'draw', '_imgIndices', true);\n};\n\nvar getDataConversions = axes.getDataConversions = function (gd, trace, target, targetArray) {\n  var ax; // If target points to an axis, use the type we already have for that\n  // axis to find the data type. Otherwise use the values to autotype.\n\n  var d2cTarget = target === 'x' || target === 'y' || target === 'z' ? target : targetArray; // In the case of an array target, make a mock data array\n  // and call supplyDefaults to the data type and\n  // setup the data-to-calc method.\n\n  if (Array.isArray(d2cTarget)) {\n    ax = {\n      type: autoType(targetArray),\n      _categories: []\n    };\n    axes.setConvert(ax); // build up ax._categories (usually done during ax.makeCalcdata()\n\n    if (ax.type === 'category') {\n      for (var i = 0; i < targetArray.length; i++) {\n        ax.d2c(targetArray[i]);\n      }\n    } // TODO what to do for transforms?\n\n  } else {\n    ax = axes.getFromTrace(gd, trace, d2cTarget);\n  } // if 'target' has corresponding axis\n  // -> use setConvert method\n\n\n  if (ax) return {\n    d2c: ax.d2c,\n    c2d: ax.c2d\n  }; // special case for 'ids'\n  // -> cast to String\n\n  if (d2cTarget === 'ids') return {\n    d2c: toString,\n    c2d: toString\n  }; // otherwise (e.g. numeric-array of 'marker.color' or 'marker.size')\n  // -> cast to Number\n\n  return {\n    d2c: toNum,\n    c2d: toNum\n  };\n};\n\nfunction toNum(v) {\n  return +v;\n}\n\nfunction toString(v) {\n  return String(v);\n}\n\naxes.getDataToCoordFunc = function (gd, trace, target, targetArray) {\n  return getDataConversions(gd, trace, target, targetArray).d2c;\n}; // get counteraxis letter for this axis (name or id)\n// this can also be used as the id for default counter axis\n\n\naxes.counterLetter = function (id) {\n  var axLetter = id.charAt(0);\n  if (axLetter === 'x') return 'y';\n  if (axLetter === 'y') return 'x';\n}; // incorporate a new minimum difference and first tick into\n// forced\n// note that _forceTick0 is linearized, so needs to be turned into\n// a range value for setting tick0\n\n\naxes.minDtick = function (ax, newDiff, newFirst, allow) {\n  // doesn't make sense to do forced min dTick on log or category axes,\n  // and the plot itself may decide to cancel (ie non-grouped bars)\n  if (['log', 'category', 'multicategory'].indexOf(ax.type) !== -1 || !allow) {\n    ax._minDtick = 0;\n  } else if (ax._minDtick === undefined) {\n    // undefined means there's nothing there yet\n    ax._minDtick = newDiff;\n    ax._forceTick0 = newFirst;\n  } else if (ax._minDtick) {\n    if ((ax._minDtick / newDiff + 1e-6) % 1 < 2e-6 && // existing minDtick is an integer multiple of newDiff\n    // (within rounding err)\n    // and forceTick0 can be shifted to newFirst\n    ((newFirst - ax._forceTick0) / newDiff % 1 + 1.000001) % 1 < 2e-6) {\n      ax._minDtick = newDiff;\n      ax._forceTick0 = newFirst;\n    } else if ((newDiff / ax._minDtick + 1e-6) % 1 > 2e-6 || // if the converse is true (newDiff is a multiple of minDtick and\n    // newFirst can be shifted to forceTick0) then do nothing - same\n    // forcing stands. Otherwise, cancel forced minimum\n    ((newFirst - ax._forceTick0) / ax._minDtick % 1 + 1.000001) % 1 > 2e-6) {\n      ax._minDtick = 0;\n    }\n  }\n}; // save a copy of the initial axis ranges in fullLayout\n// use them in mode bar and dblclick events\n\n\naxes.saveRangeInitial = function (gd, overwrite) {\n  var axList = axes.list(gd, '', true);\n  var hasOneAxisChanged = false;\n\n  for (var i = 0; i < axList.length; i++) {\n    var ax = axList[i];\n    var isNew = ax._rangeInitial === undefined;\n    var hasChanged = isNew || !(ax.range[0] === ax._rangeInitial[0] && ax.range[1] === ax._rangeInitial[1]);\n\n    if (isNew && ax.autorange === false || overwrite && hasChanged) {\n      ax._rangeInitial = ax.range.slice();\n      hasOneAxisChanged = true;\n    }\n  }\n\n  return hasOneAxisChanged;\n}; // save a copy of the initial spike visibility\n\n\naxes.saveShowSpikeInitial = function (gd, overwrite) {\n  var axList = axes.list(gd, '', true);\n  var hasOneAxisChanged = false;\n  var allSpikesEnabled = 'on';\n\n  for (var i = 0; i < axList.length; i++) {\n    var ax = axList[i];\n    var isNew = ax._showSpikeInitial === undefined;\n    var hasChanged = isNew || !(ax.showspikes === ax._showspikes);\n\n    if (isNew || overwrite && hasChanged) {\n      ax._showSpikeInitial = ax.showspikes;\n      hasOneAxisChanged = true;\n    }\n\n    if (allSpikesEnabled === 'on' && !ax.showspikes) {\n      allSpikesEnabled = 'off';\n    }\n  }\n\n  gd._fullLayout._cartesianSpikesEnabled = allSpikesEnabled;\n  return hasOneAxisChanged;\n};\n\naxes.autoBin = function (data, ax, nbins, is2d, calendar, size) {\n  var dataMin = Lib.aggNums(Math.min, null, data);\n  var dataMax = Lib.aggNums(Math.max, null, data);\n\n  if (ax.type === 'category' || ax.type === 'multicategory') {\n    return {\n      start: dataMin - 0.5,\n      end: dataMax + 0.5,\n      size: Math.max(1, Math.round(size) || 1),\n      _dataSpan: dataMax - dataMin\n    };\n  }\n\n  if (!calendar) calendar = ax.calendar; // piggyback off tick code to make \"nice\" bin sizes and edges\n\n  var dummyAx;\n\n  if (ax.type === 'log') {\n    dummyAx = {\n      type: 'linear',\n      range: [dataMin, dataMax]\n    };\n  } else {\n    dummyAx = {\n      type: ax.type,\n      range: Lib.simpleMap([dataMin, dataMax], ax.c2r, 0, calendar),\n      calendar: calendar\n    };\n  }\n\n  axes.setConvert(dummyAx);\n  size = size && cleanTicks.dtick(size, dummyAx.type);\n\n  if (size) {\n    dummyAx.dtick = size;\n    dummyAx.tick0 = cleanTicks.tick0(undefined, dummyAx.type, calendar);\n  } else {\n    var size0;\n    if (nbins) size0 = (dataMax - dataMin) / nbins;else {\n      // totally auto: scale off std deviation so the highest bin is\n      // somewhat taller than the total number of bins, but don't let\n      // the size get smaller than the 'nice' rounded down minimum\n      // difference between values\n      var distinctData = Lib.distinctVals(data);\n      var msexp = Math.pow(10, Math.floor(Math.log(distinctData.minDiff) / Math.LN10));\n      var minSize = msexp * Lib.roundUp(distinctData.minDiff / msexp, [0.9, 1.9, 4.9, 9.9], true);\n      size0 = Math.max(minSize, 2 * Lib.stdev(data) / Math.pow(data.length, is2d ? 0.25 : 0.4)); // fallback if ax.d2c output BADNUMs\n      // e.g. when user try to plot categorical bins\n      // on a layout.xaxis.type: 'linear'\n\n      if (!isNumeric(size0)) size0 = 1;\n    }\n    axes.autoTicks(dummyAx, size0);\n  }\n\n  var finalSize = dummyAx.dtick;\n  var binStart = axes.tickIncrement(axes.tickFirst(dummyAx), finalSize, 'reverse', calendar);\n  var binEnd, bincount; // check for too many data points right at the edges of bins\n  // (>50% within 1% of bin edges) or all data points integral\n  // and offset the bins accordingly\n\n  if (typeof finalSize === 'number') {\n    binStart = autoShiftNumericBins(binStart, data, dummyAx, dataMin, dataMax);\n    bincount = 1 + Math.floor((dataMax - binStart) / finalSize);\n    binEnd = binStart + bincount * finalSize;\n  } else {\n    // month ticks - should be the only nonlinear kind we have at this point.\n    // dtick (as supplied by axes.autoTick) only has nonlinear values on\n    // date and log axes, but even if you display a histogram on a log axis\n    // we bin it on a linear axis (which one could argue against, but that's\n    // a separate issue)\n    if (dummyAx.dtick.charAt(0) === 'M') {\n      binStart = autoShiftMonthBins(binStart, data, finalSize, dataMin, calendar);\n    } // calculate the endpoint for nonlinear ticks - you have to\n    // just increment until you're done\n\n\n    binEnd = binStart;\n    bincount = 0;\n\n    while (binEnd <= dataMax) {\n      binEnd = axes.tickIncrement(binEnd, finalSize, false, calendar);\n      bincount++;\n    }\n  }\n\n  return {\n    start: ax.c2r(binStart, 0, calendar),\n    end: ax.c2r(binEnd, 0, calendar),\n    size: finalSize,\n    _dataSpan: dataMax - dataMin\n  };\n};\n\nfunction autoShiftNumericBins(binStart, data, ax, dataMin, dataMax) {\n  var edgecount = 0;\n  var midcount = 0;\n  var intcount = 0;\n  var blankCount = 0;\n\n  function nearEdge(v) {\n    // is a value within 1% of a bin edge?\n    return (1 + (v - binStart) * 100 / ax.dtick) % 100 < 2;\n  }\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i] % 1 === 0) intcount++;else if (!isNumeric(data[i])) blankCount++;\n    if (nearEdge(data[i])) edgecount++;\n    if (nearEdge(data[i] + ax.dtick / 2)) midcount++;\n  }\n\n  var dataCount = data.length - blankCount;\n\n  if (intcount === dataCount && ax.type !== 'date') {\n    if (ax.dtick < 1) {\n      // all integers: if bin size is <1, it's because\n      // that was specifically requested (large nbins)\n      // so respect that... but center the bins containing\n      // integers on those integers\n      binStart = dataMin - 0.5 * ax.dtick;\n    } else {\n      // otherwise start half an integer down regardless of\n      // the bin size, just enough to clear up endpoint\n      // ambiguity about which integers are in which bins.\n      binStart -= 0.5;\n      if (binStart + ax.dtick < dataMin) binStart += ax.dtick;\n    }\n  } else if (midcount < dataCount * 0.1) {\n    if (edgecount > dataCount * 0.3 || nearEdge(dataMin) || nearEdge(dataMax)) {\n      // lots of points at the edge, not many in the middle\n      // shift half a bin\n      var binshift = ax.dtick / 2;\n      binStart += binStart + binshift < dataMin ? binshift : -binshift;\n    }\n  }\n\n  return binStart;\n}\n\nfunction autoShiftMonthBins(binStart, data, dtick, dataMin, calendar) {\n  var stats = Lib.findExactDates(data, calendar); // number of data points that needs to be an exact value\n  // to shift that increment to (near) the bin center\n\n  var threshold = 0.8;\n\n  if (stats.exactDays > threshold) {\n    var numMonths = Number(dtick.substr(1));\n\n    if (stats.exactYears > threshold && numMonths % 12 === 0) {\n      // The exact middle of a non-leap-year is 1.5 days into July\n      // so if we start the bins here, all but leap years will\n      // get hover-labeled as exact years.\n      binStart = axes.tickIncrement(binStart, 'M6', 'reverse') + ONEDAY * 1.5;\n    } else if (stats.exactMonths > threshold) {\n      // Months are not as clean, but if we shift half the *longest*\n      // month (31/2 days) then 31-day months will get labeled exactly\n      // and shorter months will get labeled with the correct month\n      // but shifted 12-36 hours into it.\n      binStart = axes.tickIncrement(binStart, 'M1', 'reverse') + ONEDAY * 15.5;\n    } else {\n      // Shifting half a day is exact, but since these are month bins it\n      // will always give a somewhat odd-looking label, until we do something\n      // smarter like showing the bin boundaries (or the bounds of the actual\n      // data in each bin)\n      binStart -= HALFDAY;\n    }\n\n    var nextBinStart = axes.tickIncrement(binStart, dtick);\n    if (nextBinStart <= dataMin) return nextBinStart;\n  }\n\n  return binStart;\n} // ----------------------------------------------------\n// Ticks and grids\n// ----------------------------------------------------\n// ensure we have tick0, dtick, and tick rounding calculated\n\n\naxes.prepTicks = function (ax, opts) {\n  var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts); // calculate max number of (auto) ticks to display based on plot size\n\n  if (ax.tickmode === 'auto' || !ax.dtick) {\n    var nt = ax.nticks;\n    var minPx;\n\n    if (!nt) {\n      if (ax.type === 'category' || ax.type === 'multicategory') {\n        minPx = ax.tickfont ? (ax.tickfont.size || 12) * 1.2 : 15;\n        nt = ax._length / minPx;\n      } else {\n        minPx = ax._id.charAt(0) === 'y' ? 40 : 80;\n        nt = Lib.constrain(ax._length / minPx, 4, 9) + 1;\n      } // radial axes span half their domain,\n      // multiply nticks value by two to get correct number of auto ticks.\n\n\n      if (ax._name === 'radialaxis') nt *= 2;\n    } // add a couple of extra digits for filling in ticks when we\n    // have explicit tickvals without tick text\n\n\n    if (ax.tickmode === 'array') nt *= 100;\n    ax._roughDTick = (Math.abs(rng[1] - rng[0]) - (ax._lBreaks || 0)) / nt;\n    axes.autoTicks(ax, ax._roughDTick); // check for a forced minimum dtick\n\n    if (ax._minDtick > 0 && ax.dtick < ax._minDtick * 2) {\n      ax.dtick = ax._minDtick;\n      ax.tick0 = ax.l2r(ax._forceTick0);\n    }\n  } // check for missing tick0\n\n\n  if (!ax.tick0) {\n    ax.tick0 = ax.type === 'date' ? '2000-01-01' : 0;\n  } // ensure we don't try to make ticks below our minimum precision\n  // see https://github.com/plotly/plotly.js/issues/2892\n\n\n  if (ax.type === 'date' && ax.dtick < 0.1) ax.dtick = 0.1; // now figure out rounding of tick values\n\n  autoTickRound(ax);\n}; // calculate the ticks: text, values, positioning\n// if ticks are set to automatic, determine the right values (tick0,dtick)\n// in any case, set tickround to # of digits to round tick labels to,\n// or codes to this effect for log and date scales\n\n\naxes.calcTicks = function calcTicks(ax, opts) {\n  axes.prepTicks(ax, opts);\n  var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts); // now that we've figured out the auto values for formatting\n  // in case we're missing some ticktext, we can break out for array ticks\n\n  if (ax.tickmode === 'array') return arrayTicks(ax); // find the first tick\n\n  ax._tmin = axes.tickFirst(ax, opts); // add a tiny bit so we get ticks which may have rounded out\n\n  var exRng = expandRange(rng);\n  var startTick = exRng[0];\n  var endTick = exRng[1]; // check for reversed axis\n\n  var axrev = rng[1] < rng[0]; // No visible ticks? Quit.\n  // I've only seen this on category axes with all categories off the edge.\n\n  if (ax._tmin < startTick !== axrev) return []; // return the full set of tick vals\n\n  if (ax.type === 'category' || ax.type === 'multicategory') {\n    endTick = axrev ? Math.max(-0.5, endTick) : Math.min(ax._categories.length - 0.5, endTick);\n  }\n\n  var isDLog = ax.type === 'log' && !(isNumeric(ax.dtick) || ax.dtick.charAt(0) === 'L');\n  var tickVals;\n\n  function generateTicks() {\n    var xPrevious = null;\n    var maxTicks = Math.max(1000, ax._length || 0);\n    tickVals = [];\n\n    for (var x = ax._tmin; axrev ? x >= endTick : x <= endTick; x = axes.tickIncrement(x, ax.dtick, axrev, ax.calendar)) {\n      // prevent infinite loops - no more than one tick per pixel,\n      // and make sure each value is different from the previous\n      if (tickVals.length > maxTicks || x === xPrevious) break;\n      xPrevious = x;\n      var minor = false;\n\n      if (isDLog && x !== (x | 0)) {\n        minor = true;\n      }\n\n      tickVals.push({\n        minor: minor,\n        value: x\n      });\n    }\n  }\n\n  generateTicks();\n  var isPeriod = ax.ticklabelmode === 'period';\n\n  if (isPeriod) {\n    // add one label to show pre tick0 period\n    tickVals.unshift({\n      minor: false,\n      value: axes.tickIncrement(tickVals[0].value, ax.dtick, !axrev, ax.caldendar)\n    });\n  }\n\n  if (ax.rangebreaks) {\n    // replace ticks inside breaks that would get a tick\n    // and reduce ticks\n    var len = tickVals.length;\n\n    if (len) {\n      var tf = 0;\n\n      if (ax.tickmode === 'auto') {\n        tf = (ax._id.charAt(0) === 'y' ? 2 : 6) * (ax.tickfont ? ax.tickfont.size : 12);\n      }\n\n      var newTickVals = [];\n      var prevPos;\n      var dir = axrev ? 1 : -1;\n      var first = axrev ? 0 : len - 1;\n      var last = axrev ? len - 1 : 0;\n\n      for (var q = first; dir * q <= dir * last; q += dir) {\n        var tickVal = tickVals[q];\n\n        if (ax.maskBreaks(tickVal.value) === BADNUM) {\n          tickVal.value = moveOutsideBreak(tickVal.value, ax);\n          if (ax._rl && (ax._rl[0] === tickVal.value || ax._rl[1] === tickVal.value)) continue;\n        }\n\n        var pos = ax.c2p(tickVal.value);\n\n        if (pos === prevPos) {\n          if (newTickVals[newTickVals.length - 1].value < tickVal.value) {\n            newTickVals[newTickVals.length - 1] = tickVal;\n          }\n        } else if (prevPos === undefined || Math.abs(pos - prevPos) > tf) {\n          prevPos = pos;\n          newTickVals.push(tickVal);\n        }\n      }\n\n      tickVals = newTickVals.reverse();\n    }\n  } // If same angle over a full circle, the last tick vals is a duplicate.\n  // TODO must do something similar for angular date axes.\n\n\n  if (isAngular(ax) && Math.abs(rng[1] - rng[0]) === 360) {\n    tickVals.pop();\n  } // save the last tick as well as first, so we can\n  // show the exponent only on the last one\n\n\n  ax._tmax = (tickVals[tickVals.length - 1] || {}).value; // for showing the rest of a date when the main tick label is only the\n  // latter part: ax._prevDateHead holds what we showed most recently.\n  // Start with it cleared and mark that we're in calcTicks (ie calculating a\n  // whole string of these so we should care what the previous date head was!)\n\n  ax._prevDateHead = '';\n  ax._inCalcTicks = true;\n  var minRange = Math.min(rng[0], rng[1]);\n  var maxRange = Math.max(rng[0], rng[1]);\n  var definedDelta;\n  var tickformat = axes.getTickFormat(ax);\n\n  if (isPeriod && tickformat) {\n    if (!/%[fLQsSMX]/.test(tickformat) // %f: microseconds as a decimal number [000000, 999999]\n    // %L: milliseconds as a decimal number [000, 999]\n    // %Q: milliseconds since UNIX epoch\n    // %s: seconds since UNIX epoch\n    // %S: second as a decimal number [00,61]\n    // %M: minute as a decimal number [00,59]\n    // %X: the locale’s time, such as %-I:%M:%S %p\n    ) {\n        if (/%[HI]/.test(tickformat) // %H: hour (24-hour clock) as a decimal number [00,23]\n        // %I: hour (12-hour clock) as a decimal number [01,12]\n        ) definedDelta = ONEHOUR;else if (/%p/.test(tickformat) // %p: either AM or PM\n        ) definedDelta = HALFDAY;else if (/%[Aadejuwx]/.test(tickformat) // %A: full weekday name\n        // %a: abbreviated weekday name\n        // %d: zero-padded day of the month as a decimal number [01,31]\n        // %e: space-padded day of the month as a decimal number [ 1,31]\n        // %j: day of the year as a decimal number [001,366]\n        // %u: Monday-based (ISO 8601) weekday as a decimal number [1,7]\n        // %w: Sunday-based weekday as a decimal number [0,6]\n        // %x: the locale’s date, such as %-m/%-d/%Y\n        ) definedDelta = ONEDAY;else if (/%[UVW]/.test(tickformat) // %U: Sunday-based week of the year as a decimal number [00,53]\n        // %V: ISO 8601 week of the year as a decimal number [01, 53]\n        // %W: Monday-based week of the year as a decimal number [00,53]\n        ) definedDelta = ONEWEEK;else if (/%[Bbm]/.test(tickformat) // %B: full month name\n        // %b: abbreviated month name\n        // %m: month as a decimal number [01,12]\n        ) definedDelta = ONEAVGMONTH;else if (/%[q]/.test(tickformat) // %q: quarter of the year as a decimal number [1,4]\n        ) definedDelta = ONEAVGQUARTER;else if (/%[Yy]/.test(tickformat) // %Y: year with century as a decimal number, such as 1999\n        // %y: year without century as a decimal number [00,99]\n        ) definedDelta = ONEAVGYEAR;\n      }\n  }\n\n  var ticksOut = [];\n  var i;\n  var prevText;\n\n  for (i = 0; i < tickVals.length; i++) {\n    var _minor = tickVals[i].minor;\n    var _value = tickVals[i].value;\n    var t = axes.tickText(ax, _value, false, // hover\n    _minor // noSuffixPrefix\n    );\n    if (isPeriod && prevText === t.text) continue;\n    prevText = t.text;\n    ticksOut.push(t);\n  }\n\n  if (isPeriod) {\n    var removedPreTick0Label = false;\n\n    for (i = 0; i < ticksOut.length; i++) {\n      var v = ticksOut[i].x;\n      var a = i;\n      var b = i + 1;\n\n      if (i < ticksOut.length - 1) {\n        a = i;\n        b = i + 1;\n      } else if (i > 0) {\n        a = i - 1;\n        b = i;\n      } else {\n        a = i;\n        b = i;\n      }\n\n      var A = ticksOut[a].x;\n      var B = ticksOut[b].x;\n      var actualDelta = Math.abs(B - A);\n      var delta = definedDelta || actualDelta;\n      var periodLength = 0;\n\n      if (delta >= ONEMINYEAR) {\n        if (actualDelta >= ONEMINYEAR && actualDelta <= ONEMAXYEAR) {\n          periodLength = actualDelta;\n        } else {\n          periodLength = ONEAVGYEAR;\n        }\n      } else if (definedDelta === ONEAVGQUARTER && delta >= ONEMINQUARTER) {\n        if (actualDelta >= ONEMINQUARTER && actualDelta <= ONEMAXQUARTER) {\n          periodLength = actualDelta;\n        } else {\n          periodLength = ONEAVGQUARTER;\n        }\n      } else if (delta >= ONEMINMONTH) {\n        if (actualDelta >= ONEMINMONTH && actualDelta <= ONEMAXMONTH) {\n          periodLength = actualDelta;\n        } else {\n          periodLength = ONEAVGMONTH;\n        }\n      } else if (definedDelta === ONEWEEK && delta >= ONEWEEK) {\n        periodLength = ONEWEEK;\n      } else if (delta >= ONEDAY) {\n        periodLength = ONEDAY;\n      } else if (definedDelta === HALFDAY && delta >= HALFDAY) {\n        periodLength = HALFDAY;\n      } else if (definedDelta === ONEHOUR && delta >= ONEHOUR) {\n        periodLength = ONEHOUR;\n      }\n\n      if (periodLength && ax.rangebreaks) {\n        var nFirstHalf = 0;\n        var nSecondHalf = 0;\n        var nAll = 2 * 3 * 7; // number of samples\n\n        for (var c = 0; c < nAll; c++) {\n          var r = c / nAll;\n\n          if (ax.maskBreaks(A * (1 - r) + B * r) !== BADNUM) {\n            if (r < 0.5) {\n              nFirstHalf++;\n            } else {\n              nSecondHalf++;\n            }\n          }\n        }\n\n        if (nSecondHalf) {\n          periodLength *= (nFirstHalf + nSecondHalf) / nAll;\n        }\n      }\n\n      if (periodLength <= actualDelta) {\n        // i.e. to ensure new label positions remain between ticks\n        v += periodLength / 2;\n      }\n\n      ticksOut[i].periodX = v;\n\n      if (v > maxRange || v < minRange) {\n        // hide label if outside the range\n        ticksOut[i].text = '';\n        removedPreTick0Label = true;\n      }\n    }\n\n    if (removedPreTick0Label) {\n      for (i = 0; i < ticksOut.length; i++) {\n        if (ticksOut[i].periodX <= maxRange && ticksOut[i].periodX >= minRange) {\n          // redo first visible tick\n          ax._prevDateHead = '';\n          ticksOut[i].text = axes.tickText(ax, ticksOut[i].x).text;\n          break;\n        }\n      }\n    }\n  }\n\n  ax._inCalcTicks = false;\n  return ticksOut;\n};\n\nfunction arrayTicks(ax) {\n  var vals = ax.tickvals;\n  var text = ax.ticktext;\n  var ticksOut = new Array(vals.length);\n  var rng = Lib.simpleMap(ax.range, ax.r2l);\n  var exRng = expandRange(rng);\n  var tickMin = Math.min(exRng[0], exRng[1]);\n  var tickMax = Math.max(exRng[0], exRng[1]);\n  var j = 0; // without a text array, just format the given values as any other ticks\n  // except with more precision to the numbers\n\n  if (!Array.isArray(text)) text = []; // make sure showing ticks doesn't accidentally add new categories\n  // TODO multicategory, if we allow ticktext / tickvals\n\n  var tickVal2l = ax.type === 'category' ? ax.d2l_noadd : ax.d2l; // array ticks on log axes always show the full number\n  // (if no explicit ticktext overrides it)\n\n  if (ax.type === 'log' && String(ax.dtick).charAt(0) !== 'L') {\n    ax.dtick = 'L' + Math.pow(10, Math.floor(Math.min(ax.range[0], ax.range[1])) - 1);\n  }\n\n  for (var i = 0; i < vals.length; i++) {\n    var vali = tickVal2l(vals[i]);\n\n    if (vali > tickMin && vali < tickMax) {\n      if (text[i] === undefined) ticksOut[j] = axes.tickText(ax, vali);else ticksOut[j] = tickTextObj(ax, vali, String(text[i]));\n      j++;\n    }\n  }\n\n  if (j < vals.length) ticksOut.splice(j, vals.length - j);\n\n  if (ax.rangebreaks) {\n    // remove ticks falling inside rangebreaks\n    ticksOut = ticksOut.filter(function (d) {\n      return ax.maskBreaks(d.x) !== BADNUM;\n    });\n  }\n\n  return ticksOut;\n}\n\nvar roundBase10 = [2, 5, 10];\nvar roundBase24 = [1, 2, 3, 6, 12];\nvar roundBase60 = [1, 2, 5, 10, 15, 30]; // 2&3 day ticks are weird, but need something btwn 1&7\n\nvar roundDays = [1, 2, 3, 7, 14]; // approx. tick positions for log axes, showing all (1) and just 1, 2, 5 (2)\n// these don't have to be exact, just close enough to round to the right value\n\nvar roundLog1 = [-0.046, 0, 0.301, 0.477, 0.602, 0.699, 0.778, 0.845, 0.903, 0.954, 1];\nvar roundLog2 = [-0.301, 0, 0.301, 0.699, 1]; // N.B. `thetaunit; 'radians' angular axes must be converted to degrees\n\nvar roundAngles = [15, 30, 45, 90, 180];\n\nfunction roundDTick(roughDTick, base, roundingSet) {\n  return base * Lib.roundUp(roughDTick / base, roundingSet);\n} // autoTicks: calculate best guess at pleasant ticks for this axis\n// inputs:\n//      ax - an axis object\n//      roughDTick - rough tick spacing (to be turned into a nice round number)\n// outputs (into ax):\n//   tick0: starting point for ticks (not necessarily on the graph)\n//      usually 0 for numeric (=10^0=1 for log) or jan 1, 2000 for dates\n//   dtick: the actual, nice round tick spacing, usually a little larger than roughDTick\n//      if the ticks are spaced linearly (linear scale, categories,\n//          log with only full powers, date ticks < month),\n//          this will just be a number\n//      months: M#\n//      years: M# where # is 12*number of years\n//      log with linear ticks: L# where # is the linear tick spacing\n//      log showing powers plus some intermediates:\n//          D1 shows all digits, D2 shows 2 and 5\n\n\naxes.autoTicks = function (ax, roughDTick) {\n  var base;\n\n  function getBase(v) {\n    return Math.pow(v, Math.floor(Math.log(roughDTick) / Math.LN10));\n  }\n\n  if (ax.type === 'date') {\n    ax.tick0 = Lib.dateTick0(ax.calendar); // the criteria below are all based on the rough spacing we calculate\n    // being > half of the final unit - so precalculate twice the rough val\n\n    var roughX2 = 2 * roughDTick;\n\n    if (roughX2 > ONEAVGYEAR) {\n      roughDTick /= ONEAVGYEAR;\n      base = getBase(10);\n      ax.dtick = 'M' + 12 * roundDTick(roughDTick, base, roundBase10);\n    } else if (roughX2 > ONEAVGMONTH) {\n      roughDTick /= ONEAVGMONTH;\n      ax.dtick = 'M' + roundDTick(roughDTick, 1, roundBase24);\n    } else if (roughX2 > ONEDAY) {\n      ax.dtick = roundDTick(roughDTick, ONEDAY, ax._hasDayOfWeekBreaks ? [1, 2, 7, 14] : roundDays); // get week ticks on sunday\n      // this will also move the base tick off 2000-01-01 if dtick is\n      // 2 or 3 days... but that's a weird enough case that we'll ignore it.\n\n      ax.tick0 = Lib.dateTick0(ax.calendar, true);\n      var tickformat = axes.getTickFormat(ax);\n\n      if (/%[uVW]/.test(tickformat)) {\n        // replace Sunday with Monday for ISO and Monday-based formats\n        var len = ax.tick0.length;\n        var lastD = +ax.tick0[len - 1];\n        ax.tick0 = ax.tick0.substring(0, len - 2) + String(lastD + 1);\n      }\n    } else if (roughX2 > ONEHOUR) {\n      ax.dtick = roundDTick(roughDTick, ONEHOUR, roundBase24);\n    } else if (roughX2 > ONEMIN) {\n      ax.dtick = roundDTick(roughDTick, ONEMIN, roundBase60);\n    } else if (roughX2 > ONESEC) {\n      ax.dtick = roundDTick(roughDTick, ONESEC, roundBase60);\n    } else {\n      // milliseconds\n      base = getBase(10);\n      ax.dtick = roundDTick(roughDTick, base, roundBase10);\n    }\n  } else if (ax.type === 'log') {\n    ax.tick0 = 0;\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n\n    if (roughDTick > 0.7) {\n      // only show powers of 10\n      ax.dtick = Math.ceil(roughDTick);\n    } else if (Math.abs(rng[1] - rng[0]) < 1) {\n      // span is less than one power of 10\n      var nt = 1.5 * Math.abs((rng[1] - rng[0]) / roughDTick); // ticks on a linear scale, labeled fully\n\n      roughDTick = Math.abs(Math.pow(10, rng[1]) - Math.pow(10, rng[0])) / nt;\n      base = getBase(10);\n      ax.dtick = 'L' + roundDTick(roughDTick, base, roundBase10);\n    } else {\n      // include intermediates between powers of 10,\n      // labeled with small digits\n      // ax.dtick = \"D2\" (show 2 and 5) or \"D1\" (show all digits)\n      ax.dtick = roughDTick > 0.3 ? 'D2' : 'D1';\n    }\n  } else if (ax.type === 'category' || ax.type === 'multicategory') {\n    ax.tick0 = 0;\n    ax.dtick = Math.ceil(Math.max(roughDTick, 1));\n  } else if (isAngular(ax)) {\n    ax.tick0 = 0;\n    base = 1;\n    ax.dtick = roundDTick(roughDTick, base, roundAngles);\n  } else {\n    // auto ticks always start at 0\n    ax.tick0 = 0;\n    base = getBase(10);\n    ax.dtick = roundDTick(roughDTick, base, roundBase10);\n  } // prevent infinite loops\n\n\n  if (ax.dtick === 0) ax.dtick = 1; // TODO: this is from log axis histograms with autorange off\n\n  if (!isNumeric(ax.dtick) && typeof ax.dtick !== 'string') {\n    var olddtick = ax.dtick;\n    ax.dtick = 1;\n    throw 'ax.dtick error: ' + String(olddtick);\n  }\n}; // after dtick is already known, find tickround = precision\n// to display in tick labels\n//   for numeric ticks, integer # digits after . to round to\n//   for date ticks, the last date part to show (y,m,d,H,M,S)\n//      or an integer # digits past seconds\n\n\nfunction autoTickRound(ax) {\n  var dtick = ax.dtick;\n  ax._tickexponent = 0;\n\n  if (!isNumeric(dtick) && typeof dtick !== 'string') {\n    dtick = 1;\n  }\n\n  if (ax.type === 'category' || ax.type === 'multicategory') {\n    ax._tickround = null;\n  }\n\n  if (ax.type === 'date') {\n    // If tick0 is unusual, give tickround a bit more information\n    // not necessarily *all* the information in tick0 though, if it's really odd\n    // minimal string length for tick0: 'd' is 10, 'M' is 16, 'S' is 19\n    // take off a leading minus (year < 0) and i (intercalary month) so length is consistent\n    var tick0ms = ax.r2l(ax.tick0);\n    var tick0str = ax.l2r(tick0ms).replace(/(^-|i)/g, '');\n    var tick0len = tick0str.length;\n\n    if (String(dtick).charAt(0) === 'M') {\n      // any tick0 more specific than a year: alway show the full date\n      if (tick0len > 10 || tick0str.substr(5) !== '01-01') ax._tickround = 'd'; // show the month unless ticks are full multiples of a year\n      else ax._tickround = +dtick.substr(1) % 12 === 0 ? 'y' : 'm';\n    } else if (dtick >= ONEDAY && tick0len <= 10 || dtick >= ONEDAY * 15) ax._tickround = 'd';else if (dtick >= ONEMIN && tick0len <= 16 || dtick >= ONEHOUR) ax._tickround = 'M';else if (dtick >= ONESEC && tick0len <= 19 || dtick >= ONEMIN) ax._tickround = 'S';else {\n      // tickround is a number of digits of fractional seconds\n      // of any two adjacent ticks, at least one will have the maximum fractional digits\n      // of all possible ticks - so take the max. length of tick0 and the next one\n      var tick1len = ax.l2r(tick0ms + dtick).replace(/^-/, '').length;\n      ax._tickround = Math.max(tick0len, tick1len) - 20; // We shouldn't get here... but in case there's a situation I'm\n      // not thinking of where tick0str and tick1str are identical or\n      // something, fall back on maximum precision\n\n      if (ax._tickround < 0) ax._tickround = 4;\n    }\n  } else if (isNumeric(dtick) || dtick.charAt(0) === 'L') {\n    // linear or log (except D1, D2)\n    var rng = ax.range.map(ax.r2d || Number);\n    if (!isNumeric(dtick)) dtick = Number(dtick.substr(1)); // 2 digits past largest digit of dtick\n\n    ax._tickround = 2 - Math.floor(Math.log(dtick) / Math.LN10 + 0.01);\n    var maxend = Math.max(Math.abs(rng[0]), Math.abs(rng[1]));\n    var rangeexp = Math.floor(Math.log(maxend) / Math.LN10 + 0.01);\n\n    if (Math.abs(rangeexp) > 3) {\n      if (isSIFormat(ax.exponentformat) && !beyondSI(rangeexp)) {\n        ax._tickexponent = 3 * Math.round((rangeexp - 1) / 3);\n      } else ax._tickexponent = rangeexp;\n    }\n  } else {\n    // D1 or D2 (log)\n    ax._tickround = null;\n  }\n} // months and years don't have constant millisecond values\n// (but a year is always 12 months so we only need months)\n// log-scale ticks are also not consistently spaced, except\n// for pure powers of 10\n// numeric ticks always have constant differences, other datetime ticks\n// can all be calculated as constant number of milliseconds\n\n\naxes.tickIncrement = function (x, dtick, axrev, calendar) {\n  var axSign = axrev ? -1 : 1; // includes linear, all dates smaller than month, and pure 10^n in log\n\n  if (isNumeric(dtick)) return Lib.increment(x, axSign * dtick); // everything else is a string, one character plus a number\n\n  var tType = dtick.charAt(0);\n  var dtSigned = axSign * Number(dtick.substr(1)); // Dates: months (or years - see Lib.incrementMonth)\n\n  if (tType === 'M') return Lib.incrementMonth(x, dtSigned, calendar); // Log scales: Linear, Digits\n\n  if (tType === 'L') return Math.log(Math.pow(10, x) + dtSigned) / Math.LN10; // log10 of 2,5,10, or all digits (logs just have to be\n  // close enough to round)\n\n  if (tType === 'D') {\n    var tickset = dtick === 'D2' ? roundLog2 : roundLog1;\n    var x2 = x + axSign * 0.01;\n    var frac = Lib.roundUp(Lib.mod(x2, 1), tickset, axrev);\n    return Math.floor(x2) + Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n  }\n\n  throw 'unrecognized dtick ' + String(dtick);\n}; // calculate the first tick on an axis\n\n\naxes.tickFirst = function (ax, opts) {\n  var r2l = ax.r2l || Number;\n  var rng = Lib.simpleMap(ax.range, r2l, undefined, undefined, opts);\n  var axrev = rng[1] < rng[0];\n  var sRound = axrev ? Math.floor : Math.ceil; // add a tiny extra bit to make sure we get ticks\n  // that may have been rounded out\n\n  var r0 = expandRange(rng)[0];\n  var dtick = ax.dtick;\n  var tick0 = r2l(ax.tick0);\n\n  if (isNumeric(dtick)) {\n    var tmin = sRound((r0 - tick0) / dtick) * dtick + tick0; // make sure no ticks outside the category list\n\n    if (ax.type === 'category' || ax.type === 'multicategory') {\n      tmin = Lib.constrain(tmin, 0, ax._categories.length - 1);\n    }\n\n    return tmin;\n  }\n\n  var tType = dtick.charAt(0);\n  var dtNum = Number(dtick.substr(1)); // Dates: months (or years)\n\n  if (tType === 'M') {\n    var cnt = 0;\n    var t0 = tick0;\n    var t1, mult, newDTick; // This algorithm should work for *any* nonlinear (but close to linear!)\n    // tick spacing. Limit to 10 iterations, for gregorian months it's normally <=3.\n\n    while (cnt < 10) {\n      t1 = axes.tickIncrement(t0, dtick, axrev, ax.calendar);\n\n      if ((t1 - r0) * (t0 - r0) <= 0) {\n        // t1 and t0 are on opposite sides of r0! we've succeeded!\n        if (axrev) return Math.min(t0, t1);\n        return Math.max(t0, t1);\n      }\n\n      mult = (r0 - (t0 + t1) / 2) / (t1 - t0);\n      newDTick = tType + (Math.abs(Math.round(mult)) || 1) * dtNum;\n      t0 = axes.tickIncrement(t0, newDTick, mult < 0 ? !axrev : axrev, ax.calendar);\n      cnt++;\n    }\n\n    Lib.error('tickFirst did not converge', ax);\n    return t0;\n  } else if (tType === 'L') {\n    // Log scales: Linear, Digits\n    return Math.log(sRound((Math.pow(10, r0) - tick0) / dtNum) * dtNum + tick0) / Math.LN10;\n  } else if (tType === 'D') {\n    var tickset = dtick === 'D2' ? roundLog2 : roundLog1;\n    var frac = Lib.roundUp(Lib.mod(r0, 1), tickset, axrev);\n    return Math.floor(r0) + Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n  } else throw 'unrecognized dtick ' + String(dtick);\n}; // draw the text for one tick.\n// px,py are the location on gd.paper\n// prefix is there so the x axis ticks can be dropped a line\n// ax is the axis layout, x is the tick value\n// hover is a (truthy) flag for whether to show numbers with a bit\n// more precision for hovertext\n\n\naxes.tickText = function (ax, x, hover, noSuffixPrefix) {\n  var out = tickTextObj(ax, x);\n  var arrayMode = ax.tickmode === 'array';\n  var extraPrecision = hover || arrayMode;\n  var axType = ax.type; // TODO multicategory, if we allow ticktext / tickvals\n\n  var tickVal2l = axType === 'category' ? ax.d2l_noadd : ax.d2l;\n  var i;\n\n  if (arrayMode && Array.isArray(ax.ticktext)) {\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n    var minDiff = (Math.abs(rng[1] - rng[0]) - (ax._lBreaks || 0)) / 10000;\n\n    for (i = 0; i < ax.ticktext.length; i++) {\n      if (Math.abs(x - tickVal2l(ax.tickvals[i])) < minDiff) break;\n    }\n\n    if (i < ax.ticktext.length) {\n      out.text = String(ax.ticktext[i]);\n      return out;\n    }\n  }\n\n  function isHidden(showAttr) {\n    if (showAttr === undefined) return true;\n    if (hover) return showAttr === 'none';\n    var firstOrLast = {\n      first: ax._tmin,\n      last: ax._tmax\n    }[showAttr];\n    return showAttr !== 'all' && x !== firstOrLast;\n  }\n\n  var hideexp = hover ? 'never' : ax.exponentformat !== 'none' && isHidden(ax.showexponent) ? 'hide' : '';\n  if (axType === 'date') formatDate(ax, out, hover, extraPrecision);else if (axType === 'log') formatLog(ax, out, hover, extraPrecision, hideexp);else if (axType === 'category') formatCategory(ax, out);else if (axType === 'multicategory') formatMultiCategory(ax, out, hover);else if (isAngular(ax)) formatAngle(ax, out, hover, extraPrecision, hideexp);else formatLinear(ax, out, hover, extraPrecision, hideexp); // add prefix and suffix\n\n  if (!noSuffixPrefix) {\n    if (ax.tickprefix && !isHidden(ax.showtickprefix)) out.text = ax.tickprefix + out.text;\n    if (ax.ticksuffix && !isHidden(ax.showticksuffix)) out.text += ax.ticksuffix;\n  } // Setup ticks and grid lines boundaries\n  // at 1/2 a 'category' to the left/bottom\n\n\n  if (ax.tickson === 'boundaries' || ax.showdividers) {\n    var inbounds = function (v) {\n      var p = ax.l2p(v);\n      return p >= 0 && p <= ax._length ? v : null;\n    };\n\n    out.xbnd = [inbounds(out.x - 0.5), inbounds(out.x + ax.dtick - 0.5)];\n  }\n\n  return out;\n};\n/**\n * create text for a hover label on this axis, with special handling of\n * log axes (where negative values can't be displayed but can appear in hover text)\n *\n * @param {object} ax: the axis to format text for\n * @param {number} val: calcdata value to format\n * @param {Optional(number)} val2: a second value to display\n *\n * @returns {string} `val` formatted as a string appropriate to this axis, or\n *     `val` and `val2` as a range (ie '<val> - <val2>') if `val2` is provided and\n *     it's different from `val`.\n */\n\n\naxes.hoverLabelText = function (ax, val, val2) {\n  if (val2 !== BADNUM && val2 !== val) {\n    return axes.hoverLabelText(ax, val) + ' - ' + axes.hoverLabelText(ax, val2);\n  }\n\n  var logOffScale = ax.type === 'log' && val <= 0;\n  var tx = axes.tickText(ax, ax.c2l(logOffScale ? -val : val), 'hover').text;\n\n  if (logOffScale) {\n    return val === 0 ? '0' : MINUS_SIGN + tx;\n  } // TODO: should we do something special if the axis calendar and\n  // the data calendar are different? Somehow display both dates with\n  // their system names? Right now it will just display in the axis calendar\n  // but users could add the other one as text.\n\n\n  return tx;\n};\n\nfunction tickTextObj(ax, x, text) {\n  var tf = ax.tickfont || {};\n  return {\n    x: x,\n    dx: 0,\n    dy: 0,\n    text: text || '',\n    fontSize: tf.size,\n    font: tf.family,\n    fontColor: tf.color\n  };\n}\n\nfunction formatDate(ax, out, hover, extraPrecision) {\n  var tr = ax._tickround;\n  var fmt = hover && ax.hoverformat || axes.getTickFormat(ax);\n\n  if (extraPrecision) {\n    // second or sub-second precision: extra always shows max digits.\n    // for other fields, extra precision just adds one field.\n    if (isNumeric(tr)) tr = 4;else tr = {\n      y: 'm',\n      m: 'd',\n      d: 'M',\n      M: 'S',\n      S: 4\n    }[tr];\n  }\n\n  var dateStr = Lib.formatDate(out.x, fmt, tr, ax._dateFormat, ax.calendar, ax._extraFormat);\n  var headStr;\n  var splitIndex = dateStr.indexOf('\\n');\n\n  if (splitIndex !== -1) {\n    headStr = dateStr.substr(splitIndex + 1);\n    dateStr = dateStr.substr(0, splitIndex);\n  }\n\n  if (extraPrecision) {\n    // if extraPrecision led to trailing zeros, strip them off\n    // actually, this can lead to removing even more zeros than\n    // in the original rounding, but that's fine because in these\n    // contexts uniformity is not so important (if there's even\n    // anything to be uniform with!)\n    // can we remove the whole time part?\n    if (dateStr === '00:00:00' || dateStr === '00:00') {\n      dateStr = headStr;\n      headStr = '';\n    } else if (dateStr.length === 8) {\n      // strip off seconds if they're zero (zero fractional seconds\n      // are already omitted)\n      // but we never remove minutes and leave just hours\n      dateStr = dateStr.replace(/:00$/, '');\n    }\n  }\n\n  if (headStr) {\n    if (hover) {\n      // hover puts it all on one line, so headPart works best up front\n      // except for year headPart: turn this into \"Jan 1, 2000\" etc.\n      if (tr === 'd') dateStr += ', ' + headStr;else dateStr = headStr + (dateStr ? ', ' + dateStr : '');\n    } else if (!ax._inCalcTicks || headStr !== ax._prevDateHead) {\n      dateStr += '<br>' + headStr;\n      ax._prevDateHead = headStr;\n    }\n  }\n\n  out.text = dateStr;\n}\n\nfunction formatLog(ax, out, hover, extraPrecision, hideexp) {\n  var dtick = ax.dtick;\n  var x = out.x;\n  var tickformat = ax.tickformat;\n  var dtChar0 = typeof dtick === 'string' && dtick.charAt(0);\n\n  if (hideexp === 'never') {\n    // If this is a hover label, then we must *never* hide the exponent\n    // for the sake of display, which could give the wrong value by\n    // potentially many orders of magnitude. If hideexp was 'never', then\n    // it's now succeeded by preventing the other condition from automating\n    // this choice. Thus we can unset it so that the axis formatting takes\n    // precedence.\n    hideexp = '';\n  }\n\n  if (extraPrecision && dtChar0 !== 'L') {\n    dtick = 'L3';\n    dtChar0 = 'L';\n  }\n\n  if (tickformat || dtChar0 === 'L') {\n    out.text = numFormat(Math.pow(10, x), ax, hideexp, extraPrecision);\n  } else if (isNumeric(dtick) || dtChar0 === 'D' && Lib.mod(x + 0.01, 1) < 0.1) {\n    var p = Math.round(x);\n    var absP = Math.abs(p);\n    var exponentFormat = ax.exponentformat;\n\n    if (exponentFormat === 'power' || isSIFormat(exponentFormat) && beyondSI(p)) {\n      if (p === 0) out.text = 1;else if (p === 1) out.text = '10';else out.text = '10<sup>' + (p > 1 ? '' : MINUS_SIGN) + absP + '</sup>';\n      out.fontSize *= 1.25;\n    } else if ((exponentFormat === 'e' || exponentFormat === 'E') && absP > 2) {\n      out.text = '1' + exponentFormat + (p > 0 ? '+' : MINUS_SIGN) + absP;\n    } else {\n      out.text = numFormat(Math.pow(10, x), ax, '', 'fakehover');\n\n      if (dtick === 'D1' && ax._id.charAt(0) === 'y') {\n        out.dy -= out.fontSize / 6;\n      }\n    }\n  } else if (dtChar0 === 'D') {\n    out.text = String(Math.round(Math.pow(10, Lib.mod(x, 1))));\n    out.fontSize *= 0.75;\n  } else throw 'unrecognized dtick ' + String(dtick); // if 9's are printed on log scale, move the 10's away a bit\n\n\n  if (ax.dtick === 'D1') {\n    var firstChar = String(out.text).charAt(0);\n\n    if (firstChar === '0' || firstChar === '1') {\n      if (ax._id.charAt(0) === 'y') {\n        out.dx -= out.fontSize / 4;\n      } else {\n        out.dy += out.fontSize / 2;\n        out.dx += (ax.range[1] > ax.range[0] ? 1 : -1) * out.fontSize * (x < 0 ? 0.5 : 0.25);\n      }\n    }\n  }\n}\n\nfunction formatCategory(ax, out) {\n  var tt = ax._categories[Math.round(out.x)];\n\n  if (tt === undefined) tt = '';\n  out.text = String(tt);\n}\n\nfunction formatMultiCategory(ax, out, hover) {\n  var v = Math.round(out.x);\n  var cats = ax._categories[v] || [];\n  var tt = cats[1] === undefined ? '' : String(cats[1]);\n  var tt2 = cats[0] === undefined ? '' : String(cats[0]);\n\n  if (hover) {\n    // TODO is this what we want?\n    out.text = tt2 + ' - ' + tt;\n  } else {\n    // setup for secondary labels\n    out.text = tt;\n    out.text2 = tt2;\n  }\n}\n\nfunction formatLinear(ax, out, hover, extraPrecision, hideexp) {\n  if (hideexp === 'never') {\n    // If this is a hover label, then we must *never* hide the exponent\n    // for the sake of display, which could give the wrong value by\n    // potentially many orders of magnitude. If hideexp was 'never', then\n    // it's now succeeded by preventing the other condition from automating\n    // this choice. Thus we can unset it so that the axis formatting takes\n    // precedence.\n    hideexp = '';\n  } else if (ax.showexponent === 'all' && Math.abs(out.x / ax.dtick) < 1e-6) {\n    // don't add an exponent to zero if we're showing all exponents\n    // so the only reason you'd show an exponent on zero is if it's the\n    // ONLY tick to get an exponent (first or last)\n    hideexp = 'hide';\n  }\n\n  out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n}\n\nfunction formatAngle(ax, out, hover, extraPrecision, hideexp) {\n  if (ax.thetaunit === 'radians' && !hover) {\n    var num = out.x / 180;\n\n    if (num === 0) {\n      out.text = '0';\n    } else {\n      var frac = num2frac(num);\n\n      if (frac[1] >= 100) {\n        out.text = numFormat(Lib.deg2rad(out.x), ax, hideexp, extraPrecision);\n      } else {\n        var isNeg = out.x < 0;\n\n        if (frac[1] === 1) {\n          if (frac[0] === 1) out.text = 'π';else out.text = frac[0] + 'π';\n        } else {\n          out.text = ['<sup>', frac[0], '</sup>', '⁄', '<sub>', frac[1], '</sub>', 'π'].join('');\n        }\n\n        if (isNeg) out.text = MINUS_SIGN + out.text;\n      }\n    }\n  } else {\n    out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n  }\n} // inspired by\n// https://github.com/yisibl/num2fraction/blob/master/index.js\n\n\nfunction num2frac(num) {\n  function almostEq(a, b) {\n    return Math.abs(a - b) <= 1e-6;\n  }\n\n  function findGCD(a, b) {\n    return almostEq(b, 0) ? a : findGCD(b, a % b);\n  }\n\n  function findPrecision(n) {\n    var e = 1;\n\n    while (!almostEq(Math.round(n * e) / e, n)) {\n      e *= 10;\n    }\n\n    return e;\n  }\n\n  var precision = findPrecision(num);\n  var number = num * precision;\n  var gcd = Math.abs(findGCD(number, precision));\n  return [// numerator\n  Math.round(number / gcd), // denominator\n  Math.round(precision / gcd)];\n} // format a number (tick value) according to the axis settings\n// new, more reliable procedure than d3.round or similar:\n// add half the rounding increment, then stringify and truncate\n// also automatically switch to sci. notation\n\n\nvar SIPREFIXES = ['f', 'p', 'n', 'μ', 'm', '', 'k', 'M', 'G', 'T'];\n\nfunction isSIFormat(exponentFormat) {\n  return exponentFormat === 'SI' || exponentFormat === 'B';\n} // are we beyond the range of common SI prefixes?\n// 10^-16 -> 1x10^-16\n// 10^-15 -> 1f\n// ...\n// 10^14 -> 100T\n// 10^15 -> 1x10^15\n// 10^16 -> 1x10^16\n\n\nfunction beyondSI(exponent) {\n  return exponent > 14 || exponent < -15;\n}\n\nfunction numFormat(v, ax, fmtoverride, hover) {\n  var isNeg = v < 0; // max number of digits past decimal point to show\n\n  var tickRound = ax._tickround;\n  var exponentFormat = fmtoverride || ax.exponentformat || 'B';\n  var exponent = ax._tickexponent;\n  var tickformat = axes.getTickFormat(ax);\n  var separatethousands = ax.separatethousands; // special case for hover: set exponent just for this value, and\n  // add a couple more digits of precision over tick labels\n\n  if (hover) {\n    // make a dummy axis obj to get the auto rounding and exponent\n    var ah = {\n      exponentformat: exponentFormat,\n      dtick: ax.showexponent === 'none' ? ax.dtick : isNumeric(v) ? Math.abs(v) || 1 : 1,\n      // if not showing any exponents, don't change the exponent\n      // from what we calculate\n      range: ax.showexponent === 'none' ? ax.range.map(ax.r2d) : [0, v || 1]\n    };\n    autoTickRound(ah);\n    tickRound = (Number(ah._tickround) || 0) + 4;\n    exponent = ah._tickexponent;\n    if (ax.hoverformat) tickformat = ax.hoverformat;\n  }\n\n  if (tickformat) return ax._numFormat(tickformat)(v).replace(/-/g, MINUS_SIGN); // 'epsilon' - rounding increment\n\n  var e = Math.pow(10, -tickRound) / 2; // exponentFormat codes:\n  // 'e' (1.2e+6, default)\n  // 'E' (1.2E+6)\n  // 'SI' (1.2M)\n  // 'B' (same as SI except 10^9=B not G)\n  // 'none' (1200000)\n  // 'power' (1.2x10^6)\n  // 'hide' (1.2, use 3rd argument=='hide' to eg\n  //      only show exponent on last tick)\n\n  if (exponentFormat === 'none') exponent = 0; // take the sign out, put it back manually at the end\n  // - makes cases easier\n\n  v = Math.abs(v);\n\n  if (v < e) {\n    // 0 is just 0, but may get exponent if it's the last tick\n    v = '0';\n    isNeg = false;\n  } else {\n    v += e; // take out a common exponent, if any\n\n    if (exponent) {\n      v *= Math.pow(10, -exponent);\n      tickRound += exponent;\n    } // round the mantissa\n\n\n    if (tickRound === 0) v = String(Math.floor(v));else if (tickRound < 0) {\n      v = String(Math.round(v));\n      v = v.substr(0, v.length + tickRound);\n\n      for (var i = tickRound; i < 0; i++) v += '0';\n    } else {\n      v = String(v);\n      var dp = v.indexOf('.') + 1;\n      if (dp) v = v.substr(0, dp + tickRound).replace(/\\.?0+$/, '');\n    } // insert appropriate decimal point and thousands separator\n\n    v = Lib.numSeparate(v, ax._separators, separatethousands);\n  } // add exponent\n\n\n  if (exponent && exponentFormat !== 'hide') {\n    if (isSIFormat(exponentFormat) && beyondSI(exponent)) exponentFormat = 'power';\n    var signedExponent;\n    if (exponent < 0) signedExponent = MINUS_SIGN + -exponent;else if (exponentFormat !== 'power') signedExponent = '+' + exponent;else signedExponent = String(exponent);\n\n    if (exponentFormat === 'e' || exponentFormat === 'E') {\n      v += exponentFormat + signedExponent;\n    } else if (exponentFormat === 'power') {\n      v += '×10<sup>' + signedExponent + '</sup>';\n    } else if (exponentFormat === 'B' && exponent === 9) {\n      v += 'B';\n    } else if (isSIFormat(exponentFormat)) {\n      v += SIPREFIXES[exponent / 3 + 5];\n    }\n  } // put sign back in and return\n  // replace standard minus character (which is technically a hyphen)\n  // with a true minus sign\n\n\n  if (isNeg) return MINUS_SIGN + v;\n  return v;\n}\n\naxes.getTickFormat = function (ax) {\n  var i;\n\n  function convertToMs(dtick) {\n    return typeof dtick !== 'string' ? dtick : Number(dtick.replace('M', '')) * ONEAVGMONTH;\n  }\n\n  function compareLogTicks(left, right) {\n    var priority = ['L', 'D'];\n\n    if (typeof left === typeof right) {\n      if (typeof left === 'number') {\n        return left - right;\n      } else {\n        var leftPriority = priority.indexOf(left.charAt(0));\n        var rightPriority = priority.indexOf(right.charAt(0));\n\n        if (leftPriority === rightPriority) {\n          return Number(left.replace(/(L|D)/g, '')) - Number(right.replace(/(L|D)/g, ''));\n        } else {\n          return leftPriority - rightPriority;\n        }\n      }\n    } else {\n      return typeof left === 'number' ? 1 : -1;\n    }\n  }\n\n  function isProperStop(dtick, range, convert) {\n    var convertFn = convert || function (x) {\n      return x;\n    };\n\n    var leftDtick = range[0];\n    var rightDtick = range[1];\n    return (!leftDtick && typeof leftDtick !== 'number' || convertFn(leftDtick) <= convertFn(dtick)) && (!rightDtick && typeof rightDtick !== 'number' || convertFn(rightDtick) >= convertFn(dtick));\n  }\n\n  function isProperLogStop(dtick, range) {\n    var isLeftDtickNull = range[0] === null;\n    var isRightDtickNull = range[1] === null;\n    var isDtickInRangeLeft = compareLogTicks(dtick, range[0]) >= 0;\n    var isDtickInRangeRight = compareLogTicks(dtick, range[1]) <= 0;\n    return (isLeftDtickNull || isDtickInRangeLeft) && (isRightDtickNull || isDtickInRangeRight);\n  }\n\n  var tickstop, stopi;\n\n  if (ax.tickformatstops && ax.tickformatstops.length > 0) {\n    switch (ax.type) {\n      case 'date':\n      case 'linear':\n        {\n          for (i = 0; i < ax.tickformatstops.length; i++) {\n            stopi = ax.tickformatstops[i];\n\n            if (stopi.enabled && isProperStop(ax.dtick, stopi.dtickrange, convertToMs)) {\n              tickstop = stopi;\n              break;\n            }\n          }\n\n          break;\n        }\n\n      case 'log':\n        {\n          for (i = 0; i < ax.tickformatstops.length; i++) {\n            stopi = ax.tickformatstops[i];\n\n            if (stopi.enabled && isProperLogStop(ax.dtick, stopi.dtickrange)) {\n              tickstop = stopi;\n              break;\n            }\n          }\n\n          break;\n        }\n\n      default:\n    }\n  }\n\n  return tickstop ? tickstop.value : ax.tickformat;\n}; // getSubplots - extract all subplot IDs we need\n// as an array of items like 'xy', 'x2y', 'x2y2'...\n// sorted by x (x,x2,x3...) then y\n// optionally restrict to only subplots containing axis object ax\n//\n// NOTE: this is currently only used OUTSIDE plotly.js (toolpanel, webapp)\n// ideally we get rid of it there (or just copy this there) and remove it here\n\n\naxes.getSubplots = function (gd, ax) {\n  var subplotObj = gd._fullLayout._subplots;\n  var allSubplots = subplotObj.cartesian.concat(subplotObj.gl2d || []);\n  var out = ax ? axes.findSubplotsWithAxis(allSubplots, ax) : allSubplots;\n  out.sort(function (a, b) {\n    var aParts = a.substr(1).split('y');\n    var bParts = b.substr(1).split('y');\n    if (aParts[0] === bParts[0]) return +aParts[1] - +bParts[1];\n    return +aParts[0] - +bParts[0];\n  });\n  return out;\n}; // find all subplots with axis 'ax'\n// NOTE: this is only used in axes.getSubplots (only used outside plotly.js) and\n// gl2d/convert (where it restricts axis subplots to only those with gl2d)\n\n\naxes.findSubplotsWithAxis = function (subplots, ax) {\n  var axMatch = new RegExp(ax._id.charAt(0) === 'x' ? '^' + ax._id + 'y' : ax._id + '$');\n  var subplotsWithAx = [];\n\n  for (var i = 0; i < subplots.length; i++) {\n    var sp = subplots[i];\n    if (axMatch.test(sp)) subplotsWithAx.push(sp);\n  }\n\n  return subplotsWithAx;\n}; // makeClipPaths: prepare clipPaths for all single axes and all possible xy pairings\n\n\naxes.makeClipPaths = function (gd) {\n  var fullLayout = gd._fullLayout; // for more info: https://github.com/plotly/plotly.js/issues/2595\n\n  if (fullLayout._hasOnlyLargeSploms) return;\n  var fullWidth = {\n    _offset: 0,\n    _length: fullLayout.width,\n    _id: ''\n  };\n  var fullHeight = {\n    _offset: 0,\n    _length: fullLayout.height,\n    _id: ''\n  };\n  var xaList = axes.list(gd, 'x', true);\n  var yaList = axes.list(gd, 'y', true);\n  var clipList = [];\n  var i, j;\n\n  for (i = 0; i < xaList.length; i++) {\n    clipList.push({\n      x: xaList[i],\n      y: fullHeight\n    });\n\n    for (j = 0; j < yaList.length; j++) {\n      if (i === 0) clipList.push({\n        x: fullWidth,\n        y: yaList[j]\n      });\n      clipList.push({\n        x: xaList[i],\n        y: yaList[j]\n      });\n    }\n  } // selectors don't work right with camelCase tags,\n  // have to use class instead\n  // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n\n\n  var axClips = fullLayout._clips.selectAll('.axesclip').data(clipList, function (d) {\n    return d.x._id + d.y._id;\n  });\n\n  axClips.enter().append('clipPath').classed('axesclip', true).attr('id', function (d) {\n    return 'clip' + fullLayout._uid + d.x._id + d.y._id;\n  }).append('rect');\n  axClips.exit().remove();\n  axClips.each(function (d) {\n    d3.select(this).select('rect').attr({\n      x: d.x._offset || 0,\n      y: d.y._offset || 0,\n      width: d.x._length || 1,\n      height: d.y._length || 1\n    });\n  });\n};\n/**\n * Main multi-axis drawing routine!\n *\n * @param {DOM element} gd : graph div\n * @param {string or array of strings} arg : polymorphic argument\n * @param {object} opts:\n * - @param {boolean} skipTitle : optional flag to skip axis title draw/update\n *\n * Signature 1: Axes.draw(gd, 'redraw')\n *   use this to clear and redraw all axes on graph\n *\n * Signature 2: Axes.draw(gd, '')\n *   use this to draw all axes on graph w/o the selectAll().remove()\n *   of the 'redraw' signature\n *\n * Signature 3: Axes.draw(gd, [axId, axId2, ...])\n *   where the items are axis id string,\n *   use this to update multiple axes in one call\n *\n * N.B draw updates:\n * - ax._r (stored range for use by zoom/pan)\n * - ax._rl (stored linearized range for use by zoom/pan)\n */\n\n\naxes.draw = function (gd, arg, opts) {\n  var fullLayout = gd._fullLayout;\n\n  if (arg === 'redraw') {\n    fullLayout._paper.selectAll('g.subplot').each(function (d) {\n      var id = d[0];\n      var plotinfo = fullLayout._plots[id];\n      var xa = plotinfo.xaxis;\n      var ya = plotinfo.yaxis;\n      plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick').remove();\n      plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick').remove();\n      plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick2').remove();\n      plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick2').remove();\n      plotinfo.xaxislayer.selectAll('.' + xa._id + 'divider').remove();\n      plotinfo.yaxislayer.selectAll('.' + ya._id + 'divider').remove();\n      if (plotinfo.gridlayer) plotinfo.gridlayer.selectAll('path').remove();\n      if (plotinfo.zerolinelayer) plotinfo.zerolinelayer.selectAll('path').remove();\n\n      fullLayout._infolayer.select('.g-' + xa._id + 'title').remove();\n\n      fullLayout._infolayer.select('.g-' + ya._id + 'title').remove();\n    });\n  }\n\n  var axList = !arg || arg === 'redraw' ? axes.listIds(gd) : arg;\n  return Lib.syncOrAsync(axList.map(function (axId) {\n    return function () {\n      if (!axId) return;\n      var ax = axes.getFromId(gd, axId);\n      var axDone = axes.drawOne(gd, ax, opts);\n      ax._r = ax.range.slice();\n      ax._rl = Lib.simpleMap(ax._r, ax.r2l);\n      return axDone;\n    };\n  }));\n};\n/**\n * Draw one cartesian axis\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n * @param {object} opts\n * - @param {boolean} skipTitle (set to true to skip axis title draw call)\n *\n * Depends on:\n * - ax._mainSubplot (from linkSubplots)\n * - ax._mainAxis\n * - ax._anchorAxis\n * - ax._subplotsWith\n * - ax._counterDomainMin, ax._counterDomainMax (optionally, from linkSubplots)\n * - ax._tickAngles (on redraw only, old value relinked during supplyDefaults)\n * - ax._mainLinePosition (from lsInner)\n * - ax._mainMirrorPosition\n * - ax._linepositions\n *\n * Fills in:\n * - ax._vals:\n * - ax._gridVals:\n * - ax._selections:\n * - ax._tickAngles:\n * - ax._depth (when required only):\n * - and calls ax.setScale\n */\n\n\naxes.drawOne = function (gd, ax, opts) {\n  opts = opts || {};\n  var i, sp, plotinfo;\n  ax.setScale();\n  var fullLayout = gd._fullLayout;\n  var axId = ax._id;\n  var axLetter = axId.charAt(0);\n  var counterLetter = axes.counterLetter(axId);\n  var mainPlotinfo = fullLayout._plots[ax._mainSubplot]; // this happens when updating matched group with 'missing' axes\n\n  if (!mainPlotinfo) return;\n  var mainAxLayer = mainPlotinfo[axLetter + 'axislayer'];\n  var mainLinePosition = ax._mainLinePosition;\n  var mainMirrorPosition = ax._mainMirrorPosition;\n  var vals = ax._vals = axes.calcTicks(ax); // Add a couple of axis properties that should cause us to recreate\n  // elements. Used in d3 data function.\n\n  var axInfo = [ax.mirror, mainLinePosition, mainMirrorPosition].join('_');\n\n  for (i = 0; i < vals.length; i++) {\n    vals[i].axInfo = axInfo;\n  } // stash selections to avoid DOM queries e.g.\n  // - stash tickLabels selection, so that drawTitle can use it to scoot title\n\n\n  ax._selections = {}; // stash tick angle (including the computed 'auto' values) per tick-label class\n  // linkup 'previous' tick angles on redraws\n\n  if (ax._tickAngles) ax._prevTickAngles = ax._tickAngles;\n  ax._tickAngles = {}; // measure [in px] between axis position and outward-most part of bounding box\n  // (touching either the tick label or ticks)\n  // depth can be expansive to compute, so we only do so when required\n\n  ax._depth = null; // calcLabelLevelBbox can be expensive,\n  // so make sure to not call it twice during the same Axes.drawOne call\n  // by stashing label-level bounding boxes per tick-label class\n\n  var llbboxes = {};\n\n  function getLabelLevelBbox(suffix) {\n    var cls = axId + (suffix || 'tick');\n    if (!llbboxes[cls]) llbboxes[cls] = calcLabelLevelBbox(ax, cls);\n    return llbboxes[cls];\n  }\n\n  if (!ax.visible) return;\n  var transFn = axes.makeTransFn(ax);\n  var transTickLabelFn = ax.ticklabelmode === 'period' ? axes.makeTransPeriodFn(ax) : axes.makeTransFn(ax);\n  var tickVals; // We remove zero lines, grid lines, and inside ticks if they're within 1px of the end\n  // The key case here is removing zero lines when the axis bound is zero\n\n  var valsClipped;\n\n  if (ax.tickson === 'boundaries') {\n    var boundaryVals = getBoundaryVals(ax, vals);\n    valsClipped = axes.clipEnds(ax, boundaryVals);\n    tickVals = ax.ticks === 'inside' ? valsClipped : boundaryVals;\n  } else {\n    valsClipped = axes.clipEnds(ax, vals);\n    tickVals = ax.ticks === 'inside' ? valsClipped : vals;\n  }\n\n  var gridVals = ax._gridVals = valsClipped;\n  var dividerVals = getDividerVals(ax, vals);\n\n  if (!fullLayout._hasOnlyLargeSploms) {\n    var subplotsWithAx = ax._subplotsWith; // keep track of which subplots (by main counter axis) we've already\n    // drawn grids for, so we don't overdraw overlaying subplots\n\n    var finishedGrids = {};\n\n    for (i = 0; i < subplotsWithAx.length; i++) {\n      sp = subplotsWithAx[i];\n      plotinfo = fullLayout._plots[sp];\n      var counterAxis = plotinfo[counterLetter + 'axis'];\n      var mainCounterID = counterAxis._mainAxis._id;\n      if (finishedGrids[mainCounterID]) continue;\n      finishedGrids[mainCounterID] = 1;\n      var gridPath = axLetter === 'x' ? 'M0,' + counterAxis._offset + 'v' + counterAxis._length : 'M' + counterAxis._offset + ',0h' + counterAxis._length;\n      axes.drawGrid(gd, ax, {\n        vals: gridVals,\n        counterAxis: counterAxis,\n        layer: plotinfo.gridlayer.select('.' + axId),\n        path: gridPath,\n        transFn: transFn\n      });\n      axes.drawZeroLine(gd, ax, {\n        counterAxis: counterAxis,\n        layer: plotinfo.zerolinelayer,\n        path: gridPath,\n        transFn: transFn\n      });\n    }\n  }\n\n  var tickSigns = axes.getTickSigns(ax);\n  var tickSubplots = [];\n\n  if (ax.ticks) {\n    var mainTickPath = axes.makeTickPath(ax, mainLinePosition, tickSigns[2]);\n    var mirrorTickPath;\n    var fullTickPath;\n\n    if (ax._anchorAxis && ax.mirror && ax.mirror !== true) {\n      mirrorTickPath = axes.makeTickPath(ax, mainMirrorPosition, tickSigns[3]);\n      fullTickPath = mainTickPath + mirrorTickPath;\n    } else {\n      mirrorTickPath = '';\n      fullTickPath = mainTickPath;\n    }\n\n    var tickPath;\n\n    if (ax.showdividers && ax.ticks === 'outside' && ax.tickson === 'boundaries') {\n      var dividerLookup = {};\n\n      for (i = 0; i < dividerVals.length; i++) {\n        dividerLookup[dividerVals[i].x] = 1;\n      }\n\n      tickPath = function (d) {\n        return dividerLookup[d.x] ? mirrorTickPath : fullTickPath;\n      };\n    } else {\n      tickPath = fullTickPath;\n    }\n\n    axes.drawTicks(gd, ax, {\n      vals: tickVals,\n      layer: mainAxLayer,\n      path: tickPath,\n      transFn: transFn\n    });\n\n    if (ax.mirror === 'allticks') {\n      tickSubplots = Object.keys(ax._linepositions || {});\n    }\n  }\n\n  for (i = 0; i < tickSubplots.length; i++) {\n    sp = tickSubplots[i];\n    plotinfo = fullLayout._plots[sp]; // [bottom or left, top or right], free and main are handled above\n\n    var linepositions = ax._linepositions[sp] || [];\n    var spTickPath = axes.makeTickPath(ax, linepositions[0], tickSigns[0]) + axes.makeTickPath(ax, linepositions[1], tickSigns[1]);\n    axes.drawTicks(gd, ax, {\n      vals: tickVals,\n      layer: plotinfo[axLetter + 'axislayer'],\n      path: spTickPath,\n      transFn: transFn\n    });\n  }\n\n  var seq = []; // tick labels - for now just the main labels.\n  // TODO: mirror labels, esp for subplots\n\n  seq.push(function () {\n    return axes.drawLabels(gd, ax, {\n      vals: vals,\n      layer: mainAxLayer,\n      transFn: transTickLabelFn,\n      labelFns: axes.makeLabelFns(ax, mainLinePosition)\n    });\n  });\n\n  if (ax.type === 'multicategory') {\n    var pad = {\n      x: 2,\n      y: 10\n    }[axLetter];\n    seq.push(function () {\n      var bboxKey = {\n        x: 'height',\n        y: 'width'\n      }[axLetter];\n      var standoff = getLabelLevelBbox()[bboxKey] + pad + (ax._tickAngles[axId + 'tick'] ? ax.tickfont.size * LINE_SPACING : 0);\n      return axes.drawLabels(gd, ax, {\n        vals: getSecondaryLabelVals(ax, vals),\n        layer: mainAxLayer,\n        cls: axId + 'tick2',\n        repositionOnUpdate: true,\n        secondary: true,\n        transFn: transFn,\n        labelFns: axes.makeLabelFns(ax, mainLinePosition + standoff * tickSigns[4])\n      });\n    });\n    seq.push(function () {\n      ax._depth = tickSigns[4] * (getLabelLevelBbox('tick2')[ax.side] - mainLinePosition);\n      return drawDividers(gd, ax, {\n        vals: dividerVals,\n        layer: mainAxLayer,\n        path: axes.makeTickPath(ax, mainLinePosition, tickSigns[4], ax._depth),\n        transFn: transFn\n      });\n    });\n  } else if (ax.title.hasOwnProperty('standoff')) {\n    seq.push(function () {\n      ax._depth = tickSigns[4] * (getLabelLevelBbox()[ax.side] - mainLinePosition);\n    });\n  }\n\n  var hasRangeSlider = Registry.getComponentMethod('rangeslider', 'isVisible')(ax);\n  seq.push(function () {\n    var s = ax.side.charAt(0);\n    var sMirror = OPPOSITE_SIDE[ax.side].charAt(0);\n    var pos = axes.getPxPosition(gd, ax);\n    var outsideTickLen = ax.ticks === 'outside' ? ax.ticklen : 0;\n    var llbbox;\n    var push;\n    var mirrorPush;\n    var rangeSliderPush;\n\n    if (ax.automargin || hasRangeSlider) {\n      if (ax.type === 'multicategory') {\n        llbbox = getLabelLevelBbox('tick2');\n      } else {\n        llbbox = getLabelLevelBbox();\n\n        if (axLetter === 'x' && s === 'b') {\n          ax._depth = Math.max(llbbox.width > 0 ? llbbox.bottom - pos : 0, outsideTickLen);\n        }\n      }\n    }\n\n    if (ax.automargin) {\n      push = {\n        x: 0,\n        y: 0,\n        r: 0,\n        l: 0,\n        t: 0,\n        b: 0\n      };\n      var domainIndices = [0, 1];\n\n      if (axLetter === 'x') {\n        if (s === 'b') {\n          push[s] = ax._depth;\n        } else {\n          push[s] = ax._depth = Math.max(llbbox.width > 0 ? pos - llbbox.top : 0, outsideTickLen);\n          domainIndices.reverse();\n        }\n\n        if (llbbox.width > 0) {\n          var rExtra = llbbox.right - (ax._offset + ax._length);\n\n          if (rExtra > 0) {\n            push.xr = 1;\n            push.r = rExtra;\n          }\n\n          var lExtra = ax._offset - llbbox.left;\n\n          if (lExtra > 0) {\n            push.xl = 0;\n            push.l = lExtra;\n          }\n        }\n      } else {\n        if (s === 'l') {\n          push[s] = ax._depth = Math.max(llbbox.height > 0 ? pos - llbbox.left : 0, outsideTickLen);\n        } else {\n          push[s] = ax._depth = Math.max(llbbox.height > 0 ? llbbox.right - pos : 0, outsideTickLen);\n          domainIndices.reverse();\n        }\n\n        if (llbbox.height > 0) {\n          var bExtra = llbbox.bottom - (ax._offset + ax._length);\n\n          if (bExtra > 0) {\n            push.yb = 0;\n            push.b = bExtra;\n          }\n\n          var tExtra = ax._offset - llbbox.top;\n\n          if (tExtra > 0) {\n            push.yt = 1;\n            push.t = tExtra;\n          }\n        }\n      }\n\n      push[counterLetter] = ax.anchor === 'free' ? ax.position : ax._anchorAxis.domain[domainIndices[0]];\n\n      if (ax.title.text !== fullLayout._dfltTitle[axLetter]) {\n        push[s] += approxTitleDepth(ax) + (ax.title.standoff || 0);\n      }\n\n      if (ax.mirror && ax.anchor !== 'free') {\n        mirrorPush = {\n          x: 0,\n          y: 0,\n          r: 0,\n          l: 0,\n          t: 0,\n          b: 0\n        };\n        mirrorPush[sMirror] = ax.linewidth;\n        if (ax.mirror && ax.mirror !== true) mirrorPush[sMirror] += outsideTickLen;\n\n        if (ax.mirror === true || ax.mirror === 'ticks') {\n          mirrorPush[counterLetter] = ax._anchorAxis.domain[domainIndices[1]];\n        } else if (ax.mirror === 'all' || ax.mirror === 'allticks') {\n          mirrorPush[counterLetter] = [ax._counterDomainMin, ax._counterDomainMax][domainIndices[1]];\n        }\n      }\n    }\n\n    if (hasRangeSlider) {\n      rangeSliderPush = Registry.getComponentMethod('rangeslider', 'autoMarginOpts')(gd, ax);\n    }\n\n    Plots.autoMargin(gd, axAutoMarginID(ax), push);\n    Plots.autoMargin(gd, axMirrorAutoMarginID(ax), mirrorPush);\n    Plots.autoMargin(gd, rangeSliderAutoMarginID(ax), rangeSliderPush);\n  });\n\n  if (!opts.skipTitle && !(hasRangeSlider && ax.side === 'bottom')) {\n    seq.push(function () {\n      return drawTitle(gd, ax);\n    });\n  }\n\n  return Lib.syncOrAsync(seq);\n};\n\nfunction getBoundaryVals(ax, vals) {\n  var out = [];\n  var i; // boundaryVals are never used for labels;\n  // no need to worry about the other tickTextObj keys\n\n  var _push = function (d, bndIndex) {\n    var xb = d.xbnd[bndIndex];\n\n    if (xb !== null) {\n      out.push(Lib.extendFlat({}, d, {\n        x: xb\n      }));\n    }\n  };\n\n  if (vals.length) {\n    for (i = 0; i < vals.length; i++) {\n      _push(vals[i], 0);\n    }\n\n    _push(vals[i - 1], 1);\n  }\n\n  return out;\n}\n\nfunction getSecondaryLabelVals(ax, vals) {\n  var out = [];\n  var lookup = {};\n\n  for (var i = 0; i < vals.length; i++) {\n    var d = vals[i];\n\n    if (lookup[d.text2]) {\n      lookup[d.text2].push(d.x);\n    } else {\n      lookup[d.text2] = [d.x];\n    }\n  }\n\n  for (var k in lookup) {\n    out.push(tickTextObj(ax, Lib.interp(lookup[k], 0.5), k));\n  }\n\n  return out;\n}\n\nfunction getDividerVals(ax, vals) {\n  var out = [];\n  var i, current;\n  var reversed = vals.length && vals[vals.length - 1].x < vals[0].x; // never used for labels;\n  // no need to worry about the other tickTextObj keys\n\n  var _push = function (d, bndIndex) {\n    var xb = d.xbnd[bndIndex];\n\n    if (xb !== null) {\n      out.push(Lib.extendFlat({}, d, {\n        x: xb\n      }));\n    }\n  };\n\n  if (ax.showdividers && vals.length) {\n    for (i = 0; i < vals.length; i++) {\n      var d = vals[i];\n\n      if (d.text2 !== current) {\n        _push(d, reversed ? 1 : 0);\n      }\n\n      current = d.text2;\n    }\n\n    _push(vals[i - 1], reversed ? 0 : 1);\n  }\n\n  return out;\n}\n\nfunction calcLabelLevelBbox(ax, cls) {\n  var top, bottom;\n  var left, right;\n\n  if (ax._selections[cls].size()) {\n    top = Infinity;\n    bottom = -Infinity;\n    left = Infinity;\n    right = -Infinity;\n\n    ax._selections[cls].each(function () {\n      var thisLabel = selectTickLabel(this); // Use parent node <g.(x|y)tick>, to make Drawing.bBox\n      // retrieve a bbox computed with transform info\n      //\n      // To improve perf, it would be nice to use `thisLabel.node()`\n      // (like in fixLabelOverlaps) instead and use Axes.getPxPosition\n      // together with the makeLabelFns outputs and `tickangle`\n      // to compute one bbox per (tick value x tick style)\n\n      var bb = Drawing.bBox(thisLabel.node().parentNode);\n      top = Math.min(top, bb.top);\n      bottom = Math.max(bottom, bb.bottom);\n      left = Math.min(left, bb.left);\n      right = Math.max(right, bb.right);\n    });\n  } else {\n    top = 0;\n    bottom = 0;\n    left = 0;\n    right = 0;\n  }\n\n  return {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    height: bottom - top,\n    width: right - left\n  };\n}\n/**\n * Which direction do the 'ax.side' values, and free ticks go?\n *\n * @param {object} ax (full) axis object\n *  - {string} _id (starting with 'x' or 'y')\n *  - {string} side\n *  - {string} ticks\n * @return {array} all entries are either -1 or 1\n *  - [0]: sign for top/right ticks (i.e. negative SVG direction)\n *  - [1]: sign for bottom/left ticks (i.e. positive SVG direction)\n *  - [2]: sign for ticks corresponding to 'ax.side'\n *  - [3]: sign for ticks mirroring 'ax.side'\n *  - [4]: sign of arrow starting at axis pointing towards margin\n */\n\n\naxes.getTickSigns = function (ax) {\n  var axLetter = ax._id.charAt(0);\n\n  var sideOpposite = {\n    x: 'top',\n    y: 'right'\n  }[axLetter];\n  var main = ax.side === sideOpposite ? 1 : -1;\n  var out = [-1, 1, main, -main]; // then we flip if outside XOR y axis\n\n  if (ax.ticks !== 'inside' === (axLetter === 'x')) {\n    out = out.map(function (v) {\n      return -v;\n    });\n  } // independent of `ticks`; do not flip this one\n\n\n  if (ax.side) {\n    out.push({\n      l: -1,\n      t: -1,\n      r: 1,\n      b: 1\n    }[ax.side.charAt(0)]);\n  }\n\n  return out;\n};\n/**\n * Make axis translate transform function\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} _offset\n *  - {fn} l2p\n * @return {fn} function of calcTicks items\n */\n\n\naxes.makeTransFn = function (ax) {\n  var axLetter = ax._id.charAt(0);\n\n  var offset = ax._offset;\n  return axLetter === 'x' ? function (d) {\n    return 'translate(' + (offset + ax.l2p(d.x)) + ',0)';\n  } : function (d) {\n    return 'translate(0,' + (offset + ax.l2p(d.x)) + ')';\n  };\n};\n\naxes.makeTransPeriodFn = function (ax) {\n  var axLetter = ax._id.charAt(0);\n\n  var offset = ax._offset;\n  return axLetter === 'x' ? function (d) {\n    return 'translate(' + (offset + ax.l2p(d.periodX)) + ',0)';\n  } : function (d) {\n    return 'translate(0,' + (offset + ax.l2p(d.periodX)) + ')';\n  };\n};\n/**\n * Make axis tick path string\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} ticklen\n *  - {number} linewidth\n * @param {number} shift along direction of ticklen\n * @param {1 or -1} sgn tick sign\n * @param {number (optional)} len tick length\n * @return {string}\n */\n\n\naxes.makeTickPath = function (ax, shift, sgn, len) {\n  len = len !== undefined ? len : ax.ticklen;\n\n  var axLetter = ax._id.charAt(0);\n\n  var pad = (ax.linewidth || 1) / 2;\n  return axLetter === 'x' ? 'M0,' + (shift + pad * sgn) + 'v' + len * sgn : 'M' + (shift + pad * sgn) + ',0h' + len * sgn;\n};\n/**\n * Make axis tick label x, y and anchor functions\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} ticklen\n *  - {string} side\n *  - {number} linewidth\n *  - {number} tickfont.size\n *  - {boolean} showline\n * @param {number} shift\n * @param {number} angle [in degrees] ...\n * @return {object}\n *  - {fn} xFn\n *  - {fn} yFn\n *  - {fn} anchorFn\n *  - {fn} heightFn\n *  - {number} labelStandoff (gap parallel to ticks)\n *  - {number} labelShift (gap perpendicular to ticks)\n */\n\n\naxes.makeLabelFns = function (ax, shift, angle) {\n  var axLetter = ax._id.charAt(0);\n\n  var ticksOnOutsideLabels = ax.tickson !== 'boundaries' && ax.ticks === 'outside';\n  var labelStandoff = 0;\n  var labelShift = 0;\n\n  if (ticksOnOutsideLabels) {\n    labelStandoff += ax.ticklen;\n  }\n\n  if (angle && ax.ticks === 'outside') {\n    var rad = Lib.deg2rad(angle);\n    labelStandoff = ax.ticklen * Math.cos(rad) + 1;\n    labelShift = ax.ticklen * Math.sin(rad);\n  }\n\n  if (ax.showticklabels && (ticksOnOutsideLabels || ax.showline)) {\n    labelStandoff += 0.2 * ax.tickfont.size;\n  }\n\n  labelStandoff += (ax.linewidth || 1) / 2;\n  var out = {\n    labelStandoff: labelStandoff,\n    labelShift: labelShift\n  };\n  var x0, y0, ff, flipIt;\n\n  if (axLetter === 'x') {\n    flipIt = ax.side === 'bottom' ? 1 : -1;\n    x0 = labelShift * flipIt;\n    y0 = shift + labelStandoff * flipIt;\n    ff = ax.side === 'bottom' ? 1 : -0.2;\n\n    out.xFn = function (d) {\n      return d.dx + x0;\n    };\n\n    out.yFn = function (d) {\n      return d.dy + y0 + d.fontSize * ff;\n    };\n\n    out.anchorFn = function (d, a) {\n      if (!isNumeric(a) || a === 0 || a === 180) {\n        return 'middle';\n      }\n\n      return a * flipIt < 0 ? 'end' : 'start';\n    };\n\n    out.heightFn = function (d, a, h) {\n      return a < -60 || a > 60 ? -0.5 * h : ax.side === 'top' ? -h : 0;\n    };\n  } else if (axLetter === 'y') {\n    flipIt = ax.side === 'right' ? 1 : -1;\n    x0 = labelStandoff;\n    y0 = -labelShift * flipIt;\n    ff = Math.abs(ax.tickangle) === 90 ? 0.5 : 0;\n\n    out.xFn = function (d) {\n      return d.dx + shift + (x0 + d.fontSize * ff) * flipIt;\n    };\n\n    out.yFn = function (d) {\n      return d.dy + y0 + d.fontSize * MID_SHIFT;\n    };\n\n    out.anchorFn = function (d, a) {\n      if (isNumeric(a) && Math.abs(a) === 90) {\n        return 'middle';\n      }\n\n      return ax.side === 'right' ? 'start' : 'end';\n    };\n\n    out.heightFn = function (d, a, h) {\n      a *= ax.side === 'left' ? 1 : -1;\n      return a < -30 ? -h : a < 30 ? -0.5 * h : 0;\n    };\n  }\n\n  return out;\n};\n\nfunction tickDataFn(d) {\n  return [d.text, d.x, d.axInfo, d.font, d.fontSize, d.fontColor].join('_');\n}\n/**\n * Draw axis ticks\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} linewidth\n *  - {string} tickcolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\n\n\naxes.drawTicks = function (gd, ax, opts) {\n  opts = opts || {};\n  var cls = ax._id + 'tick';\n  var vals = opts.vals;\n\n  if (ax.ticklabelmode === 'period') {\n    // drop very first tick that we added to handle period\n    vals = vals.slice();\n    vals.shift();\n  }\n\n  var ticks = opts.layer.selectAll('path.' + cls).data(ax.ticks ? vals : [], tickDataFn);\n  ticks.exit().remove();\n  ticks.enter().append('path').classed(cls, 1).classed('ticks', 1).classed('crisp', opts.crisp !== false).call(Color.stroke, ax.tickcolor).style('stroke-width', Drawing.crispRound(gd, ax.tickwidth, 1) + 'px').attr('d', opts.path);\n  ticks.attr('transform', opts.transFn);\n};\n/**\n * Draw axis grid\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showgrid\n *  - {string} gridcolor\n *  - {string} gridwidth\n *  - {boolean} zeroline\n *  - {string} type\n *  - {string} dtick\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n *     optional - only required if this axis supports zero lines\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\n\n\naxes.drawGrid = function (gd, ax, opts) {\n  opts = opts || {};\n  var cls = ax._id + 'grid';\n  var vals = opts.vals;\n  var counterAx = opts.counterAxis;\n\n  if (ax.showgrid === false) {\n    vals = [];\n  } else if (counterAx && axes.shouldShowZeroLine(gd, ax, counterAx)) {\n    var isArrayMode = ax.tickmode === 'array';\n\n    for (var i = 0; i < vals.length; i++) {\n      var xi = vals[i].x;\n\n      if (isArrayMode ? !xi : Math.abs(xi) < ax.dtick / 100) {\n        vals = vals.slice(0, i).concat(vals.slice(i + 1)); // In array mode you can in principle have multiple\n        // ticks at 0, so test them all. Otherwise once we found\n        // one we can stop.\n\n        if (isArrayMode) i--;else break;\n      }\n    }\n  }\n\n  var grid = opts.layer.selectAll('path.' + cls).data(vals, tickDataFn);\n  grid.exit().remove();\n  grid.enter().append('path').classed(cls, 1).classed('crisp', opts.crisp !== false);\n  ax._gw = Drawing.crispRound(gd, ax.gridwidth, 1);\n  grid.attr('transform', opts.transFn).attr('d', opts.path).call(Color.stroke, ax.gridcolor || '#ddd').style('stroke-width', ax._gw + 'px');\n  if (typeof opts.path === 'function') grid.attr('d', opts.path);\n};\n/**\n * Draw axis zero-line\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} zeroline\n *  - {number} zerolinewidth\n *  - {string} zerolinecolor\n *  - {number (optional)} _gridWidthCrispRound\n * @param {object} opts\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\n\n\naxes.drawZeroLine = function (gd, ax, opts) {\n  opts = opts || opts;\n  var cls = ax._id + 'zl';\n  var show = axes.shouldShowZeroLine(gd, ax, opts.counterAxis);\n  var zl = opts.layer.selectAll('path.' + cls).data(show ? [{\n    x: 0,\n    id: ax._id\n  }] : []);\n  zl.exit().remove();\n  zl.enter().append('path').classed(cls, 1).classed('zl', 1).classed('crisp', opts.crisp !== false).each(function () {\n    // use the fact that only one element can enter to trigger a sort.\n    // If several zerolines enter at the same time we will sort once per,\n    // but generally this should be a minimal overhead.\n    opts.layer.selectAll('path').sort(function (da, db) {\n      return axisIds.idSort(da.id, db.id);\n    });\n  });\n  zl.attr('transform', opts.transFn).attr('d', opts.path).call(Color.stroke, ax.zerolinecolor || Color.defaultLine).style('stroke-width', Drawing.crispRound(gd, ax.zerolinewidth, ax._gw || 1) + 'px');\n};\n/**\n * Draw axis tick labels\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showticklabels\n *  - {number} tickangle\n *  - {object (optional)} _selections\n *  - {object} (optional)} _tickAngles\n *  - {object} (optional)} _prevTickAngles\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string (optional)} cls (node className)\n * - {boolean} repositionOnUpdate (set to true to reposition update selection)\n * - {boolean} secondary\n * - {fn} transFn\n * - {object} labelFns\n *  + {fn} xFn\n *  + {fn} yFn\n *  + {fn} anchorFn\n *  + {fn} heightFn\n */\n\n\naxes.drawLabels = function (gd, ax, opts) {\n  opts = opts || {};\n  var fullLayout = gd._fullLayout;\n  var axId = ax._id;\n  var axLetter = axId.charAt(0);\n  var cls = opts.cls || axId + 'tick';\n  var vals = opts.vals;\n  var labelFns = opts.labelFns;\n  var tickAngle = opts.secondary ? 0 : ax.tickangle;\n  var prevAngle = (ax._prevTickAngles || {})[cls];\n  var tickLabels = opts.layer.selectAll('g.' + cls).data(ax.showticklabels ? vals : [], tickDataFn);\n  var labelsReady = [];\n  tickLabels.enter().append('g').classed(cls, 1).append('text') // only so tex has predictable alignment that we can\n  // alter later\n  .attr('text-anchor', 'middle').each(function (d) {\n    var thisLabel = d3.select(this);\n    var newPromise = gd._promises.length;\n    thisLabel.call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d)).call(Drawing.font, d.font, d.fontSize, d.fontColor).text(d.text).call(svgTextUtils.convertToTspans, gd);\n\n    if (gd._promises[newPromise]) {\n      // if we have an async label, we'll deal with that\n      // all here so take it out of gd._promises and\n      // instead position the label and promise this in\n      // labelsReady\n      labelsReady.push(gd._promises.pop().then(function () {\n        positionLabels(thisLabel, tickAngle);\n      }));\n    } else {\n      // sync label: just position it now.\n      positionLabels(thisLabel, tickAngle);\n    }\n  });\n  tickLabels.exit().remove();\n\n  if (opts.repositionOnUpdate) {\n    tickLabels.each(function (d) {\n      d3.select(this).select('text').call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d));\n    });\n  }\n\n  function positionLabels(s, angle) {\n    s.each(function (d) {\n      var thisLabel = d3.select(this);\n      var mathjaxGroup = thisLabel.select('.text-math-group');\n      var anchor = labelFns.anchorFn(d, angle);\n      var transform = opts.transFn.call(thisLabel.node(), d) + (isNumeric(angle) && +angle !== 0 ? ' rotate(' + angle + ',' + labelFns.xFn(d) + ',' + (labelFns.yFn(d) - d.fontSize / 2) + ')' : ''); // how much to shift a multi-line label to center it vertically.\n\n      var nLines = svgTextUtils.lineCount(thisLabel);\n      var lineHeight = LINE_SPACING * d.fontSize;\n      var anchorHeight = labelFns.heightFn(d, isNumeric(angle) ? +angle : 0, (nLines - 1) * lineHeight);\n\n      if (anchorHeight) {\n        transform += ' translate(0, ' + anchorHeight + ')';\n      }\n\n      if (mathjaxGroup.empty()) {\n        thisLabel.select('text').attr({\n          transform: transform,\n          'text-anchor': anchor\n        });\n      } else {\n        var mjWidth = Drawing.bBox(mathjaxGroup.node()).width;\n        var mjShift = mjWidth * {\n          end: -0.5,\n          start: 0.5\n        }[anchor];\n        mathjaxGroup.attr('transform', transform + (mjShift ? 'translate(' + mjShift + ',0)' : ''));\n      }\n    });\n  } // make sure all labels are correctly positioned at their base angle\n  // the positionLabels call above is only for newly drawn labels.\n  // do this without waiting, using the last calculated angle to\n  // minimize flicker, then do it again when we know all labels are\n  // there, putting back the prescribed angle to check for overlaps.\n\n\n  positionLabels(tickLabels, prevAngle + 1 ? prevAngle : tickAngle);\n\n  function allLabelsReady() {\n    return labelsReady.length && Promise.all(labelsReady);\n  }\n\n  var autoangle = null;\n\n  function fixLabelOverlaps() {\n    positionLabels(tickLabels, tickAngle); // check for auto-angling if x labels overlap\n    // don't auto-angle at all for log axes with\n    // base and digit format\n\n    if (vals.length && axLetter === 'x' && !isNumeric(tickAngle) && (ax.type !== 'log' || String(ax.dtick).charAt(0) !== 'D')) {\n      autoangle = 0;\n      var maxFontSize = 0;\n      var lbbArray = [];\n      var i;\n      tickLabels.each(function (d) {\n        maxFontSize = Math.max(maxFontSize, d.fontSize);\n        var x = ax.l2p(d.x);\n        var thisLabel = selectTickLabel(this);\n        var bb = Drawing.bBox(thisLabel.node());\n        lbbArray.push({\n          // ignore about y, just deal with x overlaps\n          top: 0,\n          bottom: 10,\n          height: 10,\n          left: x - bb.width / 2,\n          // impose a 2px gap\n          right: x + bb.width / 2 + 2,\n          width: bb.width + 2\n        });\n      });\n\n      if ((ax.tickson === 'boundaries' || ax.showdividers) && !opts.secondary) {\n        var gap = 2;\n        if (ax.ticks) gap += ax.tickwidth / 2; // TODO should secondary labels also fall into this fix-overlap regime?\n\n        for (i = 0; i < lbbArray.length; i++) {\n          var xbnd = vals[i].xbnd;\n          var lbb = lbbArray[i];\n\n          if (xbnd[0] !== null && lbb.left - ax.l2p(xbnd[0]) < gap || xbnd[1] !== null && ax.l2p(xbnd[1]) - lbb.right < gap) {\n            autoangle = 90;\n            break;\n          }\n        }\n      } else {\n        var vLen = vals.length;\n        var tickSpacing = Math.abs((vals[vLen - 1].x - vals[0].x) * ax._m) / (vLen - 1);\n        var rotate90 = tickSpacing < maxFontSize * 2.5 || ax.type === 'multicategory'; // any overlap at all - set 30 degrees or 90 degrees\n\n        for (i = 0; i < lbbArray.length - 1; i++) {\n          if (Lib.bBoxIntersect(lbbArray[i], lbbArray[i + 1])) {\n            autoangle = rotate90 ? 90 : 30;\n            break;\n          }\n        }\n      }\n\n      if (autoangle) {\n        positionLabels(tickLabels, autoangle);\n      }\n    }\n  }\n\n  if (ax._selections) {\n    ax._selections[cls] = tickLabels;\n  }\n\n  var seq = [allLabelsReady]; // N.B. during auto-margin redraws, if the axis fixed its label overlaps\n  // by rotating 90 degrees, do not attempt to re-fix its label overlaps\n  // as this can lead to infinite redraw loops!\n\n  if (ax.automargin && fullLayout._redrawFromAutoMarginCount && prevAngle === 90) {\n    autoangle = 90;\n    seq.push(function () {\n      positionLabels(tickLabels, prevAngle);\n    });\n  } else {\n    seq.push(fixLabelOverlaps);\n  } // save current tick angle for future redraws\n\n\n  if (ax._tickAngles) {\n    seq.push(function () {\n      ax._tickAngles[cls] = autoangle === null ? isNumeric(tickAngle) ? tickAngle : 0 : autoangle;\n    });\n  }\n\n  var done = Lib.syncOrAsync(seq);\n  if (done && done.then) gd._promises.push(done);\n  return done;\n};\n/**\n * Draw axis dividers\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} showdividers\n *  - {number} dividerwidth\n *  - {string} dividercolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {fn} path\n * - {fn} transFn\n */\n\n\nfunction drawDividers(gd, ax, opts) {\n  var cls = ax._id + 'divider';\n  var vals = opts.vals;\n  var dividers = opts.layer.selectAll('path.' + cls).data(vals, tickDataFn);\n  dividers.exit().remove();\n  dividers.enter().insert('path', ':first-child').classed(cls, 1).classed('crisp', 1).call(Color.stroke, ax.dividercolor).style('stroke-width', Drawing.crispRound(gd, ax.dividerwidth, 1) + 'px');\n  dividers.attr('transform', opts.transFn).attr('d', opts.path);\n}\n/**\n * Get axis position in px, that is the distance for the graph's\n * top (left) edge for x (y) axes.\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} side\n *  if anchored:\n *  - {object} _anchorAxis\n *  Otherwise:\n *  - {number} position\n * @return {number}\n */\n\n\naxes.getPxPosition = function (gd, ax) {\n  var gs = gd._fullLayout._size;\n\n  var axLetter = ax._id.charAt(0);\n\n  var side = ax.side;\n  var anchorAxis;\n\n  if (ax.anchor !== 'free') {\n    anchorAxis = ax._anchorAxis;\n  } else if (axLetter === 'x') {\n    anchorAxis = {\n      _offset: gs.t + (1 - (ax.position || 0)) * gs.h,\n      _length: 0\n    };\n  } else if (axLetter === 'y') {\n    anchorAxis = {\n      _offset: gs.l + (ax.position || 0) * gs.w,\n      _length: 0\n    };\n  }\n\n  if (side === 'top' || side === 'left') {\n    return anchorAxis._offset;\n  } else if (side === 'bottom' || side === 'right') {\n    return anchorAxis._offset + anchorAxis._length;\n  }\n};\n/**\n * Approximate axis title depth (w/o computing its bounding box)\n *\n * @param {object} ax (full) axis object\n *  - {string} title.text\n *  - {number} title.font.size\n *  - {number} title.standoff\n * @return {number} (in px)\n */\n\n\nfunction approxTitleDepth(ax) {\n  var fontSize = ax.title.font.size;\n  var extraLines = (ax.title.text.match(svgTextUtils.BR_TAG_ALL) || []).length;\n\n  if (ax.title.hasOwnProperty('standoff')) {\n    return extraLines ? fontSize * (CAP_SHIFT + extraLines * LINE_SPACING) : fontSize * CAP_SHIFT;\n  } else {\n    return extraLines ? fontSize * (extraLines + 1) * LINE_SPACING : fontSize;\n  }\n}\n/**\n * Draw axis title, compute default standoff if necessary\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} _name\n *  - {string} side\n *  - {number} title.font.size\n *  - {object} _selections\n *\n *  - {number} _depth\n *  - {number} title.standoff\n *  OR\n *  - {number} linewidth\n *  - {boolean} showticklabels\n */\n\n\nfunction drawTitle(gd, ax) {\n  var fullLayout = gd._fullLayout;\n  var axId = ax._id;\n  var axLetter = axId.charAt(0);\n  var fontSize = ax.title.font.size;\n  var titleStandoff;\n\n  if (ax.title.hasOwnProperty('standoff')) {\n    titleStandoff = ax._depth + ax.title.standoff + approxTitleDepth(ax);\n  } else {\n    if (ax.type === 'multicategory') {\n      titleStandoff = ax._depth;\n    } else {\n      var offsetBase = 1.5;\n      titleStandoff = 10 + fontSize * offsetBase + (ax.linewidth ? ax.linewidth - 1 : 0);\n    }\n\n    if (axLetter === 'x') {\n      titleStandoff += ax.side === 'top' ? fontSize * (ax.showticklabels ? 1 : 0) : fontSize * (ax.showticklabels ? 1.5 : 0.5);\n    } else {\n      titleStandoff += ax.side === 'right' ? fontSize * (ax.showticklabels ? 1 : 0.5) : fontSize * (ax.showticklabels ? 0.5 : 0);\n    }\n  }\n\n  var pos = axes.getPxPosition(gd, ax);\n  var transform, x, y;\n\n  if (axLetter === 'x') {\n    x = ax._offset + ax._length / 2;\n    y = ax.side === 'top' ? pos - titleStandoff : pos + titleStandoff;\n  } else {\n    y = ax._offset + ax._length / 2;\n    x = ax.side === 'right' ? pos + titleStandoff : pos - titleStandoff;\n    transform = {\n      rotate: '-90',\n      offset: 0\n    };\n  }\n\n  var avoid;\n\n  if (ax.type !== 'multicategory') {\n    var tickLabels = ax._selections[ax._id + 'tick'];\n    avoid = {\n      selection: tickLabels,\n      side: ax.side\n    };\n\n    if (tickLabels && tickLabels.node() && tickLabels.node().parentNode) {\n      var translation = Drawing.getTranslate(tickLabels.node().parentNode);\n      avoid.offsetLeft = translation.x;\n      avoid.offsetTop = translation.y;\n    }\n\n    if (ax.title.hasOwnProperty('standoff')) {\n      avoid.pad = 0;\n    }\n  }\n\n  return Titles.draw(gd, axId + 'title', {\n    propContainer: ax,\n    propName: ax._name + '.title.text',\n    placeholder: fullLayout._dfltTitle[axLetter],\n    avoid: avoid,\n    transform: transform,\n    attributes: {\n      x: x,\n      y: y,\n      'text-anchor': 'middle'\n    }\n  });\n}\n\naxes.shouldShowZeroLine = function (gd, ax, counterAxis) {\n  var rng = Lib.simpleMap(ax.range, ax.r2l);\n  return rng[0] * rng[1] <= 0 && ax.zeroline && (ax.type === 'linear' || ax.type === '-') && !(ax.rangebreaks && ax.maskBreaks(0) === BADNUM) && (clipEnds(ax, 0) || !anyCounterAxLineAtZero(gd, ax, counterAxis, rng) || hasBarsOrFill(gd, ax));\n};\n\naxes.clipEnds = function (ax, vals) {\n  return vals.filter(function (d) {\n    return clipEnds(ax, d.x);\n  });\n};\n\nfunction clipEnds(ax, l) {\n  var p = ax.l2p(l);\n  return p > 1 && p < ax._length - 1;\n}\n\nfunction anyCounterAxLineAtZero(gd, ax, counterAxis, rng) {\n  var mainCounterAxis = counterAxis._mainAxis;\n  if (!mainCounterAxis) return;\n  var fullLayout = gd._fullLayout;\n\n  var axLetter = ax._id.charAt(0);\n\n  var counterLetter = axes.counterLetter(ax._id);\n  var zeroPosition = ax._offset + (Math.abs(rng[0]) < Math.abs(rng[1]) === (axLetter === 'x') ? 0 : ax._length);\n\n  function lineNearZero(ax2) {\n    if (!ax2.showline || !ax2.linewidth) return false;\n    var tolerance = Math.max((ax2.linewidth + ax.zerolinewidth) / 2, 1);\n\n    function closeEnough(pos2) {\n      return typeof pos2 === 'number' && Math.abs(pos2 - zeroPosition) < tolerance;\n    }\n\n    if (closeEnough(ax2._mainLinePosition) || closeEnough(ax2._mainMirrorPosition)) {\n      return true;\n    }\n\n    var linePositions = ax2._linepositions || {};\n\n    for (var k in linePositions) {\n      if (closeEnough(linePositions[k][0]) || closeEnough(linePositions[k][1])) {\n        return true;\n      }\n    }\n  }\n\n  var plotinfo = fullLayout._plots[counterAxis._mainSubplot];\n\n  if (!(plotinfo.mainplotinfo || plotinfo).overlays.length) {\n    return lineNearZero(counterAxis, zeroPosition);\n  }\n\n  var counterLetterAxes = axes.list(gd, counterLetter);\n\n  for (var i = 0; i < counterLetterAxes.length; i++) {\n    var counterAxis2 = counterLetterAxes[i];\n\n    if (counterAxis2._mainAxis === mainCounterAxis && lineNearZero(counterAxis2, zeroPosition)) {\n      return true;\n    }\n  }\n}\n\nfunction hasBarsOrFill(gd, ax) {\n  var fullData = gd._fullData;\n  var subplot = ax._mainSubplot;\n\n  var axLetter = ax._id.charAt(0);\n\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n\n    if (trace.visible === true && trace.xaxis + trace.yaxis === subplot) {\n      if (Registry.traceIs(trace, 'bar-like') && trace.orientation === {\n        x: 'h',\n        y: 'v'\n      }[axLetter]) return true;\n      if (trace.fill && trace.fill.charAt(trace.fill.length - 1) === axLetter) return true;\n    }\n  }\n\n  return false;\n}\n\nfunction selectTickLabel(gTick) {\n  var s = d3.select(gTick);\n  var mj = s.select('.text-math-group');\n  return mj.empty() ? s.select('text') : mj;\n}\n/**\n * Find all margin pushers for 2D axes and reserve them for later use\n * Both label and rangeslider automargin calculations happen later so\n * we need to explicitly allow their ids in order to not delete them.\n *\n * TODO: can we pull the actual automargin calls forward to avoid this hack?\n * We're probably also doing multiple redraws in this case, would be faster\n * if we can just do the whole calculation ahead of time and draw once.\n */\n\n\naxes.allowAutoMargin = function (gd) {\n  var axList = axes.list(gd, '', true);\n\n  for (var i = 0; i < axList.length; i++) {\n    var ax = axList[i];\n\n    if (ax.automargin) {\n      Plots.allowAutoMargin(gd, axAutoMarginID(ax));\n\n      if (ax.mirror) {\n        Plots.allowAutoMargin(gd, axMirrorAutoMarginID(ax));\n      }\n    }\n\n    if (Registry.getComponentMethod('rangeslider', 'isVisible')(ax)) {\n      Plots.allowAutoMargin(gd, rangeSliderAutoMarginID(ax));\n    }\n  }\n};\n\nfunction axAutoMarginID(ax) {\n  return ax._id + '.automargin';\n}\n\nfunction axMirrorAutoMarginID(ax) {\n  return axAutoMarginID(ax) + '.mirror';\n}\n\nfunction rangeSliderAutoMarginID(ax) {\n  return ax._id + '.rangeslider';\n} // swap all the presentation attributes of the axes showing these traces\n\n\naxes.swap = function (gd, traces) {\n  var axGroups = makeAxisGroups(gd, traces);\n\n  for (var i = 0; i < axGroups.length; i++) {\n    swapAxisGroup(gd, axGroups[i].x, axGroups[i].y);\n  }\n};\n\nfunction makeAxisGroups(gd, traces) {\n  var groups = [];\n  var i, j;\n\n  for (i = 0; i < traces.length; i++) {\n    var groupsi = [];\n    var xi = gd._fullData[traces[i]].xaxis;\n    var yi = gd._fullData[traces[i]].yaxis;\n    if (!xi || !yi) continue; // not a 2D cartesian trace?\n\n    for (j = 0; j < groups.length; j++) {\n      if (groups[j].x.indexOf(xi) !== -1 || groups[j].y.indexOf(yi) !== -1) {\n        groupsi.push(j);\n      }\n    }\n\n    if (!groupsi.length) {\n      groups.push({\n        x: [xi],\n        y: [yi]\n      });\n      continue;\n    }\n\n    var group0 = groups[groupsi[0]];\n    var groupj;\n\n    if (groupsi.length > 1) {\n      for (j = 1; j < groupsi.length; j++) {\n        groupj = groups[groupsi[j]];\n        mergeAxisGroups(group0.x, groupj.x);\n        mergeAxisGroups(group0.y, groupj.y);\n      }\n    }\n\n    mergeAxisGroups(group0.x, [xi]);\n    mergeAxisGroups(group0.y, [yi]);\n  }\n\n  return groups;\n}\n\nfunction mergeAxisGroups(intoSet, fromSet) {\n  for (var i = 0; i < fromSet.length; i++) {\n    if (intoSet.indexOf(fromSet[i]) === -1) intoSet.push(fromSet[i]);\n  }\n}\n\nfunction swapAxisGroup(gd, xIds, yIds) {\n  var xFullAxes = [];\n  var yFullAxes = [];\n  var layout = gd.layout;\n  var i, j;\n\n  for (i = 0; i < xIds.length; i++) xFullAxes.push(axes.getFromId(gd, xIds[i]));\n\n  for (i = 0; i < yIds.length; i++) yFullAxes.push(axes.getFromId(gd, yIds[i]));\n\n  var allAxKeys = Object.keys(axAttrs);\n  var noSwapAttrs = ['anchor', 'domain', 'overlaying', 'position', 'side', 'tickangle', 'editType'];\n  var numericTypes = ['linear', 'log'];\n\n  for (i = 0; i < allAxKeys.length; i++) {\n    var keyi = allAxKeys[i];\n    var xVal = xFullAxes[0][keyi];\n    var yVal = yFullAxes[0][keyi];\n    var allEqual = true;\n    var coerceLinearX = false;\n    var coerceLinearY = false;\n\n    if (keyi.charAt(0) === '_' || typeof xVal === 'function' || noSwapAttrs.indexOf(keyi) !== -1) {\n      continue;\n    }\n\n    for (j = 1; j < xFullAxes.length && allEqual; j++) {\n      var xVali = xFullAxes[j][keyi];\n\n      if (keyi === 'type' && numericTypes.indexOf(xVal) !== -1 && numericTypes.indexOf(xVali) !== -1 && xVal !== xVali) {\n        // type is special - if we find a mixture of linear and log,\n        // coerce them all to linear on flipping\n        coerceLinearX = true;\n      } else if (xVali !== xVal) allEqual = false;\n    }\n\n    for (j = 1; j < yFullAxes.length && allEqual; j++) {\n      var yVali = yFullAxes[j][keyi];\n\n      if (keyi === 'type' && numericTypes.indexOf(yVal) !== -1 && numericTypes.indexOf(yVali) !== -1 && yVal !== yVali) {\n        // type is special - if we find a mixture of linear and log,\n        // coerce them all to linear on flipping\n        coerceLinearY = true;\n      } else if (yFullAxes[j][keyi] !== yVal) allEqual = false;\n    }\n\n    if (allEqual) {\n      if (coerceLinearX) layout[xFullAxes[0]._name].type = 'linear';\n      if (coerceLinearY) layout[yFullAxes[0]._name].type = 'linear';\n      swapAxisAttrs(layout, keyi, xFullAxes, yFullAxes, gd._fullLayout._dfltTitle);\n    }\n  } // now swap x&y for any annotations anchored to these x & y\n\n\n  for (i = 0; i < gd._fullLayout.annotations.length; i++) {\n    var ann = gd._fullLayout.annotations[i];\n\n    if (xIds.indexOf(ann.xref) !== -1 && yIds.indexOf(ann.yref) !== -1) {\n      Lib.swapAttrs(layout.annotations[i], ['?']);\n    }\n  }\n}\n\nfunction swapAxisAttrs(layout, key, xFullAxes, yFullAxes, dfltTitle) {\n  // in case the value is the default for either axis,\n  // look at the first axis in each list and see if\n  // this key's value is undefined\n  var np = Lib.nestedProperty;\n  var xVal = np(layout[xFullAxes[0]._name], key).get();\n  var yVal = np(layout[yFullAxes[0]._name], key).get();\n  var i;\n\n  if (key === 'title') {\n    // special handling of placeholder titles\n    if (xVal && xVal.text === dfltTitle.x) {\n      xVal.text = dfltTitle.y;\n    }\n\n    if (yVal && yVal.text === dfltTitle.y) {\n      yVal.text = dfltTitle.x;\n    }\n  }\n\n  for (i = 0; i < xFullAxes.length; i++) {\n    np(layout, xFullAxes[i]._name + '.' + key).set(yVal);\n  }\n\n  for (i = 0; i < yFullAxes.length; i++) {\n    np(layout, yFullAxes[i]._name + '.' + key).set(xVal);\n  }\n}\n\nfunction isAngular(ax) {\n  return ax._id === 'angularaxis';\n}\n\nfunction moveOutsideBreak(v, ax) {\n  var len = ax._rangebreaks.length;\n\n  for (var k = 0; k < len; k++) {\n    var brk = ax._rangebreaks[k];\n\n    if (v >= brk.min && v < brk.max) {\n      return brk.max;\n    }\n  }\n\n  return v;\n}","map":{"version":3,"sources":["/Users/nikitavolynkin/Documents/map/newmap/SUPE-map-demo/node_modules/plotly.js/src/plots/cartesian/axes.js"],"names":["d3","require","isNumeric","Plots","Registry","Lib","svgTextUtils","Titles","Color","Drawing","axAttrs","cleanTicks","constants","ONEMAXYEAR","ONEAVGYEAR","ONEMINYEAR","ONEMAXQUARTER","ONEAVGQUARTER","ONEMINQUARTER","ONEMAXMONTH","ONEAVGMONTH","ONEMINMONTH","ONEWEEK","ONEDAY","HALFDAY","ONEHOUR","ONEMIN","ONESEC","MINUS_SIGN","BADNUM","alignmentConstants","MID_SHIFT","CAP_SHIFT","LINE_SPACING","OPPOSITE_SIDE","axes","module","exports","setConvert","autoType","axisIds","id2name","name2id","cleanId","list","listIds","getFromId","getFromTrace","autorange","getAutoRange","findExtremes","epsilon","expandRange","range","delta","coerceRef","containerIn","containerOut","gd","attr","dflt","extraOption","axLetter","charAt","length","axlist","_fullLayout","_subplots","refAttr","attrDef","valType","values","concat","coerce","coercePosition","axRef","cleanPos","pos","ensureNumber","ax","fraction2r","cleanPosition","redrawComponents","axIds","fullLayout","_redrawOneComp","moduleName","methodName","stashName","shortCircuit","method","getComponentMethod","stash","i","indices","j","ind","getDataConversions","trace","target","targetArray","d2cTarget","Array","isArray","type","_categories","d2c","c2d","toString","toNum","v","String","getDataToCoordFunc","counterLetter","id","minDtick","newDiff","newFirst","allow","indexOf","_minDtick","undefined","_forceTick0","saveRangeInitial","overwrite","axList","hasOneAxisChanged","isNew","_rangeInitial","hasChanged","slice","saveShowSpikeInitial","allSpikesEnabled","_showSpikeInitial","showspikes","_showspikes","_cartesianSpikesEnabled","autoBin","data","nbins","is2d","calendar","size","dataMin","aggNums","Math","min","dataMax","max","start","end","round","_dataSpan","dummyAx","simpleMap","c2r","dtick","tick0","size0","distinctData","distinctVals","msexp","pow","floor","log","minDiff","LN10","minSize","roundUp","stdev","autoTicks","finalSize","binStart","tickIncrement","tickFirst","binEnd","bincount","autoShiftNumericBins","autoShiftMonthBins","edgecount","midcount","intcount","blankCount","nearEdge","dataCount","binshift","stats","findExactDates","threshold","exactDays","numMonths","Number","substr","exactYears","exactMonths","nextBinStart","prepTicks","opts","rng","r2l","tickmode","nt","nticks","minPx","tickfont","_length","_id","constrain","_name","_roughDTick","abs","_lBreaks","l2r","autoTickRound","calcTicks","arrayTicks","_tmin","exRng","startTick","endTick","axrev","isDLog","tickVals","generateTicks","xPrevious","maxTicks","x","minor","push","value","isPeriod","ticklabelmode","unshift","caldendar","rangebreaks","len","tf","newTickVals","prevPos","dir","first","last","q","tickVal","maskBreaks","moveOutsideBreak","_rl","c2p","reverse","isAngular","pop","_tmax","_prevDateHead","_inCalcTicks","minRange","maxRange","definedDelta","tickformat","getTickFormat","test","ticksOut","prevText","_minor","_value","t","tickText","text","removedPreTick0Label","a","b","A","B","actualDelta","periodLength","nFirstHalf","nSecondHalf","nAll","c","r","periodX","vals","tickvals","ticktext","tickMin","tickMax","tickVal2l","d2l_noadd","d2l","vali","tickTextObj","splice","filter","d","roundBase10","roundBase24","roundBase60","roundDays","roundLog1","roundLog2","roundAngles","roundDTick","roughDTick","base","roundingSet","getBase","dateTick0","roughX2","_hasDayOfWeekBreaks","lastD","substring","ceil","olddtick","_tickexponent","_tickround","tick0ms","tick0str","replace","tick0len","tick1len","map","r2d","maxend","rangeexp","isSIFormat","exponentformat","beyondSI","axSign","increment","tType","dtSigned","incrementMonth","tickset","x2","frac","mod","sRound","r0","tmin","dtNum","cnt","t0","t1","mult","newDTick","error","hover","noSuffixPrefix","out","arrayMode","extraPrecision","axType","isHidden","showAttr","firstOrLast","hideexp","showexponent","formatDate","formatLog","formatCategory","formatMultiCategory","formatAngle","formatLinear","tickprefix","showtickprefix","ticksuffix","showticksuffix","tickson","showdividers","inbounds","p","l2p","xbnd","hoverLabelText","val","val2","logOffScale","tx","c2l","dx","dy","fontSize","font","family","fontColor","color","tr","fmt","hoverformat","y","m","M","S","dateStr","_dateFormat","_extraFormat","headStr","splitIndex","dtChar0","numFormat","absP","exponentFormat","firstChar","tt","cats","tt2","text2","thetaunit","num","num2frac","deg2rad","isNeg","join","almostEq","findGCD","findPrecision","n","e","precision","number","gcd","SIPREFIXES","exponent","fmtoverride","tickRound","separatethousands","ah","_numFormat","dp","numSeparate","_separators","signedExponent","convertToMs","compareLogTicks","left","right","priority","leftPriority","rightPriority","isProperStop","convert","convertFn","leftDtick","rightDtick","isProperLogStop","isLeftDtickNull","isRightDtickNull","isDtickInRangeLeft","isDtickInRangeRight","tickstop","stopi","tickformatstops","enabled","dtickrange","getSubplots","subplotObj","allSubplots","cartesian","gl2d","findSubplotsWithAxis","sort","aParts","split","bParts","subplots","axMatch","RegExp","subplotsWithAx","sp","makeClipPaths","_hasOnlyLargeSploms","fullWidth","_offset","width","fullHeight","height","xaList","yaList","clipList","axClips","_clips","selectAll","enter","append","classed","_uid","exit","remove","each","select","draw","arg","_paper","plotinfo","_plots","xa","xaxis","ya","yaxis","xaxislayer","yaxislayer","gridlayer","zerolinelayer","_infolayer","syncOrAsync","axId","axDone","drawOne","_r","setScale","mainPlotinfo","_mainSubplot","mainAxLayer","mainLinePosition","_mainLinePosition","mainMirrorPosition","_mainMirrorPosition","_vals","axInfo","mirror","_selections","_tickAngles","_prevTickAngles","_depth","llbboxes","getLabelLevelBbox","suffix","cls","calcLabelLevelBbox","visible","transFn","makeTransFn","transTickLabelFn","makeTransPeriodFn","valsClipped","boundaryVals","getBoundaryVals","clipEnds","ticks","gridVals","_gridVals","dividerVals","getDividerVals","_subplotsWith","finishedGrids","counterAxis","mainCounterID","_mainAxis","gridPath","drawGrid","layer","path","drawZeroLine","tickSigns","getTickSigns","tickSubplots","mainTickPath","makeTickPath","mirrorTickPath","fullTickPath","_anchorAxis","tickPath","dividerLookup","drawTicks","Object","keys","_linepositions","linepositions","spTickPath","seq","drawLabels","labelFns","makeLabelFns","pad","bboxKey","standoff","getSecondaryLabelVals","repositionOnUpdate","secondary","side","drawDividers","title","hasOwnProperty","hasRangeSlider","s","sMirror","getPxPosition","outsideTickLen","ticklen","llbbox","mirrorPush","rangeSliderPush","automargin","bottom","l","domainIndices","top","rExtra","xr","lExtra","xl","bExtra","yb","tExtra","yt","anchor","position","domain","_dfltTitle","approxTitleDepth","linewidth","_counterDomainMin","_counterDomainMax","autoMargin","axAutoMarginID","axMirrorAutoMarginID","rangeSliderAutoMarginID","skipTitle","drawTitle","_push","bndIndex","xb","extendFlat","lookup","k","interp","current","reversed","Infinity","thisLabel","selectTickLabel","bb","bBox","node","parentNode","sideOpposite","main","offset","shift","sgn","angle","ticksOnOutsideLabels","labelStandoff","labelShift","rad","cos","sin","showticklabels","showline","x0","y0","ff","flipIt","xFn","yFn","anchorFn","heightFn","h","tickangle","tickDataFn","crisp","call","stroke","tickcolor","style","crispRound","tickwidth","counterAx","showgrid","shouldShowZeroLine","isArrayMode","xi","grid","_gw","gridwidth","gridcolor","show","zl","da","db","idSort","zerolinecolor","defaultLine","zerolinewidth","tickAngle","prevAngle","tickLabels","labelsReady","newPromise","_promises","positionText","convertToTspans","then","positionLabels","mathjaxGroup","transform","nLines","lineCount","lineHeight","anchorHeight","empty","mjWidth","mjShift","allLabelsReady","Promise","all","autoangle","fixLabelOverlaps","maxFontSize","lbbArray","gap","lbb","vLen","tickSpacing","_m","rotate90","bBoxIntersect","_redrawFromAutoMarginCount","done","dividers","insert","dividercolor","dividerwidth","gs","_size","anchorAxis","w","extraLines","match","BR_TAG_ALL","titleStandoff","offsetBase","rotate","avoid","selection","translation","getTranslate","offsetLeft","offsetTop","propContainer","propName","placeholder","attributes","zeroline","anyCounterAxLineAtZero","hasBarsOrFill","mainCounterAxis","zeroPosition","lineNearZero","ax2","tolerance","closeEnough","pos2","linePositions","mainplotinfo","overlays","counterLetterAxes","counterAxis2","fullData","_fullData","subplot","traceIs","orientation","fill","gTick","mj","allowAutoMargin","swap","traces","axGroups","makeAxisGroups","swapAxisGroup","groups","groupsi","yi","group0","groupj","mergeAxisGroups","intoSet","fromSet","xIds","yIds","xFullAxes","yFullAxes","layout","allAxKeys","noSwapAttrs","numericTypes","keyi","xVal","yVal","allEqual","coerceLinearX","coerceLinearY","xVali","yVali","swapAxisAttrs","annotations","ann","xref","yref","swapAttrs","key","dfltTitle","np","nestedProperty","get","set","_rangebreaks","brk"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar Plots = require('../../plots/plots');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar Titles = require('../../components/titles');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\n\nvar axAttrs = require('./layout_attributes');\nvar cleanTicks = require('./clean_ticks');\n\nvar constants = require('../../constants/numerical');\nvar ONEMAXYEAR = constants.ONEMAXYEAR;\nvar ONEAVGYEAR = constants.ONEAVGYEAR;\nvar ONEMINYEAR = constants.ONEMINYEAR;\nvar ONEMAXQUARTER = constants.ONEMAXQUARTER;\nvar ONEAVGQUARTER = constants.ONEAVGQUARTER;\nvar ONEMINQUARTER = constants.ONEMINQUARTER;\nvar ONEMAXMONTH = constants.ONEMAXMONTH;\nvar ONEAVGMONTH = constants.ONEAVGMONTH;\nvar ONEMINMONTH = constants.ONEMINMONTH;\nvar ONEWEEK = constants.ONEWEEK;\nvar ONEDAY = constants.ONEDAY;\nvar HALFDAY = ONEDAY / 2;\nvar ONEHOUR = constants.ONEHOUR;\nvar ONEMIN = constants.ONEMIN;\nvar ONESEC = constants.ONESEC;\nvar MINUS_SIGN = constants.MINUS_SIGN;\nvar BADNUM = constants.BADNUM;\n\nvar alignmentConstants = require('../../constants/alignment');\nvar MID_SHIFT = alignmentConstants.MID_SHIFT;\nvar CAP_SHIFT = alignmentConstants.CAP_SHIFT;\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar OPPOSITE_SIDE = alignmentConstants.OPPOSITE_SIDE;\n\nvar axes = module.exports = {};\n\naxes.setConvert = require('./set_convert');\nvar autoType = require('./axis_autotype');\n\nvar axisIds = require('./axis_ids');\naxes.id2name = axisIds.id2name;\naxes.name2id = axisIds.name2id;\naxes.cleanId = axisIds.cleanId;\naxes.list = axisIds.list;\naxes.listIds = axisIds.listIds;\naxes.getFromId = axisIds.getFromId;\naxes.getFromTrace = axisIds.getFromTrace;\n\nvar autorange = require('./autorange');\naxes.getAutoRange = autorange.getAutoRange;\naxes.findExtremes = autorange.findExtremes;\n\nvar epsilon = 0.0001;\nfunction expandRange(range) {\n    var delta = (range[1] - range[0]) * epsilon;\n    return [\n        range[0] - delta,\n        range[1] + delta\n    ];\n}\n\n/*\n * find the list of possible axes to reference with an xref or yref attribute\n * and coerce it to that list\n *\n * attr: the attribute we're generating a reference for. Should end in 'x' or 'y'\n *     but can be prefixed, like 'ax' for annotation's arrow x\n * dflt: the default to coerce to, or blank to use the first axis (falling back on\n *     extraOption if there is no axis)\n * extraOption: aside from existing axes with this letter, what non-axis value is allowed?\n *     Only required if it's different from `dflt`\n */\naxes.coerceRef = function(containerIn, containerOut, gd, attr, dflt, extraOption) {\n    var axLetter = attr.charAt(attr.length - 1);\n    var axlist = gd._fullLayout._subplots[axLetter + 'axis'];\n    var refAttr = attr + 'ref';\n    var attrDef = {};\n\n    if(!dflt) dflt = axlist[0] || extraOption;\n    if(!extraOption) extraOption = dflt;\n\n    // data-ref annotations are not supported in gl2d yet\n\n    attrDef[refAttr] = {\n        valType: 'enumerated',\n        values: axlist.concat(extraOption ? [extraOption] : []),\n        dflt: dflt\n    };\n\n    // xref, yref\n    return Lib.coerce(containerIn, containerOut, attrDef, refAttr);\n};\n\n/*\n * coerce position attributes (range-type) that can be either on axes or absolute\n * (paper or pixel) referenced. The biggest complication here is that we don't know\n * before looking at the axis whether the value must be a number or not (it may be\n * a date string), so we can't use the regular valType='number' machinery\n *\n * axRef (string): the axis this position is referenced to, or:\n *     paper: fraction of the plot area\n *     pixel: pixels relative to some starting position\n * attr (string): the attribute in containerOut we are coercing\n * dflt (number): the default position, as a fraction or pixels. If the attribute\n *     is to be axis-referenced, this will be converted to an axis data value\n *\n * Also cleans the values, since the attribute definition itself has to say\n * valType: 'any' to handle date axes. This allows us to accept:\n * - for category axes: category names, and convert them here into serial numbers.\n *   Note that this will NOT work for axis range endpoints, because we don't know\n *   the category list yet (it's set by ax.makeCalcdata during calc)\n *   but it works for component (note, shape, images) positions.\n * - for date axes: JS Dates or milliseconds, and convert to date strings\n * - for other types: coerce them to numbers\n */\naxes.coercePosition = function(containerOut, gd, coerce, axRef, attr, dflt) {\n    var cleanPos, pos;\n\n    if(axRef === 'paper' || axRef === 'pixel') {\n        cleanPos = Lib.ensureNumber;\n        pos = coerce(attr, dflt);\n    } else {\n        var ax = axes.getFromId(gd, axRef);\n        dflt = ax.fraction2r(dflt);\n        pos = coerce(attr, dflt);\n        cleanPos = ax.cleanPos;\n    }\n\n    containerOut[attr] = cleanPos(pos);\n};\n\naxes.cleanPosition = function(pos, gd, axRef) {\n    var cleanPos = (axRef === 'paper' || axRef === 'pixel') ?\n        Lib.ensureNumber :\n        axes.getFromId(gd, axRef).cleanPos;\n\n    return cleanPos(pos);\n};\n\naxes.redrawComponents = function(gd, axIds) {\n    axIds = axIds ? axIds : axes.listIds(gd);\n\n    var fullLayout = gd._fullLayout;\n\n    function _redrawOneComp(moduleName, methodName, stashName, shortCircuit) {\n        var method = Registry.getComponentMethod(moduleName, methodName);\n        var stash = {};\n\n        for(var i = 0; i < axIds.length; i++) {\n            var ax = fullLayout[axes.id2name(axIds[i])];\n            var indices = ax[stashName];\n\n            for(var j = 0; j < indices.length; j++) {\n                var ind = indices[j];\n\n                if(!stash[ind]) {\n                    method(gd, ind);\n                    stash[ind] = 1;\n                    // once is enough for images (which doesn't use the `i` arg anyway)\n                    if(shortCircuit) return;\n                }\n            }\n        }\n    }\n\n    // annotations and shapes 'draw' method is slow,\n    // use the finer-grained 'drawOne' method instead\n    _redrawOneComp('annotations', 'drawOne', '_annIndices');\n    _redrawOneComp('shapes', 'drawOne', '_shapeIndices');\n    _redrawOneComp('images', 'draw', '_imgIndices', true);\n};\n\nvar getDataConversions = axes.getDataConversions = function(gd, trace, target, targetArray) {\n    var ax;\n\n    // If target points to an axis, use the type we already have for that\n    // axis to find the data type. Otherwise use the values to autotype.\n    var d2cTarget = (target === 'x' || target === 'y' || target === 'z') ?\n        target :\n        targetArray;\n\n    // In the case of an array target, make a mock data array\n    // and call supplyDefaults to the data type and\n    // setup the data-to-calc method.\n    if(Array.isArray(d2cTarget)) {\n        ax = {\n            type: autoType(targetArray),\n            _categories: []\n        };\n        axes.setConvert(ax);\n\n        // build up ax._categories (usually done during ax.makeCalcdata()\n        if(ax.type === 'category') {\n            for(var i = 0; i < targetArray.length; i++) {\n                ax.d2c(targetArray[i]);\n            }\n        }\n        // TODO what to do for transforms?\n    } else {\n        ax = axes.getFromTrace(gd, trace, d2cTarget);\n    }\n\n    // if 'target' has corresponding axis\n    // -> use setConvert method\n    if(ax) return {d2c: ax.d2c, c2d: ax.c2d};\n\n    // special case for 'ids'\n    // -> cast to String\n    if(d2cTarget === 'ids') return {d2c: toString, c2d: toString};\n\n    // otherwise (e.g. numeric-array of 'marker.color' or 'marker.size')\n    // -> cast to Number\n\n    return {d2c: toNum, c2d: toNum};\n};\n\nfunction toNum(v) { return +v; }\nfunction toString(v) { return String(v); }\n\naxes.getDataToCoordFunc = function(gd, trace, target, targetArray) {\n    return getDataConversions(gd, trace, target, targetArray).d2c;\n};\n\n// get counteraxis letter for this axis (name or id)\n// this can also be used as the id for default counter axis\naxes.counterLetter = function(id) {\n    var axLetter = id.charAt(0);\n    if(axLetter === 'x') return 'y';\n    if(axLetter === 'y') return 'x';\n};\n\n// incorporate a new minimum difference and first tick into\n// forced\n// note that _forceTick0 is linearized, so needs to be turned into\n// a range value for setting tick0\naxes.minDtick = function(ax, newDiff, newFirst, allow) {\n    // doesn't make sense to do forced min dTick on log or category axes,\n    // and the plot itself may decide to cancel (ie non-grouped bars)\n    if(['log', 'category', 'multicategory'].indexOf(ax.type) !== -1 || !allow) {\n        ax._minDtick = 0;\n    } else if(ax._minDtick === undefined) {\n        // undefined means there's nothing there yet\n\n        ax._minDtick = newDiff;\n        ax._forceTick0 = newFirst;\n    } else if(ax._minDtick) {\n        if((ax._minDtick / newDiff + 1e-6) % 1 < 2e-6 &&\n            // existing minDtick is an integer multiple of newDiff\n            // (within rounding err)\n            // and forceTick0 can be shifted to newFirst\n\n                (((newFirst - ax._forceTick0) / newDiff % 1) +\n                    1.000001) % 1 < 2e-6) {\n            ax._minDtick = newDiff;\n            ax._forceTick0 = newFirst;\n        } else if((newDiff / ax._minDtick + 1e-6) % 1 > 2e-6 ||\n            // if the converse is true (newDiff is a multiple of minDtick and\n            // newFirst can be shifted to forceTick0) then do nothing - same\n            // forcing stands. Otherwise, cancel forced minimum\n\n                (((newFirst - ax._forceTick0) / ax._minDtick % 1) +\n                    1.000001) % 1 > 2e-6) {\n            ax._minDtick = 0;\n        }\n    }\n};\n\n// save a copy of the initial axis ranges in fullLayout\n// use them in mode bar and dblclick events\naxes.saveRangeInitial = function(gd, overwrite) {\n    var axList = axes.list(gd, '', true);\n    var hasOneAxisChanged = false;\n\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n        var isNew = (ax._rangeInitial === undefined);\n        var hasChanged = isNew || !(\n            ax.range[0] === ax._rangeInitial[0] &&\n            ax.range[1] === ax._rangeInitial[1]\n        );\n\n        if((isNew && ax.autorange === false) || (overwrite && hasChanged)) {\n            ax._rangeInitial = ax.range.slice();\n            hasOneAxisChanged = true;\n        }\n    }\n\n    return hasOneAxisChanged;\n};\n\n// save a copy of the initial spike visibility\naxes.saveShowSpikeInitial = function(gd, overwrite) {\n    var axList = axes.list(gd, '', true);\n    var hasOneAxisChanged = false;\n    var allSpikesEnabled = 'on';\n\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n        var isNew = (ax._showSpikeInitial === undefined);\n        var hasChanged = isNew || !(ax.showspikes === ax._showspikes);\n\n        if(isNew || (overwrite && hasChanged)) {\n            ax._showSpikeInitial = ax.showspikes;\n            hasOneAxisChanged = true;\n        }\n\n        if(allSpikesEnabled === 'on' && !ax.showspikes) {\n            allSpikesEnabled = 'off';\n        }\n    }\n    gd._fullLayout._cartesianSpikesEnabled = allSpikesEnabled;\n    return hasOneAxisChanged;\n};\n\naxes.autoBin = function(data, ax, nbins, is2d, calendar, size) {\n    var dataMin = Lib.aggNums(Math.min, null, data);\n    var dataMax = Lib.aggNums(Math.max, null, data);\n\n    if(ax.type === 'category' || ax.type === 'multicategory') {\n        return {\n            start: dataMin - 0.5,\n            end: dataMax + 0.5,\n            size: Math.max(1, Math.round(size) || 1),\n            _dataSpan: dataMax - dataMin,\n        };\n    }\n\n    if(!calendar) calendar = ax.calendar;\n\n    // piggyback off tick code to make \"nice\" bin sizes and edges\n    var dummyAx;\n    if(ax.type === 'log') {\n        dummyAx = {\n            type: 'linear',\n            range: [dataMin, dataMax]\n        };\n    } else {\n        dummyAx = {\n            type: ax.type,\n            range: Lib.simpleMap([dataMin, dataMax], ax.c2r, 0, calendar),\n            calendar: calendar\n        };\n    }\n    axes.setConvert(dummyAx);\n\n    size = size && cleanTicks.dtick(size, dummyAx.type);\n\n    if(size) {\n        dummyAx.dtick = size;\n        dummyAx.tick0 = cleanTicks.tick0(undefined, dummyAx.type, calendar);\n    } else {\n        var size0;\n        if(nbins) size0 = ((dataMax - dataMin) / nbins);\n        else {\n            // totally auto: scale off std deviation so the highest bin is\n            // somewhat taller than the total number of bins, but don't let\n            // the size get smaller than the 'nice' rounded down minimum\n            // difference between values\n            var distinctData = Lib.distinctVals(data);\n            var msexp = Math.pow(10, Math.floor(\n                Math.log(distinctData.minDiff) / Math.LN10));\n            var minSize = msexp * Lib.roundUp(\n                distinctData.minDiff / msexp, [0.9, 1.9, 4.9, 9.9], true);\n            size0 = Math.max(minSize, 2 * Lib.stdev(data) /\n                Math.pow(data.length, is2d ? 0.25 : 0.4));\n\n            // fallback if ax.d2c output BADNUMs\n            // e.g. when user try to plot categorical bins\n            // on a layout.xaxis.type: 'linear'\n            if(!isNumeric(size0)) size0 = 1;\n        }\n\n        axes.autoTicks(dummyAx, size0);\n    }\n\n    var finalSize = dummyAx.dtick;\n    var binStart = axes.tickIncrement(\n            axes.tickFirst(dummyAx), finalSize, 'reverse', calendar);\n    var binEnd, bincount;\n\n    // check for too many data points right at the edges of bins\n    // (>50% within 1% of bin edges) or all data points integral\n    // and offset the bins accordingly\n    if(typeof finalSize === 'number') {\n        binStart = autoShiftNumericBins(binStart, data, dummyAx, dataMin, dataMax);\n\n        bincount = 1 + Math.floor((dataMax - binStart) / finalSize);\n        binEnd = binStart + bincount * finalSize;\n    } else {\n        // month ticks - should be the only nonlinear kind we have at this point.\n        // dtick (as supplied by axes.autoTick) only has nonlinear values on\n        // date and log axes, but even if you display a histogram on a log axis\n        // we bin it on a linear axis (which one could argue against, but that's\n        // a separate issue)\n        if(dummyAx.dtick.charAt(0) === 'M') {\n            binStart = autoShiftMonthBins(binStart, data, finalSize, dataMin, calendar);\n        }\n\n        // calculate the endpoint for nonlinear ticks - you have to\n        // just increment until you're done\n        binEnd = binStart;\n        bincount = 0;\n        while(binEnd <= dataMax) {\n            binEnd = axes.tickIncrement(binEnd, finalSize, false, calendar);\n            bincount++;\n        }\n    }\n\n    return {\n        start: ax.c2r(binStart, 0, calendar),\n        end: ax.c2r(binEnd, 0, calendar),\n        size: finalSize,\n        _dataSpan: dataMax - dataMin\n    };\n};\n\n\nfunction autoShiftNumericBins(binStart, data, ax, dataMin, dataMax) {\n    var edgecount = 0;\n    var midcount = 0;\n    var intcount = 0;\n    var blankCount = 0;\n\n    function nearEdge(v) {\n        // is a value within 1% of a bin edge?\n        return (1 + (v - binStart) * 100 / ax.dtick) % 100 < 2;\n    }\n\n    for(var i = 0; i < data.length; i++) {\n        if(data[i] % 1 === 0) intcount++;\n        else if(!isNumeric(data[i])) blankCount++;\n\n        if(nearEdge(data[i])) edgecount++;\n        if(nearEdge(data[i] + ax.dtick / 2)) midcount++;\n    }\n    var dataCount = data.length - blankCount;\n\n    if(intcount === dataCount && ax.type !== 'date') {\n        if(ax.dtick < 1) {\n            // all integers: if bin size is <1, it's because\n            // that was specifically requested (large nbins)\n            // so respect that... but center the bins containing\n            // integers on those integers\n\n            binStart = dataMin - 0.5 * ax.dtick;\n        } else {\n            // otherwise start half an integer down regardless of\n            // the bin size, just enough to clear up endpoint\n            // ambiguity about which integers are in which bins.\n\n            binStart -= 0.5;\n            if(binStart + ax.dtick < dataMin) binStart += ax.dtick;\n        }\n    } else if(midcount < dataCount * 0.1) {\n        if(edgecount > dataCount * 0.3 ||\n                nearEdge(dataMin) || nearEdge(dataMax)) {\n            // lots of points at the edge, not many in the middle\n            // shift half a bin\n            var binshift = ax.dtick / 2;\n            binStart += (binStart + binshift < dataMin) ? binshift : -binshift;\n        }\n    }\n    return binStart;\n}\n\n\nfunction autoShiftMonthBins(binStart, data, dtick, dataMin, calendar) {\n    var stats = Lib.findExactDates(data, calendar);\n    // number of data points that needs to be an exact value\n    // to shift that increment to (near) the bin center\n    var threshold = 0.8;\n\n    if(stats.exactDays > threshold) {\n        var numMonths = Number(dtick.substr(1));\n\n        if((stats.exactYears > threshold) && (numMonths % 12 === 0)) {\n            // The exact middle of a non-leap-year is 1.5 days into July\n            // so if we start the bins here, all but leap years will\n            // get hover-labeled as exact years.\n            binStart = axes.tickIncrement(binStart, 'M6', 'reverse') + ONEDAY * 1.5;\n        } else if(stats.exactMonths > threshold) {\n            // Months are not as clean, but if we shift half the *longest*\n            // month (31/2 days) then 31-day months will get labeled exactly\n            // and shorter months will get labeled with the correct month\n            // but shifted 12-36 hours into it.\n            binStart = axes.tickIncrement(binStart, 'M1', 'reverse') + ONEDAY * 15.5;\n        } else {\n            // Shifting half a day is exact, but since these are month bins it\n            // will always give a somewhat odd-looking label, until we do something\n            // smarter like showing the bin boundaries (or the bounds of the actual\n            // data in each bin)\n            binStart -= HALFDAY;\n        }\n        var nextBinStart = axes.tickIncrement(binStart, dtick);\n\n        if(nextBinStart <= dataMin) return nextBinStart;\n    }\n    return binStart;\n}\n\n// ----------------------------------------------------\n// Ticks and grids\n// ----------------------------------------------------\n\n// ensure we have tick0, dtick, and tick rounding calculated\naxes.prepTicks = function(ax, opts) {\n    var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts);\n\n    // calculate max number of (auto) ticks to display based on plot size\n    if(ax.tickmode === 'auto' || !ax.dtick) {\n        var nt = ax.nticks;\n        var minPx;\n\n        if(!nt) {\n            if(ax.type === 'category' || ax.type === 'multicategory') {\n                minPx = ax.tickfont ? (ax.tickfont.size || 12) * 1.2 : 15;\n                nt = ax._length / minPx;\n            } else {\n                minPx = ax._id.charAt(0) === 'y' ? 40 : 80;\n                nt = Lib.constrain(ax._length / minPx, 4, 9) + 1;\n            }\n\n            // radial axes span half their domain,\n            // multiply nticks value by two to get correct number of auto ticks.\n            if(ax._name === 'radialaxis') nt *= 2;\n        }\n\n        // add a couple of extra digits for filling in ticks when we\n        // have explicit tickvals without tick text\n        if(ax.tickmode === 'array') nt *= 100;\n\n\n        ax._roughDTick = (Math.abs(rng[1] - rng[0]) - (ax._lBreaks || 0)) / nt;\n        axes.autoTicks(ax, ax._roughDTick);\n\n        // check for a forced minimum dtick\n        if(ax._minDtick > 0 && ax.dtick < ax._minDtick * 2) {\n            ax.dtick = ax._minDtick;\n            ax.tick0 = ax.l2r(ax._forceTick0);\n        }\n    }\n\n    // check for missing tick0\n    if(!ax.tick0) {\n        ax.tick0 = (ax.type === 'date') ? '2000-01-01' : 0;\n    }\n\n    // ensure we don't try to make ticks below our minimum precision\n    // see https://github.com/plotly/plotly.js/issues/2892\n    if(ax.type === 'date' && ax.dtick < 0.1) ax.dtick = 0.1;\n\n    // now figure out rounding of tick values\n    autoTickRound(ax);\n};\n\n// calculate the ticks: text, values, positioning\n// if ticks are set to automatic, determine the right values (tick0,dtick)\n// in any case, set tickround to # of digits to round tick labels to,\n// or codes to this effect for log and date scales\naxes.calcTicks = function calcTicks(ax, opts) {\n    axes.prepTicks(ax, opts);\n    var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts);\n\n    // now that we've figured out the auto values for formatting\n    // in case we're missing some ticktext, we can break out for array ticks\n    if(ax.tickmode === 'array') return arrayTicks(ax);\n\n    // find the first tick\n    ax._tmin = axes.tickFirst(ax, opts);\n\n    // add a tiny bit so we get ticks which may have rounded out\n    var exRng = expandRange(rng);\n    var startTick = exRng[0];\n    var endTick = exRng[1];\n    // check for reversed axis\n    var axrev = (rng[1] < rng[0]);\n\n    // No visible ticks? Quit.\n    // I've only seen this on category axes with all categories off the edge.\n    if((ax._tmin < startTick) !== axrev) return [];\n\n    // return the full set of tick vals\n    if(ax.type === 'category' || ax.type === 'multicategory') {\n        endTick = (axrev) ? Math.max(-0.5, endTick) :\n            Math.min(ax._categories.length - 0.5, endTick);\n    }\n\n    var isDLog = (ax.type === 'log') && !(isNumeric(ax.dtick) || ax.dtick.charAt(0) === 'L');\n\n    var tickVals;\n    function generateTicks() {\n        var xPrevious = null;\n        var maxTicks = Math.max(1000, ax._length || 0);\n        tickVals = [];\n        for(var x = ax._tmin;\n                (axrev) ? (x >= endTick) : (x <= endTick);\n                x = axes.tickIncrement(x, ax.dtick, axrev, ax.calendar)) {\n            // prevent infinite loops - no more than one tick per pixel,\n            // and make sure each value is different from the previous\n            if(tickVals.length > maxTicks || x === xPrevious) break;\n            xPrevious = x;\n\n            var minor = false;\n            if(isDLog && (x !== (x | 0))) {\n                minor = true;\n            }\n\n            tickVals.push({\n                minor: minor,\n                value: x\n            });\n        }\n    }\n\n    generateTicks();\n\n    var isPeriod = ax.ticklabelmode === 'period';\n    if(isPeriod) {\n        // add one label to show pre tick0 period\n        tickVals.unshift({\n            minor: false,\n            value: axes.tickIncrement(tickVals[0].value, ax.dtick, !axrev, ax.caldendar)\n        });\n    }\n\n    if(ax.rangebreaks) {\n        // replace ticks inside breaks that would get a tick\n        // and reduce ticks\n        var len = tickVals.length;\n        if(len) {\n            var tf = 0;\n            if(ax.tickmode === 'auto') {\n                tf =\n                    (ax._id.charAt(0) === 'y' ? 2 : 6) *\n                    (ax.tickfont ? ax.tickfont.size : 12);\n            }\n\n            var newTickVals = [];\n            var prevPos;\n\n            var dir = axrev ? 1 : -1;\n            var first = axrev ? 0 : len - 1;\n            var last = axrev ? len - 1 : 0;\n            for(var q = first; dir * q <= dir * last; q += dir) {\n                var tickVal = tickVals[q];\n                if(ax.maskBreaks(tickVal.value) === BADNUM) {\n                    tickVal.value = moveOutsideBreak(tickVal.value, ax);\n\n                    if(ax._rl && (\n                        ax._rl[0] === tickVal.value ||\n                        ax._rl[1] === tickVal.value\n                    )) continue;\n                }\n\n                var pos = ax.c2p(tickVal.value);\n\n                if(pos === prevPos) {\n                    if(newTickVals[newTickVals.length - 1].value < tickVal.value) {\n                        newTickVals[newTickVals.length - 1] = tickVal;\n                    }\n                } else if(prevPos === undefined || Math.abs(pos - prevPos) > tf) {\n                    prevPos = pos;\n                    newTickVals.push(tickVal);\n                }\n            }\n            tickVals = newTickVals.reverse();\n        }\n    }\n\n    // If same angle over a full circle, the last tick vals is a duplicate.\n    // TODO must do something similar for angular date axes.\n    if(isAngular(ax) && Math.abs(rng[1] - rng[0]) === 360) {\n        tickVals.pop();\n    }\n\n    // save the last tick as well as first, so we can\n    // show the exponent only on the last one\n    ax._tmax = (tickVals[tickVals.length - 1] || {}).value;\n\n    // for showing the rest of a date when the main tick label is only the\n    // latter part: ax._prevDateHead holds what we showed most recently.\n    // Start with it cleared and mark that we're in calcTicks (ie calculating a\n    // whole string of these so we should care what the previous date head was!)\n    ax._prevDateHead = '';\n    ax._inCalcTicks = true;\n\n    var minRange = Math.min(rng[0], rng[1]);\n    var maxRange = Math.max(rng[0], rng[1]);\n\n    var definedDelta;\n    var tickformat = axes.getTickFormat(ax);\n    if(isPeriod && tickformat) {\n        if(\n            !(/%[fLQsSMX]/.test(tickformat))\n            // %f: microseconds as a decimal number [000000, 999999]\n            // %L: milliseconds as a decimal number [000, 999]\n            // %Q: milliseconds since UNIX epoch\n            // %s: seconds since UNIX epoch\n            // %S: second as a decimal number [00,61]\n            // %M: minute as a decimal number [00,59]\n            // %X: the locale’s time, such as %-I:%M:%S %p\n        ) {\n            if(\n                /%[HI]/.test(tickformat)\n                // %H: hour (24-hour clock) as a decimal number [00,23]\n                // %I: hour (12-hour clock) as a decimal number [01,12]\n            ) definedDelta = ONEHOUR;\n            else if(\n                /%p/.test(tickformat) // %p: either AM or PM\n            ) definedDelta = HALFDAY;\n            else if(\n                /%[Aadejuwx]/.test(tickformat)\n                // %A: full weekday name\n                // %a: abbreviated weekday name\n                // %d: zero-padded day of the month as a decimal number [01,31]\n                // %e: space-padded day of the month as a decimal number [ 1,31]\n                // %j: day of the year as a decimal number [001,366]\n                // %u: Monday-based (ISO 8601) weekday as a decimal number [1,7]\n                // %w: Sunday-based weekday as a decimal number [0,6]\n                // %x: the locale’s date, such as %-m/%-d/%Y\n            ) definedDelta = ONEDAY;\n            else if(\n                /%[UVW]/.test(tickformat)\n                // %U: Sunday-based week of the year as a decimal number [00,53]\n                // %V: ISO 8601 week of the year as a decimal number [01, 53]\n                // %W: Monday-based week of the year as a decimal number [00,53]\n            ) definedDelta = ONEWEEK;\n            else if(\n                /%[Bbm]/.test(tickformat)\n                // %B: full month name\n                // %b: abbreviated month name\n                // %m: month as a decimal number [01,12]\n            ) definedDelta = ONEAVGMONTH;\n            else if(\n                /%[q]/.test(tickformat)\n                // %q: quarter of the year as a decimal number [1,4]\n            ) definedDelta = ONEAVGQUARTER;\n            else if(\n                /%[Yy]/.test(tickformat)\n                // %Y: year with century as a decimal number, such as 1999\n                // %y: year without century as a decimal number [00,99]\n            ) definedDelta = ONEAVGYEAR;\n        }\n    }\n\n    var ticksOut = [];\n    var i;\n    var prevText;\n    for(i = 0; i < tickVals.length; i++) {\n        var _minor = tickVals[i].minor;\n        var _value = tickVals[i].value;\n\n        var t = axes.tickText(\n            ax,\n            _value,\n            false, // hover\n            _minor // noSuffixPrefix\n        );\n\n        if(isPeriod && prevText === t.text) continue;\n        prevText = t.text;\n\n        ticksOut.push(t);\n    }\n\n    if(isPeriod) {\n        var removedPreTick0Label = false;\n\n        for(i = 0; i < ticksOut.length; i++) {\n            var v = ticksOut[i].x;\n\n            var a = i;\n            var b = i + 1;\n            if(i < ticksOut.length - 1) {\n                a = i;\n                b = i + 1;\n            } else if(i > 0) {\n                a = i - 1;\n                b = i;\n            } else {\n                a = i;\n                b = i;\n            }\n\n            var A = ticksOut[a].x;\n            var B = ticksOut[b].x;\n            var actualDelta = Math.abs(B - A);\n            var delta = definedDelta || actualDelta;\n            var periodLength = 0;\n\n            if(delta >= ONEMINYEAR) {\n                if(actualDelta >= ONEMINYEAR && actualDelta <= ONEMAXYEAR) {\n                    periodLength = actualDelta;\n                } else {\n                    periodLength = ONEAVGYEAR;\n                }\n            } else if(definedDelta === ONEAVGQUARTER && delta >= ONEMINQUARTER) {\n                if(actualDelta >= ONEMINQUARTER && actualDelta <= ONEMAXQUARTER) {\n                    periodLength = actualDelta;\n                } else {\n                    periodLength = ONEAVGQUARTER;\n                }\n            } else if(delta >= ONEMINMONTH) {\n                if(actualDelta >= ONEMINMONTH && actualDelta <= ONEMAXMONTH) {\n                    periodLength = actualDelta;\n                } else {\n                    periodLength = ONEAVGMONTH;\n                }\n            } else if(definedDelta === ONEWEEK && delta >= ONEWEEK) {\n                periodLength = ONEWEEK;\n            } else if(delta >= ONEDAY) {\n                periodLength = ONEDAY;\n            } else if(definedDelta === HALFDAY && delta >= HALFDAY) {\n                periodLength = HALFDAY;\n            } else if(definedDelta === ONEHOUR && delta >= ONEHOUR) {\n                periodLength = ONEHOUR;\n            }\n\n            if(periodLength && ax.rangebreaks) {\n                var nFirstHalf = 0;\n                var nSecondHalf = 0;\n                var nAll = 2 * 3 * 7; // number of samples\n                for(var c = 0; c < nAll; c++) {\n                    var r = c / nAll;\n                    if(ax.maskBreaks(A * (1 - r) + B * r) !== BADNUM) {\n                        if(r < 0.5) {\n                            nFirstHalf++;\n                        } else {\n                            nSecondHalf++;\n                        }\n                    }\n                }\n\n                if(nSecondHalf) {\n                    periodLength *= (nFirstHalf + nSecondHalf) / nAll;\n                }\n            }\n\n            if(periodLength <= actualDelta) { // i.e. to ensure new label positions remain between ticks\n                v += periodLength / 2;\n            }\n\n            ticksOut[i].periodX = v;\n\n            if(v > maxRange || v < minRange) { // hide label if outside the range\n                ticksOut[i].text = '';\n                removedPreTick0Label = true;\n            }\n        }\n\n        if(removedPreTick0Label) {\n            for(i = 0; i < ticksOut.length; i++) {\n                if(ticksOut[i].periodX <= maxRange && ticksOut[i].periodX >= minRange) {\n                    // redo first visible tick\n                    ax._prevDateHead = '';\n                    ticksOut[i].text = axes.tickText(ax, ticksOut[i].x).text;\n                    break;\n                }\n            }\n        }\n    }\n\n    ax._inCalcTicks = false;\n\n    return ticksOut;\n};\n\nfunction arrayTicks(ax) {\n    var vals = ax.tickvals;\n    var text = ax.ticktext;\n    var ticksOut = new Array(vals.length);\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n    var exRng = expandRange(rng);\n    var tickMin = Math.min(exRng[0], exRng[1]);\n    var tickMax = Math.max(exRng[0], exRng[1]);\n    var j = 0;\n\n    // without a text array, just format the given values as any other ticks\n    // except with more precision to the numbers\n    if(!Array.isArray(text)) text = [];\n\n    // make sure showing ticks doesn't accidentally add new categories\n    // TODO multicategory, if we allow ticktext / tickvals\n    var tickVal2l = ax.type === 'category' ? ax.d2l_noadd : ax.d2l;\n\n    // array ticks on log axes always show the full number\n    // (if no explicit ticktext overrides it)\n    if(ax.type === 'log' && String(ax.dtick).charAt(0) !== 'L') {\n        ax.dtick = 'L' + Math.pow(10, Math.floor(Math.min(ax.range[0], ax.range[1])) - 1);\n    }\n\n    for(var i = 0; i < vals.length; i++) {\n        var vali = tickVal2l(vals[i]);\n        if(vali > tickMin && vali < tickMax) {\n            if(text[i] === undefined) ticksOut[j] = axes.tickText(ax, vali);\n            else ticksOut[j] = tickTextObj(ax, vali, String(text[i]));\n            j++;\n        }\n    }\n\n    if(j < vals.length) ticksOut.splice(j, vals.length - j);\n\n    if(ax.rangebreaks) {\n        // remove ticks falling inside rangebreaks\n        ticksOut = ticksOut.filter(function(d) {\n            return ax.maskBreaks(d.x) !== BADNUM;\n        });\n    }\n\n    return ticksOut;\n}\n\nvar roundBase10 = [2, 5, 10];\nvar roundBase24 = [1, 2, 3, 6, 12];\nvar roundBase60 = [1, 2, 5, 10, 15, 30];\n// 2&3 day ticks are weird, but need something btwn 1&7\nvar roundDays = [1, 2, 3, 7, 14];\n// approx. tick positions for log axes, showing all (1) and just 1, 2, 5 (2)\n// these don't have to be exact, just close enough to round to the right value\nvar roundLog1 = [-0.046, 0, 0.301, 0.477, 0.602, 0.699, 0.778, 0.845, 0.903, 0.954, 1];\nvar roundLog2 = [-0.301, 0, 0.301, 0.699, 1];\n// N.B. `thetaunit; 'radians' angular axes must be converted to degrees\nvar roundAngles = [15, 30, 45, 90, 180];\n\nfunction roundDTick(roughDTick, base, roundingSet) {\n    return base * Lib.roundUp(roughDTick / base, roundingSet);\n}\n\n// autoTicks: calculate best guess at pleasant ticks for this axis\n// inputs:\n//      ax - an axis object\n//      roughDTick - rough tick spacing (to be turned into a nice round number)\n// outputs (into ax):\n//   tick0: starting point for ticks (not necessarily on the graph)\n//      usually 0 for numeric (=10^0=1 for log) or jan 1, 2000 for dates\n//   dtick: the actual, nice round tick spacing, usually a little larger than roughDTick\n//      if the ticks are spaced linearly (linear scale, categories,\n//          log with only full powers, date ticks < month),\n//          this will just be a number\n//      months: M#\n//      years: M# where # is 12*number of years\n//      log with linear ticks: L# where # is the linear tick spacing\n//      log showing powers plus some intermediates:\n//          D1 shows all digits, D2 shows 2 and 5\naxes.autoTicks = function(ax, roughDTick) {\n    var base;\n\n    function getBase(v) {\n        return Math.pow(v, Math.floor(Math.log(roughDTick) / Math.LN10));\n    }\n\n    if(ax.type === 'date') {\n        ax.tick0 = Lib.dateTick0(ax.calendar);\n        // the criteria below are all based on the rough spacing we calculate\n        // being > half of the final unit - so precalculate twice the rough val\n        var roughX2 = 2 * roughDTick;\n\n        if(roughX2 > ONEAVGYEAR) {\n            roughDTick /= ONEAVGYEAR;\n            base = getBase(10);\n            ax.dtick = 'M' + (12 * roundDTick(roughDTick, base, roundBase10));\n        } else if(roughX2 > ONEAVGMONTH) {\n            roughDTick /= ONEAVGMONTH;\n            ax.dtick = 'M' + roundDTick(roughDTick, 1, roundBase24);\n        } else if(roughX2 > ONEDAY) {\n            ax.dtick = roundDTick(roughDTick, ONEDAY, ax._hasDayOfWeekBreaks ? [1, 2, 7, 14] : roundDays);\n            // get week ticks on sunday\n            // this will also move the base tick off 2000-01-01 if dtick is\n            // 2 or 3 days... but that's a weird enough case that we'll ignore it.\n            ax.tick0 = Lib.dateTick0(ax.calendar, true);\n\n            var tickformat = axes.getTickFormat(ax);\n            if(/%[uVW]/.test(tickformat)) {\n                // replace Sunday with Monday for ISO and Monday-based formats\n                var len = ax.tick0.length;\n                var lastD = +ax.tick0[len - 1];\n                ax.tick0 = ax.tick0.substring(0, len - 2) + String(lastD + 1);\n            }\n        } else if(roughX2 > ONEHOUR) {\n            ax.dtick = roundDTick(roughDTick, ONEHOUR, roundBase24);\n        } else if(roughX2 > ONEMIN) {\n            ax.dtick = roundDTick(roughDTick, ONEMIN, roundBase60);\n        } else if(roughX2 > ONESEC) {\n            ax.dtick = roundDTick(roughDTick, ONESEC, roundBase60);\n        } else {\n            // milliseconds\n            base = getBase(10);\n            ax.dtick = roundDTick(roughDTick, base, roundBase10);\n        }\n    } else if(ax.type === 'log') {\n        ax.tick0 = 0;\n        var rng = Lib.simpleMap(ax.range, ax.r2l);\n\n        if(roughDTick > 0.7) {\n            // only show powers of 10\n            ax.dtick = Math.ceil(roughDTick);\n        } else if(Math.abs(rng[1] - rng[0]) < 1) {\n            // span is less than one power of 10\n            var nt = 1.5 * Math.abs((rng[1] - rng[0]) / roughDTick);\n\n            // ticks on a linear scale, labeled fully\n            roughDTick = Math.abs(Math.pow(10, rng[1]) -\n                Math.pow(10, rng[0])) / nt;\n            base = getBase(10);\n            ax.dtick = 'L' + roundDTick(roughDTick, base, roundBase10);\n        } else {\n            // include intermediates between powers of 10,\n            // labeled with small digits\n            // ax.dtick = \"D2\" (show 2 and 5) or \"D1\" (show all digits)\n            ax.dtick = (roughDTick > 0.3) ? 'D2' : 'D1';\n        }\n    } else if(ax.type === 'category' || ax.type === 'multicategory') {\n        ax.tick0 = 0;\n        ax.dtick = Math.ceil(Math.max(roughDTick, 1));\n    } else if(isAngular(ax)) {\n        ax.tick0 = 0;\n        base = 1;\n        ax.dtick = roundDTick(roughDTick, base, roundAngles);\n    } else {\n        // auto ticks always start at 0\n        ax.tick0 = 0;\n        base = getBase(10);\n        ax.dtick = roundDTick(roughDTick, base, roundBase10);\n    }\n\n    // prevent infinite loops\n    if(ax.dtick === 0) ax.dtick = 1;\n\n    // TODO: this is from log axis histograms with autorange off\n    if(!isNumeric(ax.dtick) && typeof ax.dtick !== 'string') {\n        var olddtick = ax.dtick;\n        ax.dtick = 1;\n        throw 'ax.dtick error: ' + String(olddtick);\n    }\n};\n\n// after dtick is already known, find tickround = precision\n// to display in tick labels\n//   for numeric ticks, integer # digits after . to round to\n//   for date ticks, the last date part to show (y,m,d,H,M,S)\n//      or an integer # digits past seconds\nfunction autoTickRound(ax) {\n    var dtick = ax.dtick;\n\n    ax._tickexponent = 0;\n    if(!isNumeric(dtick) && typeof dtick !== 'string') {\n        dtick = 1;\n    }\n\n    if(ax.type === 'category' || ax.type === 'multicategory') {\n        ax._tickround = null;\n    }\n    if(ax.type === 'date') {\n        // If tick0 is unusual, give tickround a bit more information\n        // not necessarily *all* the information in tick0 though, if it's really odd\n        // minimal string length for tick0: 'd' is 10, 'M' is 16, 'S' is 19\n        // take off a leading minus (year < 0) and i (intercalary month) so length is consistent\n        var tick0ms = ax.r2l(ax.tick0);\n        var tick0str = ax.l2r(tick0ms).replace(/(^-|i)/g, '');\n        var tick0len = tick0str.length;\n\n        if(String(dtick).charAt(0) === 'M') {\n            // any tick0 more specific than a year: alway show the full date\n            if(tick0len > 10 || tick0str.substr(5) !== '01-01') ax._tickround = 'd';\n            // show the month unless ticks are full multiples of a year\n            else ax._tickround = (+(dtick.substr(1)) % 12 === 0) ? 'y' : 'm';\n        } else if((dtick >= ONEDAY && tick0len <= 10) || (dtick >= ONEDAY * 15)) ax._tickround = 'd';\n        else if((dtick >= ONEMIN && tick0len <= 16) || (dtick >= ONEHOUR)) ax._tickround = 'M';\n        else if((dtick >= ONESEC && tick0len <= 19) || (dtick >= ONEMIN)) ax._tickround = 'S';\n        else {\n            // tickround is a number of digits of fractional seconds\n            // of any two adjacent ticks, at least one will have the maximum fractional digits\n            // of all possible ticks - so take the max. length of tick0 and the next one\n            var tick1len = ax.l2r(tick0ms + dtick).replace(/^-/, '').length;\n            ax._tickround = Math.max(tick0len, tick1len) - 20;\n\n            // We shouldn't get here... but in case there's a situation I'm\n            // not thinking of where tick0str and tick1str are identical or\n            // something, fall back on maximum precision\n            if(ax._tickround < 0) ax._tickround = 4;\n        }\n    } else if(isNumeric(dtick) || dtick.charAt(0) === 'L') {\n        // linear or log (except D1, D2)\n        var rng = ax.range.map(ax.r2d || Number);\n        if(!isNumeric(dtick)) dtick = Number(dtick.substr(1));\n        // 2 digits past largest digit of dtick\n        ax._tickround = 2 - Math.floor(Math.log(dtick) / Math.LN10 + 0.01);\n\n        var maxend = Math.max(Math.abs(rng[0]), Math.abs(rng[1]));\n        var rangeexp = Math.floor(Math.log(maxend) / Math.LN10 + 0.01);\n        if(Math.abs(rangeexp) > 3) {\n            if(isSIFormat(ax.exponentformat) && !beyondSI(rangeexp)) {\n                ax._tickexponent = 3 * Math.round((rangeexp - 1) / 3);\n            } else ax._tickexponent = rangeexp;\n        }\n    } else {\n        // D1 or D2 (log)\n        ax._tickround = null;\n    }\n}\n\n// months and years don't have constant millisecond values\n// (but a year is always 12 months so we only need months)\n// log-scale ticks are also not consistently spaced, except\n// for pure powers of 10\n// numeric ticks always have constant differences, other datetime ticks\n// can all be calculated as constant number of milliseconds\naxes.tickIncrement = function(x, dtick, axrev, calendar) {\n    var axSign = axrev ? -1 : 1;\n\n    // includes linear, all dates smaller than month, and pure 10^n in log\n    if(isNumeric(dtick)) return Lib.increment(x, axSign * dtick);\n\n    // everything else is a string, one character plus a number\n    var tType = dtick.charAt(0);\n    var dtSigned = axSign * Number(dtick.substr(1));\n\n    // Dates: months (or years - see Lib.incrementMonth)\n    if(tType === 'M') return Lib.incrementMonth(x, dtSigned, calendar);\n\n    // Log scales: Linear, Digits\n    if(tType === 'L') return Math.log(Math.pow(10, x) + dtSigned) / Math.LN10;\n\n    // log10 of 2,5,10, or all digits (logs just have to be\n    // close enough to round)\n    if(tType === 'D') {\n        var tickset = (dtick === 'D2') ? roundLog2 : roundLog1;\n        var x2 = x + axSign * 0.01;\n        var frac = Lib.roundUp(Lib.mod(x2, 1), tickset, axrev);\n\n        return Math.floor(x2) +\n            Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n    }\n\n    throw 'unrecognized dtick ' + String(dtick);\n};\n\n// calculate the first tick on an axis\naxes.tickFirst = function(ax, opts) {\n    var r2l = ax.r2l || Number;\n    var rng = Lib.simpleMap(ax.range, r2l, undefined, undefined, opts);\n    var axrev = rng[1] < rng[0];\n    var sRound = axrev ? Math.floor : Math.ceil;\n    // add a tiny extra bit to make sure we get ticks\n    // that may have been rounded out\n    var r0 = expandRange(rng)[0];\n    var dtick = ax.dtick;\n    var tick0 = r2l(ax.tick0);\n\n    if(isNumeric(dtick)) {\n        var tmin = sRound((r0 - tick0) / dtick) * dtick + tick0;\n\n        // make sure no ticks outside the category list\n        if(ax.type === 'category' || ax.type === 'multicategory') {\n            tmin = Lib.constrain(tmin, 0, ax._categories.length - 1);\n        }\n        return tmin;\n    }\n\n    var tType = dtick.charAt(0);\n    var dtNum = Number(dtick.substr(1));\n\n    // Dates: months (or years)\n    if(tType === 'M') {\n        var cnt = 0;\n        var t0 = tick0;\n        var t1, mult, newDTick;\n\n        // This algorithm should work for *any* nonlinear (but close to linear!)\n        // tick spacing. Limit to 10 iterations, for gregorian months it's normally <=3.\n        while(cnt < 10) {\n            t1 = axes.tickIncrement(t0, dtick, axrev, ax.calendar);\n            if((t1 - r0) * (t0 - r0) <= 0) {\n                // t1 and t0 are on opposite sides of r0! we've succeeded!\n                if(axrev) return Math.min(t0, t1);\n                return Math.max(t0, t1);\n            }\n            mult = (r0 - ((t0 + t1) / 2)) / (t1 - t0);\n            newDTick = tType + ((Math.abs(Math.round(mult)) || 1) * dtNum);\n            t0 = axes.tickIncrement(t0, newDTick, mult < 0 ? !axrev : axrev, ax.calendar);\n            cnt++;\n        }\n        Lib.error('tickFirst did not converge', ax);\n        return t0;\n    } else if(tType === 'L') {\n        // Log scales: Linear, Digits\n\n        return Math.log(sRound(\n            (Math.pow(10, r0) - tick0) / dtNum) * dtNum + tick0) / Math.LN10;\n    } else if(tType === 'D') {\n        var tickset = (dtick === 'D2') ? roundLog2 : roundLog1;\n        var frac = Lib.roundUp(Lib.mod(r0, 1), tickset, axrev);\n\n        return Math.floor(r0) +\n            Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n    } else throw 'unrecognized dtick ' + String(dtick);\n};\n\n// draw the text for one tick.\n// px,py are the location on gd.paper\n// prefix is there so the x axis ticks can be dropped a line\n// ax is the axis layout, x is the tick value\n// hover is a (truthy) flag for whether to show numbers with a bit\n// more precision for hovertext\naxes.tickText = function(ax, x, hover, noSuffixPrefix) {\n    var out = tickTextObj(ax, x);\n    var arrayMode = ax.tickmode === 'array';\n    var extraPrecision = hover || arrayMode;\n    var axType = ax.type;\n    // TODO multicategory, if we allow ticktext / tickvals\n    var tickVal2l = axType === 'category' ? ax.d2l_noadd : ax.d2l;\n    var i;\n\n    if(arrayMode && Array.isArray(ax.ticktext)) {\n        var rng = Lib.simpleMap(ax.range, ax.r2l);\n        var minDiff = (Math.abs(rng[1] - rng[0]) - (ax._lBreaks || 0)) / 10000;\n\n        for(i = 0; i < ax.ticktext.length; i++) {\n            if(Math.abs(x - tickVal2l(ax.tickvals[i])) < minDiff) break;\n        }\n        if(i < ax.ticktext.length) {\n            out.text = String(ax.ticktext[i]);\n            return out;\n        }\n    }\n\n    function isHidden(showAttr) {\n        if(showAttr === undefined) return true;\n        if(hover) return showAttr === 'none';\n\n        var firstOrLast = {\n            first: ax._tmin,\n            last: ax._tmax\n        }[showAttr];\n\n        return showAttr !== 'all' && x !== firstOrLast;\n    }\n\n    var hideexp = hover ?\n        'never' :\n        ax.exponentformat !== 'none' && isHidden(ax.showexponent) ? 'hide' : '';\n\n    if(axType === 'date') formatDate(ax, out, hover, extraPrecision);\n    else if(axType === 'log') formatLog(ax, out, hover, extraPrecision, hideexp);\n    else if(axType === 'category') formatCategory(ax, out);\n    else if(axType === 'multicategory') formatMultiCategory(ax, out, hover);\n    else if(isAngular(ax)) formatAngle(ax, out, hover, extraPrecision, hideexp);\n    else formatLinear(ax, out, hover, extraPrecision, hideexp);\n\n    // add prefix and suffix\n    if(!noSuffixPrefix) {\n        if(ax.tickprefix && !isHidden(ax.showtickprefix)) out.text = ax.tickprefix + out.text;\n        if(ax.ticksuffix && !isHidden(ax.showticksuffix)) out.text += ax.ticksuffix;\n    }\n\n    // Setup ticks and grid lines boundaries\n    // at 1/2 a 'category' to the left/bottom\n    if(ax.tickson === 'boundaries' || ax.showdividers) {\n        var inbounds = function(v) {\n            var p = ax.l2p(v);\n            return p >= 0 && p <= ax._length ? v : null;\n        };\n\n        out.xbnd = [\n            inbounds(out.x - 0.5),\n            inbounds(out.x + ax.dtick - 0.5)\n        ];\n    }\n\n    return out;\n};\n\n/**\n * create text for a hover label on this axis, with special handling of\n * log axes (where negative values can't be displayed but can appear in hover text)\n *\n * @param {object} ax: the axis to format text for\n * @param {number} val: calcdata value to format\n * @param {Optional(number)} val2: a second value to display\n *\n * @returns {string} `val` formatted as a string appropriate to this axis, or\n *     `val` and `val2` as a range (ie '<val> - <val2>') if `val2` is provided and\n *     it's different from `val`.\n */\naxes.hoverLabelText = function(ax, val, val2) {\n    if(val2 !== BADNUM && val2 !== val) {\n        return axes.hoverLabelText(ax, val) + ' - ' + axes.hoverLabelText(ax, val2);\n    }\n\n    var logOffScale = (ax.type === 'log' && val <= 0);\n    var tx = axes.tickText(ax, ax.c2l(logOffScale ? -val : val), 'hover').text;\n\n    if(logOffScale) {\n        return val === 0 ? '0' : MINUS_SIGN + tx;\n    }\n\n    // TODO: should we do something special if the axis calendar and\n    // the data calendar are different? Somehow display both dates with\n    // their system names? Right now it will just display in the axis calendar\n    // but users could add the other one as text.\n    return tx;\n};\n\nfunction tickTextObj(ax, x, text) {\n    var tf = ax.tickfont || {};\n\n    return {\n        x: x,\n        dx: 0,\n        dy: 0,\n        text: text || '',\n        fontSize: tf.size,\n        font: tf.family,\n        fontColor: tf.color\n    };\n}\n\nfunction formatDate(ax, out, hover, extraPrecision) {\n    var tr = ax._tickround;\n    var fmt = (hover && ax.hoverformat) || axes.getTickFormat(ax);\n\n    if(extraPrecision) {\n        // second or sub-second precision: extra always shows max digits.\n        // for other fields, extra precision just adds one field.\n        if(isNumeric(tr)) tr = 4;\n        else tr = {y: 'm', m: 'd', d: 'M', M: 'S', S: 4}[tr];\n    }\n\n    var dateStr = Lib.formatDate(out.x, fmt, tr, ax._dateFormat, ax.calendar, ax._extraFormat);\n    var headStr;\n\n    var splitIndex = dateStr.indexOf('\\n');\n    if(splitIndex !== -1) {\n        headStr = dateStr.substr(splitIndex + 1);\n        dateStr = dateStr.substr(0, splitIndex);\n    }\n\n    if(extraPrecision) {\n        // if extraPrecision led to trailing zeros, strip them off\n        // actually, this can lead to removing even more zeros than\n        // in the original rounding, but that's fine because in these\n        // contexts uniformity is not so important (if there's even\n        // anything to be uniform with!)\n\n        // can we remove the whole time part?\n        if(dateStr === '00:00:00' || dateStr === '00:00') {\n            dateStr = headStr;\n            headStr = '';\n        } else if(dateStr.length === 8) {\n            // strip off seconds if they're zero (zero fractional seconds\n            // are already omitted)\n            // but we never remove minutes and leave just hours\n            dateStr = dateStr.replace(/:00$/, '');\n        }\n    }\n\n    if(headStr) {\n        if(hover) {\n            // hover puts it all on one line, so headPart works best up front\n            // except for year headPart: turn this into \"Jan 1, 2000\" etc.\n            if(tr === 'd') dateStr += ', ' + headStr;\n            else dateStr = headStr + (dateStr ? ', ' + dateStr : '');\n        } else if(!ax._inCalcTicks || (headStr !== ax._prevDateHead)) {\n            dateStr += '<br>' + headStr;\n            ax._prevDateHead = headStr;\n        }\n    }\n\n    out.text = dateStr;\n}\n\nfunction formatLog(ax, out, hover, extraPrecision, hideexp) {\n    var dtick = ax.dtick;\n    var x = out.x;\n    var tickformat = ax.tickformat;\n    var dtChar0 = typeof dtick === 'string' && dtick.charAt(0);\n\n    if(hideexp === 'never') {\n        // If this is a hover label, then we must *never* hide the exponent\n        // for the sake of display, which could give the wrong value by\n        // potentially many orders of magnitude. If hideexp was 'never', then\n        // it's now succeeded by preventing the other condition from automating\n        // this choice. Thus we can unset it so that the axis formatting takes\n        // precedence.\n        hideexp = '';\n    }\n\n    if(extraPrecision && (dtChar0 !== 'L')) {\n        dtick = 'L3';\n        dtChar0 = 'L';\n    }\n\n    if(tickformat || (dtChar0 === 'L')) {\n        out.text = numFormat(Math.pow(10, x), ax, hideexp, extraPrecision);\n    } else if(isNumeric(dtick) || ((dtChar0 === 'D') && (Lib.mod(x + 0.01, 1) < 0.1))) {\n        var p = Math.round(x);\n        var absP = Math.abs(p);\n        var exponentFormat = ax.exponentformat;\n        if(exponentFormat === 'power' || (isSIFormat(exponentFormat) && beyondSI(p))) {\n            if(p === 0) out.text = 1;\n            else if(p === 1) out.text = '10';\n            else out.text = '10<sup>' + (p > 1 ? '' : MINUS_SIGN) + absP + '</sup>';\n\n            out.fontSize *= 1.25;\n        } else if((exponentFormat === 'e' || exponentFormat === 'E') && absP > 2) {\n            out.text = '1' + exponentFormat + (p > 0 ? '+' : MINUS_SIGN) + absP;\n        } else {\n            out.text = numFormat(Math.pow(10, x), ax, '', 'fakehover');\n            if(dtick === 'D1' && ax._id.charAt(0) === 'y') {\n                out.dy -= out.fontSize / 6;\n            }\n        }\n    } else if(dtChar0 === 'D') {\n        out.text = String(Math.round(Math.pow(10, Lib.mod(x, 1))));\n        out.fontSize *= 0.75;\n    } else throw 'unrecognized dtick ' + String(dtick);\n\n    // if 9's are printed on log scale, move the 10's away a bit\n    if(ax.dtick === 'D1') {\n        var firstChar = String(out.text).charAt(0);\n        if(firstChar === '0' || firstChar === '1') {\n            if(ax._id.charAt(0) === 'y') {\n                out.dx -= out.fontSize / 4;\n            } else {\n                out.dy += out.fontSize / 2;\n                out.dx += (ax.range[1] > ax.range[0] ? 1 : -1) *\n                    out.fontSize * (x < 0 ? 0.5 : 0.25);\n            }\n        }\n    }\n}\n\nfunction formatCategory(ax, out) {\n    var tt = ax._categories[Math.round(out.x)];\n    if(tt === undefined) tt = '';\n    out.text = String(tt);\n}\n\nfunction formatMultiCategory(ax, out, hover) {\n    var v = Math.round(out.x);\n    var cats = ax._categories[v] || [];\n    var tt = cats[1] === undefined ? '' : String(cats[1]);\n    var tt2 = cats[0] === undefined ? '' : String(cats[0]);\n\n    if(hover) {\n        // TODO is this what we want?\n        out.text = tt2 + ' - ' + tt;\n    } else {\n        // setup for secondary labels\n        out.text = tt;\n        out.text2 = tt2;\n    }\n}\n\nfunction formatLinear(ax, out, hover, extraPrecision, hideexp) {\n    if(hideexp === 'never') {\n        // If this is a hover label, then we must *never* hide the exponent\n        // for the sake of display, which could give the wrong value by\n        // potentially many orders of magnitude. If hideexp was 'never', then\n        // it's now succeeded by preventing the other condition from automating\n        // this choice. Thus we can unset it so that the axis formatting takes\n        // precedence.\n        hideexp = '';\n    } else if(ax.showexponent === 'all' && Math.abs(out.x / ax.dtick) < 1e-6) {\n        // don't add an exponent to zero if we're showing all exponents\n        // so the only reason you'd show an exponent on zero is if it's the\n        // ONLY tick to get an exponent (first or last)\n        hideexp = 'hide';\n    }\n    out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n}\n\nfunction formatAngle(ax, out, hover, extraPrecision, hideexp) {\n    if(ax.thetaunit === 'radians' && !hover) {\n        var num = out.x / 180;\n\n        if(num === 0) {\n            out.text = '0';\n        } else {\n            var frac = num2frac(num);\n\n            if(frac[1] >= 100) {\n                out.text = numFormat(Lib.deg2rad(out.x), ax, hideexp, extraPrecision);\n            } else {\n                var isNeg = out.x < 0;\n\n                if(frac[1] === 1) {\n                    if(frac[0] === 1) out.text = 'π';\n                    else out.text = frac[0] + 'π';\n                } else {\n                    out.text = [\n                        '<sup>', frac[0], '</sup>',\n                        '⁄',\n                        '<sub>', frac[1], '</sub>',\n                        'π'\n                    ].join('');\n                }\n\n                if(isNeg) out.text = MINUS_SIGN + out.text;\n            }\n        }\n    } else {\n        out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n    }\n}\n\n// inspired by\n// https://github.com/yisibl/num2fraction/blob/master/index.js\nfunction num2frac(num) {\n    function almostEq(a, b) {\n        return Math.abs(a - b) <= 1e-6;\n    }\n\n    function findGCD(a, b) {\n        return almostEq(b, 0) ? a : findGCD(b, a % b);\n    }\n\n    function findPrecision(n) {\n        var e = 1;\n        while(!almostEq(Math.round(n * e) / e, n)) {\n            e *= 10;\n        }\n        return e;\n    }\n\n    var precision = findPrecision(num);\n    var number = num * precision;\n    var gcd = Math.abs(findGCD(number, precision));\n\n    return [\n        // numerator\n        Math.round(number / gcd),\n        // denominator\n        Math.round(precision / gcd)\n    ];\n}\n\n// format a number (tick value) according to the axis settings\n// new, more reliable procedure than d3.round or similar:\n// add half the rounding increment, then stringify and truncate\n// also automatically switch to sci. notation\nvar SIPREFIXES = ['f', 'p', 'n', 'μ', 'm', '', 'k', 'M', 'G', 'T'];\n\nfunction isSIFormat(exponentFormat) {\n    return exponentFormat === 'SI' || exponentFormat === 'B';\n}\n\n// are we beyond the range of common SI prefixes?\n// 10^-16 -> 1x10^-16\n// 10^-15 -> 1f\n// ...\n// 10^14 -> 100T\n// 10^15 -> 1x10^15\n// 10^16 -> 1x10^16\nfunction beyondSI(exponent) {\n    return exponent > 14 || exponent < -15;\n}\n\nfunction numFormat(v, ax, fmtoverride, hover) {\n    var isNeg = v < 0;\n    // max number of digits past decimal point to show\n    var tickRound = ax._tickround;\n    var exponentFormat = fmtoverride || ax.exponentformat || 'B';\n    var exponent = ax._tickexponent;\n    var tickformat = axes.getTickFormat(ax);\n    var separatethousands = ax.separatethousands;\n\n    // special case for hover: set exponent just for this value, and\n    // add a couple more digits of precision over tick labels\n    if(hover) {\n        // make a dummy axis obj to get the auto rounding and exponent\n        var ah = {\n            exponentformat: exponentFormat,\n            dtick: ax.showexponent === 'none' ? ax.dtick :\n                (isNumeric(v) ? Math.abs(v) || 1 : 1),\n            // if not showing any exponents, don't change the exponent\n            // from what we calculate\n            range: ax.showexponent === 'none' ? ax.range.map(ax.r2d) : [0, v || 1]\n        };\n        autoTickRound(ah);\n        tickRound = (Number(ah._tickround) || 0) + 4;\n        exponent = ah._tickexponent;\n        if(ax.hoverformat) tickformat = ax.hoverformat;\n    }\n\n    if(tickformat) return ax._numFormat(tickformat)(v).replace(/-/g, MINUS_SIGN);\n\n    // 'epsilon' - rounding increment\n    var e = Math.pow(10, -tickRound) / 2;\n\n    // exponentFormat codes:\n    // 'e' (1.2e+6, default)\n    // 'E' (1.2E+6)\n    // 'SI' (1.2M)\n    // 'B' (same as SI except 10^9=B not G)\n    // 'none' (1200000)\n    // 'power' (1.2x10^6)\n    // 'hide' (1.2, use 3rd argument=='hide' to eg\n    //      only show exponent on last tick)\n    if(exponentFormat === 'none') exponent = 0;\n\n    // take the sign out, put it back manually at the end\n    // - makes cases easier\n    v = Math.abs(v);\n    if(v < e) {\n        // 0 is just 0, but may get exponent if it's the last tick\n        v = '0';\n        isNeg = false;\n    } else {\n        v += e;\n        // take out a common exponent, if any\n        if(exponent) {\n            v *= Math.pow(10, -exponent);\n            tickRound += exponent;\n        }\n        // round the mantissa\n        if(tickRound === 0) v = String(Math.floor(v));\n        else if(tickRound < 0) {\n            v = String(Math.round(v));\n            v = v.substr(0, v.length + tickRound);\n            for(var i = tickRound; i < 0; i++) v += '0';\n        } else {\n            v = String(v);\n            var dp = v.indexOf('.') + 1;\n            if(dp) v = v.substr(0, dp + tickRound).replace(/\\.?0+$/, '');\n        }\n        // insert appropriate decimal point and thousands separator\n        v = Lib.numSeparate(v, ax._separators, separatethousands);\n    }\n\n    // add exponent\n    if(exponent && exponentFormat !== 'hide') {\n        if(isSIFormat(exponentFormat) && beyondSI(exponent)) exponentFormat = 'power';\n\n        var signedExponent;\n        if(exponent < 0) signedExponent = MINUS_SIGN + -exponent;\n        else if(exponentFormat !== 'power') signedExponent = '+' + exponent;\n        else signedExponent = String(exponent);\n\n        if(exponentFormat === 'e' || exponentFormat === 'E') {\n            v += exponentFormat + signedExponent;\n        } else if(exponentFormat === 'power') {\n            v += '×10<sup>' + signedExponent + '</sup>';\n        } else if(exponentFormat === 'B' && exponent === 9) {\n            v += 'B';\n        } else if(isSIFormat(exponentFormat)) {\n            v += SIPREFIXES[exponent / 3 + 5];\n        }\n    }\n\n    // put sign back in and return\n    // replace standard minus character (which is technically a hyphen)\n    // with a true minus sign\n    if(isNeg) return MINUS_SIGN + v;\n    return v;\n}\n\naxes.getTickFormat = function(ax) {\n    var i;\n\n    function convertToMs(dtick) {\n        return typeof dtick !== 'string' ? dtick : Number(dtick.replace('M', '')) * ONEAVGMONTH;\n    }\n\n    function compareLogTicks(left, right) {\n        var priority = ['L', 'D'];\n        if(typeof left === typeof right) {\n            if(typeof left === 'number') {\n                return left - right;\n            } else {\n                var leftPriority = priority.indexOf(left.charAt(0));\n                var rightPriority = priority.indexOf(right.charAt(0));\n                if(leftPriority === rightPriority) {\n                    return Number(left.replace(/(L|D)/g, '')) - Number(right.replace(/(L|D)/g, ''));\n                } else {\n                    return leftPriority - rightPriority;\n                }\n            }\n        } else {\n            return typeof left === 'number' ? 1 : -1;\n        }\n    }\n\n    function isProperStop(dtick, range, convert) {\n        var convertFn = convert || function(x) { return x;};\n        var leftDtick = range[0];\n        var rightDtick = range[1];\n        return ((!leftDtick && typeof leftDtick !== 'number') || convertFn(leftDtick) <= convertFn(dtick)) &&\n               ((!rightDtick && typeof rightDtick !== 'number') || convertFn(rightDtick) >= convertFn(dtick));\n    }\n\n    function isProperLogStop(dtick, range) {\n        var isLeftDtickNull = range[0] === null;\n        var isRightDtickNull = range[1] === null;\n        var isDtickInRangeLeft = compareLogTicks(dtick, range[0]) >= 0;\n        var isDtickInRangeRight = compareLogTicks(dtick, range[1]) <= 0;\n        return (isLeftDtickNull || isDtickInRangeLeft) && (isRightDtickNull || isDtickInRangeRight);\n    }\n\n    var tickstop, stopi;\n    if(ax.tickformatstops && ax.tickformatstops.length > 0) {\n        switch(ax.type) {\n            case 'date':\n            case 'linear': {\n                for(i = 0; i < ax.tickformatstops.length; i++) {\n                    stopi = ax.tickformatstops[i];\n                    if(stopi.enabled && isProperStop(ax.dtick, stopi.dtickrange, convertToMs)) {\n                        tickstop = stopi;\n                        break;\n                    }\n                }\n                break;\n            }\n            case 'log': {\n                for(i = 0; i < ax.tickformatstops.length; i++) {\n                    stopi = ax.tickformatstops[i];\n                    if(stopi.enabled && isProperLogStop(ax.dtick, stopi.dtickrange)) {\n                        tickstop = stopi;\n                        break;\n                    }\n                }\n                break;\n            }\n            default:\n        }\n    }\n    return tickstop ? tickstop.value : ax.tickformat;\n};\n\n// getSubplots - extract all subplot IDs we need\n// as an array of items like 'xy', 'x2y', 'x2y2'...\n// sorted by x (x,x2,x3...) then y\n// optionally restrict to only subplots containing axis object ax\n//\n// NOTE: this is currently only used OUTSIDE plotly.js (toolpanel, webapp)\n// ideally we get rid of it there (or just copy this there) and remove it here\naxes.getSubplots = function(gd, ax) {\n    var subplotObj = gd._fullLayout._subplots;\n    var allSubplots = subplotObj.cartesian.concat(subplotObj.gl2d || []);\n\n    var out = ax ? axes.findSubplotsWithAxis(allSubplots, ax) : allSubplots;\n\n    out.sort(function(a, b) {\n        var aParts = a.substr(1).split('y');\n        var bParts = b.substr(1).split('y');\n\n        if(aParts[0] === bParts[0]) return +aParts[1] - +bParts[1];\n        return +aParts[0] - +bParts[0];\n    });\n\n    return out;\n};\n\n// find all subplots with axis 'ax'\n// NOTE: this is only used in axes.getSubplots (only used outside plotly.js) and\n// gl2d/convert (where it restricts axis subplots to only those with gl2d)\naxes.findSubplotsWithAxis = function(subplots, ax) {\n    var axMatch = new RegExp(\n        (ax._id.charAt(0) === 'x') ? ('^' + ax._id + 'y') : (ax._id + '$')\n    );\n    var subplotsWithAx = [];\n\n    for(var i = 0; i < subplots.length; i++) {\n        var sp = subplots[i];\n        if(axMatch.test(sp)) subplotsWithAx.push(sp);\n    }\n\n    return subplotsWithAx;\n};\n\n// makeClipPaths: prepare clipPaths for all single axes and all possible xy pairings\naxes.makeClipPaths = function(gd) {\n    var fullLayout = gd._fullLayout;\n\n    // for more info: https://github.com/plotly/plotly.js/issues/2595\n    if(fullLayout._hasOnlyLargeSploms) return;\n\n    var fullWidth = {_offset: 0, _length: fullLayout.width, _id: ''};\n    var fullHeight = {_offset: 0, _length: fullLayout.height, _id: ''};\n    var xaList = axes.list(gd, 'x', true);\n    var yaList = axes.list(gd, 'y', true);\n    var clipList = [];\n    var i, j;\n\n    for(i = 0; i < xaList.length; i++) {\n        clipList.push({x: xaList[i], y: fullHeight});\n        for(j = 0; j < yaList.length; j++) {\n            if(i === 0) clipList.push({x: fullWidth, y: yaList[j]});\n            clipList.push({x: xaList[i], y: yaList[j]});\n        }\n    }\n\n    // selectors don't work right with camelCase tags,\n    // have to use class instead\n    // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n    var axClips = fullLayout._clips.selectAll('.axesclip')\n        .data(clipList, function(d) { return d.x._id + d.y._id; });\n\n    axClips.enter().append('clipPath')\n        .classed('axesclip', true)\n        .attr('id', function(d) { return 'clip' + fullLayout._uid + d.x._id + d.y._id; })\n      .append('rect');\n\n    axClips.exit().remove();\n\n    axClips.each(function(d) {\n        d3.select(this).select('rect').attr({\n            x: d.x._offset || 0,\n            y: d.y._offset || 0,\n            width: d.x._length || 1,\n            height: d.y._length || 1\n        });\n    });\n};\n\n/**\n * Main multi-axis drawing routine!\n *\n * @param {DOM element} gd : graph div\n * @param {string or array of strings} arg : polymorphic argument\n * @param {object} opts:\n * - @param {boolean} skipTitle : optional flag to skip axis title draw/update\n *\n * Signature 1: Axes.draw(gd, 'redraw')\n *   use this to clear and redraw all axes on graph\n *\n * Signature 2: Axes.draw(gd, '')\n *   use this to draw all axes on graph w/o the selectAll().remove()\n *   of the 'redraw' signature\n *\n * Signature 3: Axes.draw(gd, [axId, axId2, ...])\n *   where the items are axis id string,\n *   use this to update multiple axes in one call\n *\n * N.B draw updates:\n * - ax._r (stored range for use by zoom/pan)\n * - ax._rl (stored linearized range for use by zoom/pan)\n */\naxes.draw = function(gd, arg, opts) {\n    var fullLayout = gd._fullLayout;\n\n    if(arg === 'redraw') {\n        fullLayout._paper.selectAll('g.subplot').each(function(d) {\n            var id = d[0];\n            var plotinfo = fullLayout._plots[id];\n            var xa = plotinfo.xaxis;\n            var ya = plotinfo.yaxis;\n\n            plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick').remove();\n            plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick').remove();\n            plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick2').remove();\n            plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick2').remove();\n            plotinfo.xaxislayer.selectAll('.' + xa._id + 'divider').remove();\n            plotinfo.yaxislayer.selectAll('.' + ya._id + 'divider').remove();\n\n            if(plotinfo.gridlayer) plotinfo.gridlayer.selectAll('path').remove();\n            if(plotinfo.zerolinelayer) plotinfo.zerolinelayer.selectAll('path').remove();\n\n            fullLayout._infolayer.select('.g-' + xa._id + 'title').remove();\n            fullLayout._infolayer.select('.g-' + ya._id + 'title').remove();\n        });\n    }\n\n    var axList = (!arg || arg === 'redraw') ? axes.listIds(gd) : arg;\n\n    return Lib.syncOrAsync(axList.map(function(axId) {\n        return function() {\n            if(!axId) return;\n\n            var ax = axes.getFromId(gd, axId);\n            var axDone = axes.drawOne(gd, ax, opts);\n\n            ax._r = ax.range.slice();\n            ax._rl = Lib.simpleMap(ax._r, ax.r2l);\n\n            return axDone;\n        };\n    }));\n};\n\n/**\n * Draw one cartesian axis\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n * @param {object} opts\n * - @param {boolean} skipTitle (set to true to skip axis title draw call)\n *\n * Depends on:\n * - ax._mainSubplot (from linkSubplots)\n * - ax._mainAxis\n * - ax._anchorAxis\n * - ax._subplotsWith\n * - ax._counterDomainMin, ax._counterDomainMax (optionally, from linkSubplots)\n * - ax._tickAngles (on redraw only, old value relinked during supplyDefaults)\n * - ax._mainLinePosition (from lsInner)\n * - ax._mainMirrorPosition\n * - ax._linepositions\n *\n * Fills in:\n * - ax._vals:\n * - ax._gridVals:\n * - ax._selections:\n * - ax._tickAngles:\n * - ax._depth (when required only):\n * - and calls ax.setScale\n */\naxes.drawOne = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var i, sp, plotinfo;\n\n    ax.setScale();\n\n    var fullLayout = gd._fullLayout;\n    var axId = ax._id;\n    var axLetter = axId.charAt(0);\n    var counterLetter = axes.counterLetter(axId);\n    var mainPlotinfo = fullLayout._plots[ax._mainSubplot];\n\n    // this happens when updating matched group with 'missing' axes\n    if(!mainPlotinfo) return;\n\n    var mainAxLayer = mainPlotinfo[axLetter + 'axislayer'];\n    var mainLinePosition = ax._mainLinePosition;\n    var mainMirrorPosition = ax._mainMirrorPosition;\n\n    var vals = ax._vals = axes.calcTicks(ax);\n\n    // Add a couple of axis properties that should cause us to recreate\n    // elements. Used in d3 data function.\n    var axInfo = [ax.mirror, mainLinePosition, mainMirrorPosition].join('_');\n    for(i = 0; i < vals.length; i++) {\n        vals[i].axInfo = axInfo;\n    }\n\n    // stash selections to avoid DOM queries e.g.\n    // - stash tickLabels selection, so that drawTitle can use it to scoot title\n    ax._selections = {};\n    // stash tick angle (including the computed 'auto' values) per tick-label class\n    // linkup 'previous' tick angles on redraws\n    if(ax._tickAngles) ax._prevTickAngles = ax._tickAngles;\n    ax._tickAngles = {};\n    // measure [in px] between axis position and outward-most part of bounding box\n    // (touching either the tick label or ticks)\n    // depth can be expansive to compute, so we only do so when required\n    ax._depth = null;\n\n    // calcLabelLevelBbox can be expensive,\n    // so make sure to not call it twice during the same Axes.drawOne call\n    // by stashing label-level bounding boxes per tick-label class\n    var llbboxes = {};\n    function getLabelLevelBbox(suffix) {\n        var cls = axId + (suffix || 'tick');\n        if(!llbboxes[cls]) llbboxes[cls] = calcLabelLevelBbox(ax, cls);\n        return llbboxes[cls];\n    }\n\n    if(!ax.visible) return;\n\n    var transFn = axes.makeTransFn(ax);\n    var transTickLabelFn = ax.ticklabelmode === 'period' ?\n        axes.makeTransPeriodFn(ax) :\n        axes.makeTransFn(ax);\n\n    var tickVals;\n    // We remove zero lines, grid lines, and inside ticks if they're within 1px of the end\n    // The key case here is removing zero lines when the axis bound is zero\n    var valsClipped;\n\n    if(ax.tickson === 'boundaries') {\n        var boundaryVals = getBoundaryVals(ax, vals);\n        valsClipped = axes.clipEnds(ax, boundaryVals);\n        tickVals = ax.ticks === 'inside' ? valsClipped : boundaryVals;\n    } else {\n        valsClipped = axes.clipEnds(ax, vals);\n        tickVals = ax.ticks === 'inside' ? valsClipped : vals;\n    }\n\n    var gridVals = ax._gridVals = valsClipped;\n    var dividerVals = getDividerVals(ax, vals);\n\n    if(!fullLayout._hasOnlyLargeSploms) {\n        var subplotsWithAx = ax._subplotsWith;\n\n        // keep track of which subplots (by main counter axis) we've already\n        // drawn grids for, so we don't overdraw overlaying subplots\n        var finishedGrids = {};\n\n        for(i = 0; i < subplotsWithAx.length; i++) {\n            sp = subplotsWithAx[i];\n            plotinfo = fullLayout._plots[sp];\n\n            var counterAxis = plotinfo[counterLetter + 'axis'];\n            var mainCounterID = counterAxis._mainAxis._id;\n            if(finishedGrids[mainCounterID]) continue;\n            finishedGrids[mainCounterID] = 1;\n\n            var gridPath = axLetter === 'x' ?\n                'M0,' + counterAxis._offset + 'v' + counterAxis._length :\n                'M' + counterAxis._offset + ',0h' + counterAxis._length;\n\n            axes.drawGrid(gd, ax, {\n                vals: gridVals,\n                counterAxis: counterAxis,\n                layer: plotinfo.gridlayer.select('.' + axId),\n                path: gridPath,\n                transFn: transFn\n            });\n            axes.drawZeroLine(gd, ax, {\n                counterAxis: counterAxis,\n                layer: plotinfo.zerolinelayer,\n                path: gridPath,\n                transFn: transFn\n            });\n        }\n    }\n\n    var tickSigns = axes.getTickSigns(ax);\n    var tickSubplots = [];\n\n    if(ax.ticks) {\n        var mainTickPath = axes.makeTickPath(ax, mainLinePosition, tickSigns[2]);\n        var mirrorTickPath;\n        var fullTickPath;\n        if(ax._anchorAxis && ax.mirror && ax.mirror !== true) {\n            mirrorTickPath = axes.makeTickPath(ax, mainMirrorPosition, tickSigns[3]);\n            fullTickPath = mainTickPath + mirrorTickPath;\n        } else {\n            mirrorTickPath = '';\n            fullTickPath = mainTickPath;\n        }\n\n        var tickPath;\n        if(ax.showdividers && ax.ticks === 'outside' && ax.tickson === 'boundaries') {\n            var dividerLookup = {};\n            for(i = 0; i < dividerVals.length; i++) {\n                dividerLookup[dividerVals[i].x] = 1;\n            }\n            tickPath = function(d) {\n                return dividerLookup[d.x] ? mirrorTickPath : fullTickPath;\n            };\n        } else {\n            tickPath = fullTickPath;\n        }\n\n        axes.drawTicks(gd, ax, {\n            vals: tickVals,\n            layer: mainAxLayer,\n            path: tickPath,\n            transFn: transFn\n        });\n\n        if(ax.mirror === 'allticks') {\n            tickSubplots = Object.keys(ax._linepositions || {});\n        }\n    }\n\n    for(i = 0; i < tickSubplots.length; i++) {\n        sp = tickSubplots[i];\n        plotinfo = fullLayout._plots[sp];\n        // [bottom or left, top or right], free and main are handled above\n        var linepositions = ax._linepositions[sp] || [];\n        var spTickPath = axes.makeTickPath(ax, linepositions[0], tickSigns[0]) +\n            axes.makeTickPath(ax, linepositions[1], tickSigns[1]);\n\n        axes.drawTicks(gd, ax, {\n            vals: tickVals,\n            layer: plotinfo[axLetter + 'axislayer'],\n            path: spTickPath,\n            transFn: transFn\n        });\n    }\n\n    var seq = [];\n\n    // tick labels - for now just the main labels.\n    // TODO: mirror labels, esp for subplots\n\n    seq.push(function() {\n        return axes.drawLabels(gd, ax, {\n            vals: vals,\n            layer: mainAxLayer,\n            transFn: transTickLabelFn,\n            labelFns: axes.makeLabelFns(ax, mainLinePosition)\n        });\n    });\n\n    if(ax.type === 'multicategory') {\n        var pad = {x: 2, y: 10}[axLetter];\n\n        seq.push(function() {\n            var bboxKey = {x: 'height', y: 'width'}[axLetter];\n            var standoff = getLabelLevelBbox()[bboxKey] + pad +\n                (ax._tickAngles[axId + 'tick'] ? ax.tickfont.size * LINE_SPACING : 0);\n\n            return axes.drawLabels(gd, ax, {\n                vals: getSecondaryLabelVals(ax, vals),\n                layer: mainAxLayer,\n                cls: axId + 'tick2',\n                repositionOnUpdate: true,\n                secondary: true,\n                transFn: transFn,\n                labelFns: axes.makeLabelFns(ax, mainLinePosition + standoff * tickSigns[4])\n            });\n        });\n\n        seq.push(function() {\n            ax._depth = tickSigns[4] * (getLabelLevelBbox('tick2')[ax.side] - mainLinePosition);\n\n            return drawDividers(gd, ax, {\n                vals: dividerVals,\n                layer: mainAxLayer,\n                path: axes.makeTickPath(ax, mainLinePosition, tickSigns[4], ax._depth),\n                transFn: transFn\n            });\n        });\n    } else if(ax.title.hasOwnProperty('standoff')) {\n        seq.push(function() {\n            ax._depth = tickSigns[4] * (getLabelLevelBbox()[ax.side] - mainLinePosition);\n        });\n    }\n\n    var hasRangeSlider = Registry.getComponentMethod('rangeslider', 'isVisible')(ax);\n\n    seq.push(function() {\n        var s = ax.side.charAt(0);\n        var sMirror = OPPOSITE_SIDE[ax.side].charAt(0);\n        var pos = axes.getPxPosition(gd, ax);\n        var outsideTickLen = ax.ticks === 'outside' ? ax.ticklen : 0;\n        var llbbox;\n\n        var push;\n        var mirrorPush;\n        var rangeSliderPush;\n\n        if(ax.automargin || hasRangeSlider) {\n            if(ax.type === 'multicategory') {\n                llbbox = getLabelLevelBbox('tick2');\n            } else {\n                llbbox = getLabelLevelBbox();\n                if(axLetter === 'x' && s === 'b') {\n                    ax._depth = Math.max(llbbox.width > 0 ? llbbox.bottom - pos : 0, outsideTickLen);\n                }\n            }\n        }\n\n        if(ax.automargin) {\n            push = {x: 0, y: 0, r: 0, l: 0, t: 0, b: 0};\n            var domainIndices = [0, 1];\n\n            if(axLetter === 'x') {\n                if(s === 'b') {\n                    push[s] = ax._depth;\n                } else {\n                    push[s] = ax._depth = Math.max(llbbox.width > 0 ? pos - llbbox.top : 0, outsideTickLen);\n                    domainIndices.reverse();\n                }\n\n                if(llbbox.width > 0) {\n                    var rExtra = llbbox.right - (ax._offset + ax._length);\n                    if(rExtra > 0) {\n                        push.xr = 1;\n                        push.r = rExtra;\n                    }\n                    var lExtra = ax._offset - llbbox.left;\n                    if(lExtra > 0) {\n                        push.xl = 0;\n                        push.l = lExtra;\n                    }\n                }\n            } else {\n                if(s === 'l') {\n                    push[s] = ax._depth = Math.max(llbbox.height > 0 ? pos - llbbox.left : 0, outsideTickLen);\n                } else {\n                    push[s] = ax._depth = Math.max(llbbox.height > 0 ? llbbox.right - pos : 0, outsideTickLen);\n                    domainIndices.reverse();\n                }\n\n                if(llbbox.height > 0) {\n                    var bExtra = llbbox.bottom - (ax._offset + ax._length);\n                    if(bExtra > 0) {\n                        push.yb = 0;\n                        push.b = bExtra;\n                    }\n                    var tExtra = ax._offset - llbbox.top;\n                    if(tExtra > 0) {\n                        push.yt = 1;\n                        push.t = tExtra;\n                    }\n                }\n            }\n\n            push[counterLetter] = ax.anchor === 'free' ?\n                ax.position :\n                ax._anchorAxis.domain[domainIndices[0]];\n\n            if(ax.title.text !== fullLayout._dfltTitle[axLetter]) {\n                push[s] += approxTitleDepth(ax) + (ax.title.standoff || 0);\n            }\n\n            if(ax.mirror && ax.anchor !== 'free') {\n                mirrorPush = {x: 0, y: 0, r: 0, l: 0, t: 0, b: 0};\n\n                mirrorPush[sMirror] = ax.linewidth;\n                if(ax.mirror && ax.mirror !== true) mirrorPush[sMirror] += outsideTickLen;\n\n                if(ax.mirror === true || ax.mirror === 'ticks') {\n                    mirrorPush[counterLetter] = ax._anchorAxis.domain[domainIndices[1]];\n                } else if(ax.mirror === 'all' || ax.mirror === 'allticks') {\n                    mirrorPush[counterLetter] = [ax._counterDomainMin, ax._counterDomainMax][domainIndices[1]];\n                }\n            }\n        }\n\n        if(hasRangeSlider) {\n            rangeSliderPush = Registry.getComponentMethod('rangeslider', 'autoMarginOpts')(gd, ax);\n        }\n\n        Plots.autoMargin(gd, axAutoMarginID(ax), push);\n        Plots.autoMargin(gd, axMirrorAutoMarginID(ax), mirrorPush);\n        Plots.autoMargin(gd, rangeSliderAutoMarginID(ax), rangeSliderPush);\n    });\n\n    if(!opts.skipTitle &&\n        !(hasRangeSlider && ax.side === 'bottom')\n    ) {\n        seq.push(function() { return drawTitle(gd, ax); });\n    }\n\n    return Lib.syncOrAsync(seq);\n};\n\nfunction getBoundaryVals(ax, vals) {\n    var out = [];\n    var i;\n\n    // boundaryVals are never used for labels;\n    // no need to worry about the other tickTextObj keys\n    var _push = function(d, bndIndex) {\n        var xb = d.xbnd[bndIndex];\n        if(xb !== null) {\n            out.push(Lib.extendFlat({}, d, {x: xb}));\n        }\n    };\n\n    if(vals.length) {\n        for(i = 0; i < vals.length; i++) {\n            _push(vals[i], 0);\n        }\n        _push(vals[i - 1], 1);\n    }\n\n    return out;\n}\n\nfunction getSecondaryLabelVals(ax, vals) {\n    var out = [];\n    var lookup = {};\n\n    for(var i = 0; i < vals.length; i++) {\n        var d = vals[i];\n        if(lookup[d.text2]) {\n            lookup[d.text2].push(d.x);\n        } else {\n            lookup[d.text2] = [d.x];\n        }\n    }\n\n    for(var k in lookup) {\n        out.push(tickTextObj(ax, Lib.interp(lookup[k], 0.5), k));\n    }\n\n    return out;\n}\n\nfunction getDividerVals(ax, vals) {\n    var out = [];\n    var i, current;\n\n    var reversed = (vals.length && vals[vals.length - 1].x < vals[0].x);\n\n    // never used for labels;\n    // no need to worry about the other tickTextObj keys\n    var _push = function(d, bndIndex) {\n        var xb = d.xbnd[bndIndex];\n        if(xb !== null) {\n            out.push(Lib.extendFlat({}, d, {x: xb}));\n        }\n    };\n\n    if(ax.showdividers && vals.length) {\n        for(i = 0; i < vals.length; i++) {\n            var d = vals[i];\n            if(d.text2 !== current) {\n                _push(d, reversed ? 1 : 0);\n            }\n            current = d.text2;\n        }\n        _push(vals[i - 1], reversed ? 0 : 1);\n    }\n\n    return out;\n}\n\nfunction calcLabelLevelBbox(ax, cls) {\n    var top, bottom;\n    var left, right;\n\n    if(ax._selections[cls].size()) {\n        top = Infinity;\n        bottom = -Infinity;\n        left = Infinity;\n        right = -Infinity;\n        ax._selections[cls].each(function() {\n            var thisLabel = selectTickLabel(this);\n            // Use parent node <g.(x|y)tick>, to make Drawing.bBox\n            // retrieve a bbox computed with transform info\n            //\n            // To improve perf, it would be nice to use `thisLabel.node()`\n            // (like in fixLabelOverlaps) instead and use Axes.getPxPosition\n            // together with the makeLabelFns outputs and `tickangle`\n            // to compute one bbox per (tick value x tick style)\n            var bb = Drawing.bBox(thisLabel.node().parentNode);\n            top = Math.min(top, bb.top);\n            bottom = Math.max(bottom, bb.bottom);\n            left = Math.min(left, bb.left);\n            right = Math.max(right, bb.right);\n        });\n    } else {\n        top = 0;\n        bottom = 0;\n        left = 0;\n        right = 0;\n    }\n\n    return {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right,\n        height: bottom - top,\n        width: right - left\n    };\n}\n\n/**\n * Which direction do the 'ax.side' values, and free ticks go?\n *\n * @param {object} ax (full) axis object\n *  - {string} _id (starting with 'x' or 'y')\n *  - {string} side\n *  - {string} ticks\n * @return {array} all entries are either -1 or 1\n *  - [0]: sign for top/right ticks (i.e. negative SVG direction)\n *  - [1]: sign for bottom/left ticks (i.e. positive SVG direction)\n *  - [2]: sign for ticks corresponding to 'ax.side'\n *  - [3]: sign for ticks mirroring 'ax.side'\n *  - [4]: sign of arrow starting at axis pointing towards margin\n */\naxes.getTickSigns = function(ax) {\n    var axLetter = ax._id.charAt(0);\n    var sideOpposite = {x: 'top', y: 'right'}[axLetter];\n    var main = ax.side === sideOpposite ? 1 : -1;\n    var out = [-1, 1, main, -main];\n    // then we flip if outside XOR y axis\n    if((ax.ticks !== 'inside') === (axLetter === 'x')) {\n        out = out.map(function(v) { return -v; });\n    }\n    // independent of `ticks`; do not flip this one\n    if(ax.side) {\n        out.push({l: -1, t: -1, r: 1, b: 1}[ax.side.charAt(0)]);\n    }\n    return out;\n};\n\n/**\n * Make axis translate transform function\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} _offset\n *  - {fn} l2p\n * @return {fn} function of calcTicks items\n */\naxes.makeTransFn = function(ax) {\n    var axLetter = ax._id.charAt(0);\n    var offset = ax._offset;\n    return axLetter === 'x' ?\n        function(d) { return 'translate(' + (offset + ax.l2p(d.x)) + ',0)'; } :\n        function(d) { return 'translate(0,' + (offset + ax.l2p(d.x)) + ')'; };\n};\n\naxes.makeTransPeriodFn = function(ax) {\n    var axLetter = ax._id.charAt(0);\n    var offset = ax._offset;\n    return axLetter === 'x' ?\n        function(d) { return 'translate(' + (offset + ax.l2p(d.periodX)) + ',0)'; } :\n        function(d) { return 'translate(0,' + (offset + ax.l2p(d.periodX)) + ')'; };\n};\n\n/**\n * Make axis tick path string\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} ticklen\n *  - {number} linewidth\n * @param {number} shift along direction of ticklen\n * @param {1 or -1} sgn tick sign\n * @param {number (optional)} len tick length\n * @return {string}\n */\naxes.makeTickPath = function(ax, shift, sgn, len) {\n    len = len !== undefined ? len : ax.ticklen;\n\n    var axLetter = ax._id.charAt(0);\n    var pad = (ax.linewidth || 1) / 2;\n\n    return axLetter === 'x' ?\n        'M0,' + (shift + pad * sgn) + 'v' + (len * sgn) :\n        'M' + (shift + pad * sgn) + ',0h' + (len * sgn);\n};\n\n/**\n * Make axis tick label x, y and anchor functions\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} ticklen\n *  - {string} side\n *  - {number} linewidth\n *  - {number} tickfont.size\n *  - {boolean} showline\n * @param {number} shift\n * @param {number} angle [in degrees] ...\n * @return {object}\n *  - {fn} xFn\n *  - {fn} yFn\n *  - {fn} anchorFn\n *  - {fn} heightFn\n *  - {number} labelStandoff (gap parallel to ticks)\n *  - {number} labelShift (gap perpendicular to ticks)\n */\naxes.makeLabelFns = function(ax, shift, angle) {\n    var axLetter = ax._id.charAt(0);\n    var ticksOnOutsideLabels = ax.tickson !== 'boundaries' && ax.ticks === 'outside';\n\n    var labelStandoff = 0;\n    var labelShift = 0;\n\n    if(ticksOnOutsideLabels) {\n        labelStandoff += ax.ticklen;\n    }\n    if(angle && ax.ticks === 'outside') {\n        var rad = Lib.deg2rad(angle);\n        labelStandoff = ax.ticklen * Math.cos(rad) + 1;\n        labelShift = ax.ticklen * Math.sin(rad);\n    }\n    if(ax.showticklabels && (ticksOnOutsideLabels || ax.showline)) {\n        labelStandoff += 0.2 * ax.tickfont.size;\n    }\n    labelStandoff += (ax.linewidth || 1) / 2;\n\n    var out = {\n        labelStandoff: labelStandoff,\n        labelShift: labelShift\n    };\n\n    var x0, y0, ff, flipIt;\n\n    if(axLetter === 'x') {\n        flipIt = ax.side === 'bottom' ? 1 : -1;\n        x0 = labelShift * flipIt;\n        y0 = shift + labelStandoff * flipIt;\n        ff = ax.side === 'bottom' ? 1 : -0.2;\n\n        out.xFn = function(d) { return d.dx + x0; };\n        out.yFn = function(d) { return d.dy + y0 + d.fontSize * ff; };\n        out.anchorFn = function(d, a) {\n            if(!isNumeric(a) || a === 0 || a === 180) {\n                return 'middle';\n            }\n            return (a * flipIt < 0) ? 'end' : 'start';\n        };\n        out.heightFn = function(d, a, h) {\n            return (a < -60 || a > 60) ? -0.5 * h :\n                ax.side === 'top' ? -h :\n                0;\n        };\n    } else if(axLetter === 'y') {\n        flipIt = ax.side === 'right' ? 1 : -1;\n        x0 = labelStandoff;\n        y0 = -labelShift * flipIt;\n        ff = Math.abs(ax.tickangle) === 90 ? 0.5 : 0;\n\n        out.xFn = function(d) { return d.dx + shift + (x0 + d.fontSize * ff) * flipIt; };\n        out.yFn = function(d) { return d.dy + y0 + d.fontSize * MID_SHIFT; };\n        out.anchorFn = function(d, a) {\n            if(isNumeric(a) && Math.abs(a) === 90) {\n                return 'middle';\n            }\n            return ax.side === 'right' ? 'start' : 'end';\n        };\n        out.heightFn = function(d, a, h) {\n            a *= ax.side === 'left' ? 1 : -1;\n            return a < -30 ? -h :\n                a < 30 ? -0.5 * h :\n                0;\n        };\n    }\n\n    return out;\n};\n\nfunction tickDataFn(d) {\n    return [d.text, d.x, d.axInfo, d.font, d.fontSize, d.fontColor].join('_');\n}\n\n/**\n * Draw axis ticks\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} linewidth\n *  - {string} tickcolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\naxes.drawTicks = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var cls = ax._id + 'tick';\n\n    var vals = opts.vals;\n    if(\n        ax.ticklabelmode === 'period'\n    ) {\n        // drop very first tick that we added to handle period\n        vals = vals.slice();\n        vals.shift();\n    }\n\n    var ticks = opts.layer.selectAll('path.' + cls)\n        .data(ax.ticks ? vals : [], tickDataFn);\n\n    ticks.exit().remove();\n\n    ticks.enter().append('path')\n        .classed(cls, 1)\n        .classed('ticks', 1)\n        .classed('crisp', opts.crisp !== false)\n        .call(Color.stroke, ax.tickcolor)\n        .style('stroke-width', Drawing.crispRound(gd, ax.tickwidth, 1) + 'px')\n        .attr('d', opts.path);\n\n    ticks.attr('transform', opts.transFn);\n};\n\n/**\n * Draw axis grid\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showgrid\n *  - {string} gridcolor\n *  - {string} gridwidth\n *  - {boolean} zeroline\n *  - {string} type\n *  - {string} dtick\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n *     optional - only required if this axis supports zero lines\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\naxes.drawGrid = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var cls = ax._id + 'grid';\n    var vals = opts.vals;\n    var counterAx = opts.counterAxis;\n    if(ax.showgrid === false) {\n        vals = [];\n    } else if(counterAx && axes.shouldShowZeroLine(gd, ax, counterAx)) {\n        var isArrayMode = ax.tickmode === 'array';\n        for(var i = 0; i < vals.length; i++) {\n            var xi = vals[i].x;\n            if(isArrayMode ? !xi : (Math.abs(xi) < ax.dtick / 100)) {\n                vals = vals.slice(0, i).concat(vals.slice(i + 1));\n                // In array mode you can in principle have multiple\n                // ticks at 0, so test them all. Otherwise once we found\n                // one we can stop.\n                if(isArrayMode) i--;\n                else break;\n            }\n        }\n    }\n\n    var grid = opts.layer.selectAll('path.' + cls)\n        .data(vals, tickDataFn);\n\n    grid.exit().remove();\n\n    grid.enter().append('path')\n        .classed(cls, 1)\n        .classed('crisp', opts.crisp !== false);\n\n    ax._gw = Drawing.crispRound(gd, ax.gridwidth, 1);\n\n    grid.attr('transform', opts.transFn)\n        .attr('d', opts.path)\n        .call(Color.stroke, ax.gridcolor || '#ddd')\n        .style('stroke-width', ax._gw + 'px');\n\n    if(typeof opts.path === 'function') grid.attr('d', opts.path);\n};\n\n/**\n * Draw axis zero-line\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} zeroline\n *  - {number} zerolinewidth\n *  - {string} zerolinecolor\n *  - {number (optional)} _gridWidthCrispRound\n * @param {object} opts\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\naxes.drawZeroLine = function(gd, ax, opts) {\n    opts = opts || opts;\n\n    var cls = ax._id + 'zl';\n    var show = axes.shouldShowZeroLine(gd, ax, opts.counterAxis);\n\n    var zl = opts.layer.selectAll('path.' + cls)\n        .data(show ? [{x: 0, id: ax._id}] : []);\n\n    zl.exit().remove();\n\n    zl.enter().append('path')\n        .classed(cls, 1)\n        .classed('zl', 1)\n        .classed('crisp', opts.crisp !== false)\n        .each(function() {\n            // use the fact that only one element can enter to trigger a sort.\n            // If several zerolines enter at the same time we will sort once per,\n            // but generally this should be a minimal overhead.\n            opts.layer.selectAll('path').sort(function(da, db) {\n                return axisIds.idSort(da.id, db.id);\n            });\n        });\n\n    zl.attr('transform', opts.transFn)\n        .attr('d', opts.path)\n        .call(Color.stroke, ax.zerolinecolor || Color.defaultLine)\n        .style('stroke-width', Drawing.crispRound(gd, ax.zerolinewidth, ax._gw || 1) + 'px');\n};\n\n/**\n * Draw axis tick labels\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showticklabels\n *  - {number} tickangle\n *  - {object (optional)} _selections\n *  - {object} (optional)} _tickAngles\n *  - {object} (optional)} _prevTickAngles\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string (optional)} cls (node className)\n * - {boolean} repositionOnUpdate (set to true to reposition update selection)\n * - {boolean} secondary\n * - {fn} transFn\n * - {object} labelFns\n *  + {fn} xFn\n *  + {fn} yFn\n *  + {fn} anchorFn\n *  + {fn} heightFn\n */\naxes.drawLabels = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var fullLayout = gd._fullLayout;\n    var axId = ax._id;\n    var axLetter = axId.charAt(0);\n    var cls = opts.cls || axId + 'tick';\n    var vals = opts.vals;\n\n    var labelFns = opts.labelFns;\n    var tickAngle = opts.secondary ? 0 : ax.tickangle;\n    var prevAngle = (ax._prevTickAngles || {})[cls];\n\n    var tickLabels = opts.layer.selectAll('g.' + cls)\n        .data(ax.showticklabels ? vals : [], tickDataFn);\n\n    var labelsReady = [];\n\n    tickLabels.enter().append('g')\n        .classed(cls, 1)\n        .append('text')\n            // only so tex has predictable alignment that we can\n            // alter later\n            .attr('text-anchor', 'middle')\n            .each(function(d) {\n                var thisLabel = d3.select(this);\n                var newPromise = gd._promises.length;\n\n                thisLabel\n                    .call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d))\n                    .call(Drawing.font, d.font, d.fontSize, d.fontColor)\n                    .text(d.text)\n                    .call(svgTextUtils.convertToTspans, gd);\n\n                if(gd._promises[newPromise]) {\n                    // if we have an async label, we'll deal with that\n                    // all here so take it out of gd._promises and\n                    // instead position the label and promise this in\n                    // labelsReady\n                    labelsReady.push(gd._promises.pop().then(function() {\n                        positionLabels(thisLabel, tickAngle);\n                    }));\n                } else {\n                    // sync label: just position it now.\n                    positionLabels(thisLabel, tickAngle);\n                }\n            });\n\n    tickLabels.exit().remove();\n\n    if(opts.repositionOnUpdate) {\n        tickLabels.each(function(d) {\n            d3.select(this).select('text')\n                .call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d));\n        });\n    }\n\n    function positionLabels(s, angle) {\n        s.each(function(d) {\n            var thisLabel = d3.select(this);\n            var mathjaxGroup = thisLabel.select('.text-math-group');\n            var anchor = labelFns.anchorFn(d, angle);\n\n            var transform = opts.transFn.call(thisLabel.node(), d) +\n                ((isNumeric(angle) && +angle !== 0) ?\n                (' rotate(' + angle + ',' + labelFns.xFn(d) + ',' +\n                    (labelFns.yFn(d) - d.fontSize / 2) + ')') :\n                '');\n\n            // how much to shift a multi-line label to center it vertically.\n            var nLines = svgTextUtils.lineCount(thisLabel);\n            var lineHeight = LINE_SPACING * d.fontSize;\n            var anchorHeight = labelFns.heightFn(d, isNumeric(angle) ? +angle : 0, (nLines - 1) * lineHeight);\n\n            if(anchorHeight) {\n                transform += ' translate(0, ' + anchorHeight + ')';\n            }\n\n            if(mathjaxGroup.empty()) {\n                thisLabel.select('text').attr({\n                    transform: transform,\n                    'text-anchor': anchor\n                });\n            } else {\n                var mjWidth = Drawing.bBox(mathjaxGroup.node()).width;\n                var mjShift = mjWidth * {end: -0.5, start: 0.5}[anchor];\n                mathjaxGroup.attr('transform', transform + (mjShift ? 'translate(' + mjShift + ',0)' : ''));\n            }\n        });\n    }\n\n    // make sure all labels are correctly positioned at their base angle\n    // the positionLabels call above is only for newly drawn labels.\n    // do this without waiting, using the last calculated angle to\n    // minimize flicker, then do it again when we know all labels are\n    // there, putting back the prescribed angle to check for overlaps.\n    positionLabels(tickLabels, (prevAngle + 1) ? prevAngle : tickAngle);\n\n    function allLabelsReady() {\n        return labelsReady.length && Promise.all(labelsReady);\n    }\n\n    var autoangle = null;\n\n    function fixLabelOverlaps() {\n        positionLabels(tickLabels, tickAngle);\n\n        // check for auto-angling if x labels overlap\n        // don't auto-angle at all for log axes with\n        // base and digit format\n        if(vals.length && axLetter === 'x' && !isNumeric(tickAngle) &&\n            (ax.type !== 'log' || String(ax.dtick).charAt(0) !== 'D')\n        ) {\n            autoangle = 0;\n\n            var maxFontSize = 0;\n            var lbbArray = [];\n            var i;\n\n            tickLabels.each(function(d) {\n                maxFontSize = Math.max(maxFontSize, d.fontSize);\n\n                var x = ax.l2p(d.x);\n                var thisLabel = selectTickLabel(this);\n                var bb = Drawing.bBox(thisLabel.node());\n\n                lbbArray.push({\n                    // ignore about y, just deal with x overlaps\n                    top: 0,\n                    bottom: 10,\n                    height: 10,\n                    left: x - bb.width / 2,\n                    // impose a 2px gap\n                    right: x + bb.width / 2 + 2,\n                    width: bb.width + 2\n                });\n            });\n\n            if((ax.tickson === 'boundaries' || ax.showdividers) && !opts.secondary) {\n                var gap = 2;\n                if(ax.ticks) gap += ax.tickwidth / 2;\n\n                // TODO should secondary labels also fall into this fix-overlap regime?\n\n                for(i = 0; i < lbbArray.length; i++) {\n                    var xbnd = vals[i].xbnd;\n                    var lbb = lbbArray[i];\n                    if(\n                        (xbnd[0] !== null && (lbb.left - ax.l2p(xbnd[0])) < gap) ||\n                        (xbnd[1] !== null && (ax.l2p(xbnd[1]) - lbb.right) < gap)\n                    ) {\n                        autoangle = 90;\n                        break;\n                    }\n                }\n            } else {\n                var vLen = vals.length;\n                var tickSpacing = Math.abs((vals[vLen - 1].x - vals[0].x) * ax._m) / (vLen - 1);\n                var rotate90 = (tickSpacing < maxFontSize * 2.5) || ax.type === 'multicategory';\n\n                // any overlap at all - set 30 degrees or 90 degrees\n                for(i = 0; i < lbbArray.length - 1; i++) {\n                    if(Lib.bBoxIntersect(lbbArray[i], lbbArray[i + 1])) {\n                        autoangle = rotate90 ? 90 : 30;\n                        break;\n                    }\n                }\n            }\n\n            if(autoangle) {\n                positionLabels(tickLabels, autoangle);\n            }\n        }\n    }\n\n    if(ax._selections) {\n        ax._selections[cls] = tickLabels;\n    }\n\n    var seq = [allLabelsReady];\n\n    // N.B. during auto-margin redraws, if the axis fixed its label overlaps\n    // by rotating 90 degrees, do not attempt to re-fix its label overlaps\n    // as this can lead to infinite redraw loops!\n    if(ax.automargin && fullLayout._redrawFromAutoMarginCount && prevAngle === 90) {\n        autoangle = 90;\n        seq.push(function() {\n            positionLabels(tickLabels, prevAngle);\n        });\n    } else {\n        seq.push(fixLabelOverlaps);\n    }\n\n    // save current tick angle for future redraws\n    if(ax._tickAngles) {\n        seq.push(function() {\n            ax._tickAngles[cls] = autoangle === null ?\n                (isNumeric(tickAngle) ? tickAngle : 0) :\n                autoangle;\n        });\n    }\n\n    var done = Lib.syncOrAsync(seq);\n    if(done && done.then) gd._promises.push(done);\n    return done;\n};\n\n/**\n * Draw axis dividers\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} showdividers\n *  - {number} dividerwidth\n *  - {string} dividercolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {fn} path\n * - {fn} transFn\n */\nfunction drawDividers(gd, ax, opts) {\n    var cls = ax._id + 'divider';\n    var vals = opts.vals;\n\n    var dividers = opts.layer.selectAll('path.' + cls)\n        .data(vals, tickDataFn);\n\n    dividers.exit().remove();\n\n    dividers.enter().insert('path', ':first-child')\n        .classed(cls, 1)\n        .classed('crisp', 1)\n        .call(Color.stroke, ax.dividercolor)\n        .style('stroke-width', Drawing.crispRound(gd, ax.dividerwidth, 1) + 'px');\n\n    dividers\n        .attr('transform', opts.transFn)\n        .attr('d', opts.path);\n}\n\n/**\n * Get axis position in px, that is the distance for the graph's\n * top (left) edge for x (y) axes.\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} side\n *  if anchored:\n *  - {object} _anchorAxis\n *  Otherwise:\n *  - {number} position\n * @return {number}\n */\naxes.getPxPosition = function(gd, ax) {\n    var gs = gd._fullLayout._size;\n    var axLetter = ax._id.charAt(0);\n    var side = ax.side;\n    var anchorAxis;\n\n    if(ax.anchor !== 'free') {\n        anchorAxis = ax._anchorAxis;\n    } else if(axLetter === 'x') {\n        anchorAxis = {\n            _offset: gs.t + (1 - (ax.position || 0)) * gs.h,\n            _length: 0\n        };\n    } else if(axLetter === 'y') {\n        anchorAxis = {\n            _offset: gs.l + (ax.position || 0) * gs.w,\n            _length: 0\n        };\n    }\n\n    if(side === 'top' || side === 'left') {\n        return anchorAxis._offset;\n    } else if(side === 'bottom' || side === 'right') {\n        return anchorAxis._offset + anchorAxis._length;\n    }\n};\n\n/**\n * Approximate axis title depth (w/o computing its bounding box)\n *\n * @param {object} ax (full) axis object\n *  - {string} title.text\n *  - {number} title.font.size\n *  - {number} title.standoff\n * @return {number} (in px)\n */\nfunction approxTitleDepth(ax) {\n    var fontSize = ax.title.font.size;\n    var extraLines = (ax.title.text.match(svgTextUtils.BR_TAG_ALL) || []).length;\n    if(ax.title.hasOwnProperty('standoff')) {\n        return extraLines ?\n            fontSize * (CAP_SHIFT + (extraLines * LINE_SPACING)) :\n            fontSize * CAP_SHIFT;\n    } else {\n        return extraLines ?\n            fontSize * (extraLines + 1) * LINE_SPACING :\n            fontSize;\n    }\n}\n\n/**\n * Draw axis title, compute default standoff if necessary\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} _name\n *  - {string} side\n *  - {number} title.font.size\n *  - {object} _selections\n *\n *  - {number} _depth\n *  - {number} title.standoff\n *  OR\n *  - {number} linewidth\n *  - {boolean} showticklabels\n */\nfunction drawTitle(gd, ax) {\n    var fullLayout = gd._fullLayout;\n    var axId = ax._id;\n    var axLetter = axId.charAt(0);\n    var fontSize = ax.title.font.size;\n\n    var titleStandoff;\n\n    if(ax.title.hasOwnProperty('standoff')) {\n        titleStandoff = ax._depth + ax.title.standoff + approxTitleDepth(ax);\n    } else {\n        if(ax.type === 'multicategory') {\n            titleStandoff = ax._depth;\n        } else {\n            var offsetBase = 1.5;\n            titleStandoff = 10 + fontSize * offsetBase + (ax.linewidth ? ax.linewidth - 1 : 0);\n        }\n\n        if(axLetter === 'x') {\n            titleStandoff += ax.side === 'top' ?\n                fontSize * (ax.showticklabels ? 1 : 0) :\n                fontSize * (ax.showticklabels ? 1.5 : 0.5);\n        } else {\n            titleStandoff += ax.side === 'right' ?\n                fontSize * (ax.showticklabels ? 1 : 0.5) :\n                fontSize * (ax.showticklabels ? 0.5 : 0);\n        }\n    }\n\n    var pos = axes.getPxPosition(gd, ax);\n    var transform, x, y;\n\n    if(axLetter === 'x') {\n        x = ax._offset + ax._length / 2;\n        y = (ax.side === 'top') ? pos - titleStandoff : pos + titleStandoff;\n    } else {\n        y = ax._offset + ax._length / 2;\n        x = (ax.side === 'right') ? pos + titleStandoff : pos - titleStandoff;\n        transform = {rotate: '-90', offset: 0};\n    }\n\n    var avoid;\n\n    if(ax.type !== 'multicategory') {\n        var tickLabels = ax._selections[ax._id + 'tick'];\n\n        avoid = {\n            selection: tickLabels,\n            side: ax.side\n        };\n\n        if(tickLabels && tickLabels.node() && tickLabels.node().parentNode) {\n            var translation = Drawing.getTranslate(tickLabels.node().parentNode);\n            avoid.offsetLeft = translation.x;\n            avoid.offsetTop = translation.y;\n        }\n\n        if(ax.title.hasOwnProperty('standoff')) {\n            avoid.pad = 0;\n        }\n    }\n\n    return Titles.draw(gd, axId + 'title', {\n        propContainer: ax,\n        propName: ax._name + '.title.text',\n        placeholder: fullLayout._dfltTitle[axLetter],\n        avoid: avoid,\n        transform: transform,\n        attributes: {x: x, y: y, 'text-anchor': 'middle'}\n    });\n}\n\naxes.shouldShowZeroLine = function(gd, ax, counterAxis) {\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n    return (\n        (rng[0] * rng[1] <= 0) &&\n        ax.zeroline &&\n        (ax.type === 'linear' || ax.type === '-') &&\n        !(ax.rangebreaks && ax.maskBreaks(0) === BADNUM) &&\n        (\n            clipEnds(ax, 0) ||\n            !anyCounterAxLineAtZero(gd, ax, counterAxis, rng) ||\n            hasBarsOrFill(gd, ax)\n        )\n    );\n};\n\naxes.clipEnds = function(ax, vals) {\n    return vals.filter(function(d) { return clipEnds(ax, d.x); });\n};\n\nfunction clipEnds(ax, l) {\n    var p = ax.l2p(l);\n    return (p > 1 && p < ax._length - 1);\n}\n\nfunction anyCounterAxLineAtZero(gd, ax, counterAxis, rng) {\n    var mainCounterAxis = counterAxis._mainAxis;\n    if(!mainCounterAxis) return;\n\n    var fullLayout = gd._fullLayout;\n    var axLetter = ax._id.charAt(0);\n    var counterLetter = axes.counterLetter(ax._id);\n\n    var zeroPosition = ax._offset + (\n        ((Math.abs(rng[0]) < Math.abs(rng[1])) === (axLetter === 'x')) ?\n        0 : ax._length\n    );\n\n    function lineNearZero(ax2) {\n        if(!ax2.showline || !ax2.linewidth) return false;\n        var tolerance = Math.max((ax2.linewidth + ax.zerolinewidth) / 2, 1);\n\n        function closeEnough(pos2) {\n            return typeof pos2 === 'number' && Math.abs(pos2 - zeroPosition) < tolerance;\n        }\n\n        if(closeEnough(ax2._mainLinePosition) || closeEnough(ax2._mainMirrorPosition)) {\n            return true;\n        }\n        var linePositions = ax2._linepositions || {};\n        for(var k in linePositions) {\n            if(closeEnough(linePositions[k][0]) || closeEnough(linePositions[k][1])) {\n                return true;\n            }\n        }\n    }\n\n    var plotinfo = fullLayout._plots[counterAxis._mainSubplot];\n    if(!(plotinfo.mainplotinfo || plotinfo).overlays.length) {\n        return lineNearZero(counterAxis, zeroPosition);\n    }\n\n    var counterLetterAxes = axes.list(gd, counterLetter);\n    for(var i = 0; i < counterLetterAxes.length; i++) {\n        var counterAxis2 = counterLetterAxes[i];\n        if(\n            counterAxis2._mainAxis === mainCounterAxis &&\n            lineNearZero(counterAxis2, zeroPosition)\n        ) {\n            return true;\n        }\n    }\n}\n\nfunction hasBarsOrFill(gd, ax) {\n    var fullData = gd._fullData;\n    var subplot = ax._mainSubplot;\n    var axLetter = ax._id.charAt(0);\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n\n        if(trace.visible === true && (trace.xaxis + trace.yaxis) === subplot) {\n            if(\n                Registry.traceIs(trace, 'bar-like') &&\n                trace.orientation === {x: 'h', y: 'v'}[axLetter]\n            ) return true;\n\n            if(\n                trace.fill &&\n                trace.fill.charAt(trace.fill.length - 1) === axLetter\n            ) return true;\n        }\n    }\n    return false;\n}\n\nfunction selectTickLabel(gTick) {\n    var s = d3.select(gTick);\n    var mj = s.select('.text-math-group');\n    return mj.empty() ? s.select('text') : mj;\n}\n\n/**\n * Find all margin pushers for 2D axes and reserve them for later use\n * Both label and rangeslider automargin calculations happen later so\n * we need to explicitly allow their ids in order to not delete them.\n *\n * TODO: can we pull the actual automargin calls forward to avoid this hack?\n * We're probably also doing multiple redraws in this case, would be faster\n * if we can just do the whole calculation ahead of time and draw once.\n */\naxes.allowAutoMargin = function(gd) {\n    var axList = axes.list(gd, '', true);\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n        if(ax.automargin) {\n            Plots.allowAutoMargin(gd, axAutoMarginID(ax));\n            if(ax.mirror) {\n                Plots.allowAutoMargin(gd, axMirrorAutoMarginID(ax));\n            }\n        }\n        if(Registry.getComponentMethod('rangeslider', 'isVisible')(ax)) {\n            Plots.allowAutoMargin(gd, rangeSliderAutoMarginID(ax));\n        }\n    }\n};\n\nfunction axAutoMarginID(ax) { return ax._id + '.automargin'; }\nfunction axMirrorAutoMarginID(ax) { return axAutoMarginID(ax) + '.mirror'; }\nfunction rangeSliderAutoMarginID(ax) { return ax._id + '.rangeslider'; }\n\n// swap all the presentation attributes of the axes showing these traces\naxes.swap = function(gd, traces) {\n    var axGroups = makeAxisGroups(gd, traces);\n\n    for(var i = 0; i < axGroups.length; i++) {\n        swapAxisGroup(gd, axGroups[i].x, axGroups[i].y);\n    }\n};\n\nfunction makeAxisGroups(gd, traces) {\n    var groups = [];\n    var i, j;\n\n    for(i = 0; i < traces.length; i++) {\n        var groupsi = [];\n        var xi = gd._fullData[traces[i]].xaxis;\n        var yi = gd._fullData[traces[i]].yaxis;\n        if(!xi || !yi) continue; // not a 2D cartesian trace?\n\n        for(j = 0; j < groups.length; j++) {\n            if(groups[j].x.indexOf(xi) !== -1 || groups[j].y.indexOf(yi) !== -1) {\n                groupsi.push(j);\n            }\n        }\n\n        if(!groupsi.length) {\n            groups.push({x: [xi], y: [yi]});\n            continue;\n        }\n\n        var group0 = groups[groupsi[0]];\n        var groupj;\n\n        if(groupsi.length > 1) {\n            for(j = 1; j < groupsi.length; j++) {\n                groupj = groups[groupsi[j]];\n                mergeAxisGroups(group0.x, groupj.x);\n                mergeAxisGroups(group0.y, groupj.y);\n            }\n        }\n        mergeAxisGroups(group0.x, [xi]);\n        mergeAxisGroups(group0.y, [yi]);\n    }\n\n    return groups;\n}\n\nfunction mergeAxisGroups(intoSet, fromSet) {\n    for(var i = 0; i < fromSet.length; i++) {\n        if(intoSet.indexOf(fromSet[i]) === -1) intoSet.push(fromSet[i]);\n    }\n}\n\nfunction swapAxisGroup(gd, xIds, yIds) {\n    var xFullAxes = [];\n    var yFullAxes = [];\n    var layout = gd.layout;\n    var i, j;\n\n    for(i = 0; i < xIds.length; i++) xFullAxes.push(axes.getFromId(gd, xIds[i]));\n    for(i = 0; i < yIds.length; i++) yFullAxes.push(axes.getFromId(gd, yIds[i]));\n\n    var allAxKeys = Object.keys(axAttrs);\n\n    var noSwapAttrs = [\n        'anchor', 'domain', 'overlaying', 'position', 'side', 'tickangle', 'editType'\n    ];\n    var numericTypes = ['linear', 'log'];\n\n    for(i = 0; i < allAxKeys.length; i++) {\n        var keyi = allAxKeys[i];\n        var xVal = xFullAxes[0][keyi];\n        var yVal = yFullAxes[0][keyi];\n        var allEqual = true;\n        var coerceLinearX = false;\n        var coerceLinearY = false;\n        if(keyi.charAt(0) === '_' || typeof xVal === 'function' ||\n                noSwapAttrs.indexOf(keyi) !== -1) {\n            continue;\n        }\n        for(j = 1; j < xFullAxes.length && allEqual; j++) {\n            var xVali = xFullAxes[j][keyi];\n            if(keyi === 'type' && numericTypes.indexOf(xVal) !== -1 &&\n                    numericTypes.indexOf(xVali) !== -1 && xVal !== xVali) {\n                // type is special - if we find a mixture of linear and log,\n                // coerce them all to linear on flipping\n                coerceLinearX = true;\n            } else if(xVali !== xVal) allEqual = false;\n        }\n        for(j = 1; j < yFullAxes.length && allEqual; j++) {\n            var yVali = yFullAxes[j][keyi];\n            if(keyi === 'type' && numericTypes.indexOf(yVal) !== -1 &&\n                    numericTypes.indexOf(yVali) !== -1 && yVal !== yVali) {\n                // type is special - if we find a mixture of linear and log,\n                // coerce them all to linear on flipping\n                coerceLinearY = true;\n            } else if(yFullAxes[j][keyi] !== yVal) allEqual = false;\n        }\n        if(allEqual) {\n            if(coerceLinearX) layout[xFullAxes[0]._name].type = 'linear';\n            if(coerceLinearY) layout[yFullAxes[0]._name].type = 'linear';\n            swapAxisAttrs(layout, keyi, xFullAxes, yFullAxes, gd._fullLayout._dfltTitle);\n        }\n    }\n\n    // now swap x&y for any annotations anchored to these x & y\n    for(i = 0; i < gd._fullLayout.annotations.length; i++) {\n        var ann = gd._fullLayout.annotations[i];\n        if(xIds.indexOf(ann.xref) !== -1 &&\n                yIds.indexOf(ann.yref) !== -1) {\n            Lib.swapAttrs(layout.annotations[i], ['?']);\n        }\n    }\n}\n\nfunction swapAxisAttrs(layout, key, xFullAxes, yFullAxes, dfltTitle) {\n    // in case the value is the default for either axis,\n    // look at the first axis in each list and see if\n    // this key's value is undefined\n    var np = Lib.nestedProperty;\n    var xVal = np(layout[xFullAxes[0]._name], key).get();\n    var yVal = np(layout[yFullAxes[0]._name], key).get();\n    var i;\n\n    if(key === 'title') {\n        // special handling of placeholder titles\n        if(xVal && xVal.text === dfltTitle.x) {\n            xVal.text = dfltTitle.y;\n        }\n        if(yVal && yVal.text === dfltTitle.y) {\n            yVal.text = dfltTitle.x;\n        }\n    }\n\n    for(i = 0; i < xFullAxes.length; i++) {\n        np(layout, xFullAxes[i]._name + '.' + key).set(yVal);\n    }\n    for(i = 0; i < yFullAxes.length; i++) {\n        np(layout, yFullAxes[i]._name + '.' + key).set(xVal);\n    }\n}\n\nfunction isAngular(ax) {\n    return ax._id === 'angularaxis';\n}\n\nfunction moveOutsideBreak(v, ax) {\n    var len = ax._rangebreaks.length;\n    for(var k = 0; k < len; k++) {\n        var brk = ax._rangebreaks[k];\n        if(v >= brk.min && v < brk.max) {\n            return brk.max;\n        }\n    }\n    return v;\n}\n"]},"metadata":{},"sourceType":"script"}