{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\n\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nvar constants = require('./constants');\n\nvar unsupportedBrowsers = Lib.isIOS() || Lib.isSafari() || Lib.isIE();\n\nfunction compatibleAxis(ax) {\n  return ax.type === 'linear' && // y axis must be reversed but x axis mustn't be\n  ax.range[1] > ax.range[0] === (ax._id.charAt(0) === 'x');\n}\n\nmodule.exports = function plot(gd, plotinfo, cdimage, imageLayer) {\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  var supportsPixelatedImage = !(unsupportedBrowsers || gd._context._exportedPlot);\n  Lib.makeTraceGroups(imageLayer, cdimage, 'im').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var cd0 = cd[0];\n    var trace = cd0.trace;\n    var fastImage = supportsPixelatedImage && !trace._hasZ && trace._hasSource && compatibleAxis(xa) && compatibleAxis(ya);\n    trace._fastImage = fastImage;\n    var z = cd0.z;\n    var x0 = cd0.x0;\n    var y0 = cd0.y0;\n    var w = cd0.w;\n    var h = cd0.h;\n    var dx = trace.dx;\n    var dy = trace.dy;\n    var left, right, temp, top, bottom, i; // in case of log of a negative\n\n    i = 0;\n\n    while (left === undefined && i < w) {\n      left = xa.c2p(x0 + i * dx);\n      i++;\n    }\n\n    i = w;\n\n    while (right === undefined && i > 0) {\n      right = xa.c2p(x0 + i * dx);\n      i--;\n    }\n\n    i = 0;\n\n    while (top === undefined && i < h) {\n      top = ya.c2p(y0 + i * dy);\n      i++;\n    }\n\n    i = h;\n\n    while (bottom === undefined && i > 0) {\n      bottom = ya.c2p(y0 + i * dy);\n      i--;\n    }\n\n    if (right < left) {\n      temp = right;\n      right = left;\n      left = temp;\n    }\n\n    if (bottom < top) {\n      temp = top;\n      top = bottom;\n      bottom = temp;\n    } // Reduce image size when zoomed in to save memory\n\n\n    if (!fastImage) {\n      var extra = 0.5; // half the axis size\n\n      left = Math.max(-extra * xa._length, left);\n      right = Math.min((1 + extra) * xa._length, right);\n      top = Math.max(-extra * ya._length, top);\n      bottom = Math.min((1 + extra) * ya._length, bottom);\n    }\n\n    var imageWidth = Math.round(right - left);\n    var imageHeight = Math.round(bottom - top); // if image is entirely off-screen, don't even draw it\n\n    var isOffScreen = imageWidth <= 0 || imageHeight <= 0;\n\n    if (isOffScreen) {\n      var noImage = plotGroup.selectAll('image').data([]);\n      noImage.exit().remove();\n      return;\n    } // Create a new canvas and draw magnified pixels on it\n\n\n    function drawMagnifiedPixelsOnCanvas(readPixel) {\n      var canvas = document.createElement('canvas');\n      canvas.width = imageWidth;\n      canvas.height = imageHeight;\n      var context = canvas.getContext('2d');\n\n      var ipx = function (i) {\n        return Lib.constrain(Math.round(xa.c2p(x0 + i * dx) - left), 0, imageWidth);\n      };\n\n      var jpx = function (j) {\n        return Lib.constrain(Math.round(ya.c2p(y0 + j * dy) - top), 0, imageHeight);\n      };\n\n      var cr = constants.colormodel[trace.colormodel];\n      var colormodel = cr.colormodel || trace.colormodel;\n      var fmt = cr.fmt;\n      var c;\n\n      for (i = 0; i < cd0.w; i++) {\n        var ipx0 = ipx(i);\n        var ipx1 = ipx(i + 1);\n        if (ipx1 === ipx0 || isNaN(ipx1) || isNaN(ipx0)) continue;\n\n        for (var j = 0; j < cd0.h; j++) {\n          var jpx0 = jpx(j);\n          var jpx1 = jpx(j + 1);\n          if (jpx1 === jpx0 || isNaN(jpx1) || isNaN(jpx0) || !readPixel(i, j)) continue;\n          c = trace._scaler(readPixel(i, j));\n\n          if (c) {\n            context.fillStyle = colormodel + '(' + fmt(c).join(',') + ')';\n          } else {\n            // Return a transparent pixel\n            context.fillStyle = 'rgba(0,0,0,0)';\n          }\n\n          context.fillRect(ipx0, jpx0, ipx1 - ipx0, jpx1 - jpx0);\n        }\n      }\n\n      return canvas;\n    }\n\n    var image3 = plotGroup.selectAll('image').data([cd]);\n    image3.enter().append('svg:image').attr({\n      xmlns: xmlnsNamespaces.svg,\n      preserveAspectRatio: 'none'\n    });\n    image3.exit().remove(); // Pixelated image rendering\n    // http://phrogz.net/tmp/canvas_image_zoom.html\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering\n\n    image3.attr('style', 'image-rendering: optimizeSpeed; image-rendering: -moz-crisp-edges; image-rendering: -o-crisp-edges; image-rendering: -webkit-optimize-contrast; image-rendering: optimize-contrast; image-rendering: crisp-edges; image-rendering: pixelated;');\n    var p = new Promise(function (resolve) {\n      if (trace._hasZ) {\n        resolve();\n      } else if (trace._hasSource) {\n        // Check if canvas already exists and has the right data\n        if (trace._canvas && trace._canvas.el.width === w && trace._canvas.el.height === h && trace._canvas.source === trace.source) {\n          resolve();\n        } else {\n          // Create a canvas and transfer image onto it to access pixel information\n          var canvas = document.createElement('canvas');\n          canvas.width = w;\n          canvas.height = h;\n          var context = canvas.getContext('2d');\n          trace._image = trace._image || new Image();\n          var image = trace._image;\n\n          image.onload = function () {\n            context.drawImage(image, 0, 0);\n            trace._canvas = {\n              el: canvas,\n              source: trace.source\n            };\n            resolve();\n          };\n\n          image.setAttribute('src', trace.source);\n        }\n      }\n    }).then(function () {\n      var href, canvas;\n\n      if (trace._hasZ) {\n        canvas = drawMagnifiedPixelsOnCanvas(function (i, j) {\n          return z[j][i];\n        });\n        href = canvas.toDataURL('image/png');\n      } else if (trace._hasSource) {\n        if (fastImage) {\n          href = trace.source;\n        } else {\n          var context = trace._canvas.el.getContext('2d');\n\n          var data = context.getImageData(0, 0, w, h).data;\n          canvas = drawMagnifiedPixelsOnCanvas(function (i, j) {\n            var index = 4 * (j * w + i);\n            return [data[index], data[index + 1], data[index + 2], data[index + 3]];\n          });\n          href = canvas.toDataURL('image/png');\n        }\n      }\n\n      image3.attr({\n        'xlink:href': href,\n        height: imageHeight,\n        width: imageWidth,\n        x: left,\n        y: top\n      });\n    });\n\n    gd._promises.push(p);\n  });\n};","map":{"version":3,"sources":["C:/Users/vlasoks/Documents/GitHub/SUPE-map-demo/node_modules/plotly.js/src/traces/image/plot.js"],"names":["d3","require","Lib","xmlnsNamespaces","constants","unsupportedBrowsers","isIOS","isSafari","isIE","compatibleAxis","ax","type","range","_id","charAt","module","exports","plot","gd","plotinfo","cdimage","imageLayer","xa","xaxis","ya","yaxis","supportsPixelatedImage","_context","_exportedPlot","makeTraceGroups","each","cd","plotGroup","select","cd0","trace","fastImage","_hasZ","_hasSource","_fastImage","z","x0","y0","w","h","dx","dy","left","right","temp","top","bottom","i","undefined","c2p","extra","Math","max","_length","min","imageWidth","round","imageHeight","isOffScreen","noImage","selectAll","data","exit","remove","drawMagnifiedPixelsOnCanvas","readPixel","canvas","document","createElement","width","height","context","getContext","ipx","constrain","jpx","j","cr","colormodel","fmt","c","ipx0","ipx1","isNaN","jpx0","jpx1","_scaler","fillStyle","join","fillRect","image3","enter","append","attr","xmlns","svg","preserveAspectRatio","p","Promise","resolve","_canvas","el","source","_image","Image","image","onload","drawImage","setAttribute","then","href","toDataURL","getImageData","index","x","y","_promises","push"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../lib');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nvar constants = require('./constants');\n\nvar unsupportedBrowsers = Lib.isIOS() || Lib.isSafari() || Lib.isIE();\n\nfunction compatibleAxis(ax) {\n    return ax.type === 'linear' &&\n        // y axis must be reversed but x axis mustn't be\n        ((ax.range[1] > ax.range[0]) === (ax._id.charAt(0) === 'x'));\n}\n\nmodule.exports = function plot(gd, plotinfo, cdimage, imageLayer) {\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    var supportsPixelatedImage = !(unsupportedBrowsers || gd._context._exportedPlot);\n\n    Lib.makeTraceGroups(imageLayer, cdimage, 'im').each(function(cd) {\n        var plotGroup = d3.select(this);\n        var cd0 = cd[0];\n        var trace = cd0.trace;\n        var fastImage = supportsPixelatedImage && !trace._hasZ && trace._hasSource && compatibleAxis(xa) && compatibleAxis(ya);\n        trace._fastImage = fastImage;\n\n        var z = cd0.z;\n        var x0 = cd0.x0;\n        var y0 = cd0.y0;\n        var w = cd0.w;\n        var h = cd0.h;\n        var dx = trace.dx;\n        var dy = trace.dy;\n\n        var left, right, temp, top, bottom, i;\n        // in case of log of a negative\n        i = 0;\n        while(left === undefined && i < w) {\n            left = xa.c2p(x0 + i * dx);\n            i++;\n        }\n        i = w;\n        while(right === undefined && i > 0) {\n            right = xa.c2p(x0 + i * dx);\n            i--;\n        }\n        i = 0;\n        while(top === undefined && i < h) {\n            top = ya.c2p(y0 + i * dy);\n            i++;\n        }\n        i = h;\n        while(bottom === undefined && i > 0) {\n            bottom = ya.c2p(y0 + i * dy);\n            i--;\n        }\n\n        if(right < left) {\n            temp = right;\n            right = left;\n            left = temp;\n        }\n\n        if(bottom < top) {\n            temp = top;\n            top = bottom;\n            bottom = temp;\n        }\n\n        // Reduce image size when zoomed in to save memory\n        if(!fastImage) {\n            var extra = 0.5; // half the axis size\n            left = Math.max(-extra * xa._length, left);\n            right = Math.min((1 + extra) * xa._length, right);\n            top = Math.max(-extra * ya._length, top);\n            bottom = Math.min((1 + extra) * ya._length, bottom);\n        }\n\n        var imageWidth = Math.round(right - left);\n        var imageHeight = Math.round(bottom - top);\n\n        // if image is entirely off-screen, don't even draw it\n        var isOffScreen = (imageWidth <= 0 || imageHeight <= 0);\n        if(isOffScreen) {\n            var noImage = plotGroup.selectAll('image').data([]);\n            noImage.exit().remove();\n            return;\n        }\n\n        // Create a new canvas and draw magnified pixels on it\n        function drawMagnifiedPixelsOnCanvas(readPixel) {\n            var canvas = document.createElement('canvas');\n            canvas.width = imageWidth;\n            canvas.height = imageHeight;\n            var context = canvas.getContext('2d');\n\n            var ipx = function(i) {return Lib.constrain(Math.round(xa.c2p(x0 + i * dx) - left), 0, imageWidth);};\n            var jpx = function(j) {return Lib.constrain(Math.round(ya.c2p(y0 + j * dy) - top), 0, imageHeight);};\n\n            var cr = constants.colormodel[trace.colormodel];\n            var colormodel = (cr.colormodel || trace.colormodel);\n            var fmt = cr.fmt;\n            var c;\n            for(i = 0; i < cd0.w; i++) {\n                var ipx0 = ipx(i); var ipx1 = ipx(i + 1);\n                if(ipx1 === ipx0 || isNaN(ipx1) || isNaN(ipx0)) continue;\n                for(var j = 0; j < cd0.h; j++) {\n                    var jpx0 = jpx(j); var jpx1 = jpx(j + 1);\n                    if(jpx1 === jpx0 || isNaN(jpx1) || isNaN(jpx0) || !readPixel(i, j)) continue;\n                    c = trace._scaler(readPixel(i, j));\n                    if(c) {\n                        context.fillStyle = colormodel + '(' + fmt(c).join(',') + ')';\n                    } else {\n                        // Return a transparent pixel\n                        context.fillStyle = 'rgba(0,0,0,0)';\n                    }\n                    context.fillRect(ipx0, jpx0, ipx1 - ipx0, jpx1 - jpx0);\n                }\n            }\n\n            return canvas;\n        }\n\n        var image3 = plotGroup.selectAll('image')\n            .data([cd]);\n\n        image3.enter().append('svg:image').attr({\n            xmlns: xmlnsNamespaces.svg,\n            preserveAspectRatio: 'none'\n        });\n\n        image3.exit().remove();\n\n        // Pixelated image rendering\n        // http://phrogz.net/tmp/canvas_image_zoom.html\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/image-rendering\n        image3\n            .attr('style', 'image-rendering: optimizeSpeed; image-rendering: -moz-crisp-edges; image-rendering: -o-crisp-edges; image-rendering: -webkit-optimize-contrast; image-rendering: optimize-contrast; image-rendering: crisp-edges; image-rendering: pixelated;');\n\n        var p = new Promise(function(resolve) {\n            if(trace._hasZ) {\n                resolve();\n            } else if(trace._hasSource) {\n                // Check if canvas already exists and has the right data\n                if(\n                    trace._canvas &&\n                    trace._canvas.el.width === w &&\n                    trace._canvas.el.height === h &&\n                    trace._canvas.source === trace.source\n                ) {\n                    resolve();\n                } else {\n                    // Create a canvas and transfer image onto it to access pixel information\n                    var canvas = document.createElement('canvas');\n                    canvas.width = w;\n                    canvas.height = h;\n                    var context = canvas.getContext('2d');\n\n                    trace._image = trace._image || new Image();\n                    var image = trace._image;\n                    image.onload = function() {\n                        context.drawImage(image, 0, 0);\n                        trace._canvas = {\n                            el: canvas,\n                            source: trace.source\n                        };\n                        resolve();\n                    };\n                    image.setAttribute('src', trace.source);\n                }\n            }\n        })\n        .then(function() {\n            var href, canvas;\n            if(trace._hasZ) {\n                canvas = drawMagnifiedPixelsOnCanvas(function(i, j) {return z[j][i];});\n                href = canvas.toDataURL('image/png');\n            } else if(trace._hasSource) {\n                if(fastImage) {\n                    href = trace.source;\n                } else {\n                    var context = trace._canvas.el.getContext('2d');\n                    var data = context.getImageData(0, 0, w, h).data;\n                    canvas = drawMagnifiedPixelsOnCanvas(function(i, j) {\n                        var index = 4 * (j * w + i);\n                        return [\n                            data[index],\n                            data[index + 1],\n                            data[index + 2],\n                            data[index + 3]\n                        ];\n                    });\n                    href = canvas.toDataURL('image/png');\n                }\n            }\n\n            image3.attr({\n                'xlink:href': href,\n                height: imageHeight,\n                width: imageWidth,\n                x: left,\n                y: top\n            });\n        });\n\n        gd._promises.push(p);\n    });\n};\n"]},"metadata":{},"sourceType":"script"}