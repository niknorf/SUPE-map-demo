{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vlasoks\\\\Documents\\\\GitHub\\\\SUPE-map-demo\\\\src\\\\components\\\\Map2.js\";\nimport React from 'react';\nimport { Map, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport '../map.css';\nimport 'react-leaflet-markercluster/dist/styles.min.css';\nimport customData from '../data_map.json';\nimport buildingsPolygon from '../building-polygon.json';\nimport L from 'leaflet';\ndelete L.Icon.Default.prototype._getIconUrl;\nexport class GeneralMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildingsPolygon: ''\n    };\n    this.showBuilding = this.showBuilding.bind(this);\n  }\n\n  showBuilding(e) {\n    console.log(e); // this.setState({filterText: filterText});\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"markercluster-map\",\n      onClick: true,\n      center: position,\n      zoom: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), \" \", /*#__PURE__*/React.createElement(GeoJsonLayer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\nconst position = [60.08, 30.33];\n\nfunction PlaceMarkers() {\n  var markers = []; // data prossesing, adding markers\n\n  for (var i = 0; i < customData.length; i++) {\n    var obj = customData[i];\n    var title = obj.loss_probability;\n    var icon_url = 'red.png';\n\n    if (parseFloat(obj.loss_probability) <= 20) {\n      icon_url = 'green.png';\n    } else if (parseFloat(obj.loss_probability) >= 21 && parseFloat(obj.loss_probability) <= 70) {\n      icon_url = 'yellow.png';\n    }\n\n    const m_icon = new L.Icon({\n      iconUrl: require('../img/' + icon_url),\n      iconSize: [40, 40]\n    });\n    markers.push( /*#__PURE__*/React.createElement(Marker, {\n      position: [obj.lat, obj.lon],\n      key: i,\n      icon: m_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }\n    }));\n  }\n\n  return markers;\n}\n\nfunction GeoJsonLayer() {\n  // console.log(buildingsPolygon);\n  return /*#__PURE__*/React.createElement(GeoJSON, {\n    key: 'building_polygons',\n    data: buildingsPolygon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/vlasoks/Documents/GitHub/SUPE-map-demo/src/components/Map2.js"],"names":["React","Map","TileLayer","Marker","Popup","GeoJSON","MarkerClusterGroup","customData","buildingsPolygon","L","Icon","Default","prototype","_getIconUrl","GeneralMap","Component","constructor","props","state","showBuilding","bind","e","console","log","render","position","PlaceMarkers","markers","i","length","obj","title","loss_probability","icon_url","parseFloat","m_icon","iconUrl","require","iconSize","push","lat","lon","GeoJsonLayer"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Map, TileLayer, Marker, Popup, GeoJSON} from 'react-leaflet';\r\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\r\nimport '../map.css';\r\nimport 'react-leaflet-markercluster/dist/styles.min.css';\r\nimport customData from '../data_map.json';\r\nimport buildingsPolygon from '../building-polygon.json'\r\nimport L from 'leaflet';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nexport class GeneralMap extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buildingsPolygon: ''\r\n    };\r\n    this.showBuilding = this.showBuilding.bind(this);\r\n  }\r\n\r\n  showBuilding(e) {\r\n  console.log(e);\r\n  // this.setState({filterText: filterText});\r\n}\r\n\r\n  render() {\r\n    return (<div>\r\n      <Map className=\"markercluster-map\" onClick center={position} zoom={16}>\r\n        <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\" attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"/> {/* <MarkerClusterGroup>\n              <PlaceMarkers/>\n            </MarkerClusterGroup> */\r\n        }\r\n        <GeoJsonLayer/>\r\n      </Map>\r\n    </div>);\r\n  }\r\n}\r\n\r\nconst position = [60.08, 30.33];\r\n\r\nfunction PlaceMarkers() {\r\n  var markers = [];\r\n\r\n  // data prossesing, adding markers\r\n  for (var i = 0; i < customData.length; i++) {\r\n    var obj = customData[i];\r\n    var title = obj.loss_probability;\r\n\r\n    var icon_url = 'red.png';\r\n\r\n    if (parseFloat(obj.loss_probability) <= 20) {\r\n      icon_url = 'green.png';\r\n    } else if (parseFloat(obj.loss_probability) >= 21 && parseFloat(obj.loss_probability) <= 70) {\r\n      icon_url = 'yellow.png';\r\n    }\r\n\r\n    const m_icon = new L.Icon({\r\n      iconUrl: require('../img/' + icon_url),\r\n      iconSize: [40, 40]\r\n    });\r\n\r\n    markers.push(<Marker position={[obj.lat, obj.lon]} key={i} icon={m_icon}></Marker>);\r\n\r\n  }\r\n\r\n  return (markers)\r\n}\r\n\r\nfunction GeoJsonLayer() {\r\n\r\n  // console.log(buildingsPolygon);\r\n  return <GeoJSON key={'building_polygons'} data={buildingsPolygon}/>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}