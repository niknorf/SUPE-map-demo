{"ast":null,"code":"var _jsxFileName = \"/Users/nikitavolynkin/Documents/map/newmap/SUPE-map-demo/src/components/Map.js\";\nimport React from 'react';\nimport { Map, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport '../map.css';\nimport 'react-leaflet-markercluster/dist/styles.min.css';\nimport customData from '../data_map.json';\nimport buildingsPolygon from '../building-polygon.json';\nimport L from 'leaflet';\ndelete L.Icon.Default.prototype._getIconUrl;\nexport class GeneralMap extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"markercluster-map\",\n      center: position,\n      zoom: 16,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\",\n      attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MarkerClusterGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PlaceMarkers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(GeoJsonLayer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\nconst position = [60.08, 30.33];\n\nfunction PlaceMarkers() {\n  var markers = []; // data prossesing, adding markers\n\n  for (var i = 0; i < customData.length; i++) {\n    var obj = customData[i];\n    var title = obj.loss_probability;\n    var icon_url = 'red.png';\n\n    if (parseFloat(obj.loss_probability) <= 20) {\n      icon_url = 'green.png';\n    } else if (parseFloat(obj.loss_probability) >= 21 && parseFloat(obj.loss_probability) <= 70) {\n      icon_url = 'yellow.png';\n    }\n\n    const m_icon = new L.Icon({\n      iconUrl: require('../img/' + icon_url),\n      iconSize: [40, 40]\n    });\n    markers.push( /*#__PURE__*/React.createElement(Marker, {\n      position: [obj.lat, obj.lon],\n      key: i,\n      icon: m_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 18\n      }\n    }));\n  }\n\n  return markers;\n}\n\nfunction GeoJsonLayer() {\n  // console.log(buildingsPolygon);\n  return /*#__PURE__*/React.createElement(GeoJSON, {\n    key: 'building_polygons',\n    data: buildingsPolygon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  });\n}","map":{"version":3,"sources":["/Users/nikitavolynkin/Documents/map/newmap/SUPE-map-demo/src/components/Map.js"],"names":["React","Map","TileLayer","Marker","Popup","GeoJSON","MarkerClusterGroup","customData","buildingsPolygon","L","Icon","Default","prototype","_getIconUrl","GeneralMap","Component","render","position","PlaceMarkers","markers","i","length","obj","title","loss_probability","icon_url","parseFloat","m_icon","iconUrl","require","iconSize","push","lat","lon","GeoJsonLayer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,EAAaC,SAAb,EAAwBC,MAAxB,EAAgCC,KAAhC,EAAuCC,OAAvC,QAAqD,eAArD;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAO,YAAP;AACA,OAAO,iDAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,OAAOA,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAeC,SAAf,CAAyBC,WAAhC;AAEA,OAAQ,MAAMC,UAAN,SAAyBd,KAAK,CAACe,SAA/B,CAAwC;AAC9CC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAqC,MAAA,MAAM,EAAEC,QAA7C;AAAuD,MAAA,IAAI,EAAE,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,sEAAf;AAAsF,MAAA,WAAW,EAAC,0EAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,eAKI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADF,CADF;AAYD;;AAd6C;AAiBhD,MAAMA,QAAQ,GAAG,CAAC,KAAD,EAAQ,KAAR,CAAjB;;AAEA,SAASC,YAAT,GAAwB;AACtB,MAAIC,OAAO,GAAG,EAAd,CADsB,CAGtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGb,UAAU,CAACc,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,QAAIE,GAAG,GAAGf,UAAU,CAACa,CAAD,CAApB;AACA,QAAIG,KAAK,GAAGD,GAAG,CAACE,gBAAhB;AAEE,QAAIC,QAAQ,GAAG,SAAf;;AAEA,QAAIC,UAAU,CAACJ,GAAG,CAACE,gBAAL,CAAV,IAAoC,EAAxC,EAA4C;AAC1CC,MAAAA,QAAQ,GAAG,WAAX;AACD,KAFD,MAEO,IAAIC,UAAU,CAACJ,GAAG,CAACE,gBAAL,CAAV,IAAoC,EAApC,IAA0CE,UAAU,CAACJ,GAAG,CAACE,gBAAL,CAAV,IAAoC,EAAlF,EAAsF;AAC3FC,MAAAA,QAAQ,GAAG,YAAX;AACD;;AAEL,UAAME,MAAM,GAAK,IAAIlB,CAAC,CAACC,IAAN,CAAW;AACxBkB,MAAAA,OAAO,EAAEC,OAAO,CAAC,YAAYJ,QAAb,CADQ;AAExBK,MAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL;AAFc,KAAX,CAAjB;AAKEX,IAAAA,OAAO,CAACY,IAAR,eAAa,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACT,GAAG,CAACU,GAAL,EAAUV,GAAG,CAACW,GAAd,CAAlB;AAAsC,MAAA,GAAG,EAAEb,CAA3C;AAA+C,MAAA,IAAI,EAAEO,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAb;AAEH;;AAEC,SAAQR,OAAR;AACD;;AAED,SAASe,YAAT,GAAuB;AAEvB;AACA,sBAAO,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAE,mBAAd;AAAmC,IAAA,IAAI,EAAE1B,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACC","sourcesContent":["import React from 'react';\nimport {Map, TileLayer, Marker, Popup, GeoJSON} from 'react-leaflet';\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\nimport '../map.css';\nimport 'react-leaflet-markercluster/dist/styles.min.css';\nimport customData from '../data_map.json';\nimport buildingsPolygon from '../building-polygon.json'\nimport L from 'leaflet';\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nexport  class GeneralMap extends React.Component{\n  render(){\n    return (\n      <div>\n        <Map className=\"markercluster-map\"   center={position} zoom={16}>\n            <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\" attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"/>\n            <MarkerClusterGroup>\n              <PlaceMarkers/>\n            </MarkerClusterGroup>\n            <GeoJsonLayer/>\n          </Map>\n      </div>\n\n    );\n  }\n}\n\nconst position = [60.08, 30.33];\n\nfunction PlaceMarkers() {\n  var markers = [];\n\n  // data prossesing, adding markers\n  for (var i = 0; i < customData.length; i++) {\n    var obj = customData[i];\n    var title = obj.loss_probability;\n\n      var icon_url = 'red.png';\n\n      if (parseFloat(obj.loss_probability) <= 20) {\n        icon_url = 'green.png';\n      } else if (parseFloat(obj.loss_probability) >= 21 && parseFloat(obj.loss_probability) <= 70) {\n        icon_url = 'yellow.png';\n      }\n\n  const m_icon =   new L.Icon({\n      iconUrl: require('../img/' + icon_url),\n      iconSize: [40, 40]\n    });\n\n    markers.push(<Marker position={[obj.lat, obj.lon]} key={i}  icon={m_icon} ></Marker>);\n\n}\n\n  return (markers)\n}\n\nfunction GeoJsonLayer(){\n\n// console.log(buildingsPolygon);\nreturn <GeoJSON key={'building_polygons'} data={buildingsPolygon}/>;\n}\n"]},"metadata":{},"sourceType":"module"}